{"version":3,"sources":["components/CourseVideo/CourseVideo.module.css","components/CourseVideo/Discussions/Discussions.module.css","components/CourseVideo/Exercises/Exercises.module.css","components/CourseVideo/Updates/Updates.module.css","public/CoursePlayIcons/edit-3.svg","public/CoursePlayIcons/video.svg","public/CoursePlayIcons/list.svg","public/CoursePlayIcons/edit-3-white.svg","public/CoursePlayIcons/video-white.svg","public/CoursePlayIcons/list-white.svg","public/CoursePlayIcons/money.svg","public/CoursePlayIcons/unlock-alt-solid.svg","public/CoursePlayIcons/cat.svg","public/CoursePlayIcons/Pause.svg","public/CoursePlayIcons/play.svg","public/CoursePlayIcons/lightbulb.svg","public/CoursePlayIcons/check-circle.svg","components/CourseVideo/Discussions/Discussions.js","components/CourseVideo/Exercises/Exercises.js","components/CourseVideo/Updates/Updates.js","public/images/3a.webp","public/images/3b.webp","public/images/3c.webp","public/images/3d.webp","components/CourseVideo/CourseVideo.js"],"names":["module","exports","Alert","props","elevation","variant","Discussions","module_id","threads","createThread","followUp","fetchSlots","slots","course_slug","profile","useState","commentInput","setCommentInput","newDoubtOpen","setNewDoubtOpen","isAnswer","setIsAnswer","snackOpen","setSnackOpen","Array","length","fill","open","setOpen","slotBooked","handleClose","event","reason","commentForm","useRef","handleSubmit","e","id","index","preventDefault","isFinal","includes","document","getElementById","value","newOpen","console","log","answer","className","styles","container","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","onClose","severity","classNames","flexRow","justifyBetween","discussionHeading","Button","onClick","doubtBtn","doubtBtnLarge","fontSize","Tooltip","title","doubtBtnSmall","placement","IconButton","discussions","flexColumn","map","item","i","questionContainer","question","Avatar","details","date","description","questionDesc","desc","image","descImages","Grid","spacing","md","descImage","src","a","createElement","href","target","download","click","handleImageClick","alt","followups","data","isAnswered","filter","is_final_answer","username","user","is_staff","onSubmit","inputContainer","ref","onChange","inputElement","placeholder","required","type","actionBtns","style","visibility","width","position","pointerEvents","Switch","checked","findIndex","handleToggleIsAnswer","name","inputProps","handleNewSubmit","newData","images","timeSlot","Comments","Accordion","accordianContainer","expanded","AccordionSummary","expandIcon","aria-controls","accordianSummary","answerExpanded","answerCollapsed","AccordionDetails","descContainer","NewDoubtModal","setTitle","setDesc","setImages","timeSlots","setTimeSlots","showTimeSlots","setShowTimeSlots","loading","setLoading","selectedSlot","setSelectedSlot","React","useEffect","successSlots","tempSlots","slot","Date","starts_at","dValue","getDate","getMonth","getFullYear","time","getHours","getMinutes","handleVideoClick","Dialog","aria-labelledby","aria-describedby","zIndex","dialogContainer","formData","FormData","isLiveDoubt","Boolean","toISOString","forEach","append","file","DialogTitle","DialogContent","dialogContentContainer","modalInputContainer","htmlFor","minLength","addImagesContainer","imgContainer","deleteBtn","addImagesBtn","component","alert","files","reader","FileReader","readAsDataURL","error","onloadend","result","accept","opacity","timeSlotContainer","CircularProgress","slotSelected","DialogActions","tooltip","liveDisBtn","actionBtn","negative","positive","autoFocus","withRouter","exercises","currentExercise","history","quizes","assignments","quiz","submitQuiz","nextContent","setSelectedAnswers","currentQuiz","setCurrentQuiz","selectedAns","setSelectedAns","wrongAns","currentAssignment","setCurrentAssignment","achieved","total","score","setScore","successOpen","setSuccessOpen","warningOpen","setWarningOpen","quizSubmitted","setQuizSubmitted","useParams","course","tabOpen","element","scrollIntoView","behavior","tempSelect","push","tile","answers","questions","questItem","userSelected","currQuiz","find","slug","currAssn","handleSelectAnswer","questionIndex","newSelectedAns","successQuizSubmitted","titleContainer","exercisesContainer","quizContainer","quizHeader","quiz_submission","additional_info","exercise","multiple","wrong","submitBtnContainer","quizId","ans","options","option","is_correct","tempScore","flag","onClickSubmit","submitBtn","message","assignment","ExercisesList","quizesListContainer","quizesList","location","pathname","progressDiv","toString","assignmentList","toLowerCase","split","join","ExerciseRender","quizIndex","selected","setSelected","handleSelectOption","sel","optionsContainer","sm","xs","selectedOption","wrongOption","Checkbox","color","checkbox","answer_type","answer_image","answer_text","ExerciseRenderSingleChoice","questionImage","Radio","CustomDialog","dialogTitle","successTitle","warningTitle","customDialog","successDialog","warningDialog","top","left","transform","CircularProgressWithLabel","Box","borderRadius","boxShadow","display","bottom","right","alignItems","justifyContent","Typography","Math","round","Assignment","assignmentsContainer","height","frameBorder","content_info","source","ConfettiAnim","defaultOptions","loop","autoplay","animationData","rendererSettings","preserveAspectRatio","isStopped","isPaused","Updates","setData","timers","setTimers","axios","get","params","then","res","isDone","renderer","hours","minutes","seconds","completed","mDate","moment","utcOffset","daysInHours","onComplete","innerItem","newItem","splice","setTimeout","handleCompleteTimer","disabled","joinNowBtn","VideoSection","currentVideo","onClickContent","introduction","contentDone","progress","courseDataId","handleQuizSelection","handleClickSection","playingAnimation","requested","setRequested","done","setDone","success","failed","videoSection","videoTitle","background","videoContainer","video","muted","controls","onEnd","onProgress","videoProgress","percent","onLoaded","maxWidth","margin","videoList","content_type","listItemVideo","videoAction","pauseIcon","playIcon","bulbIcon","videoDetail","checkIcon","stopPropagation","downloadBtn","CourseModules","modules","currentModule","robocoins","onClickModule","modulesContainer","active","locked","metadata","robocoins_to_unlock","moduleCard","activeCard","showLocked","moduleIcon","catIcon","content","items","mediaItem","penIconWhite","penIcon","num_of_assignments","videoIconWhite","videoIcon","num_of_videos","listIconWhite","listIcon","num_of_quizzes","coins","coinsIcon","lockedIcon","moduleLocked","lockedHeading","coinsNeeded","CourseVideo","courseData","moduleData","moduleLoading","sections","drawerWidth","setDrawerWidth","setBorderRadius","useStyles","makeStyles","theme","root","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","easeOut","enteringScreen","menuButton","marginRight","hide","drawer","flexShrink","drawerPaper","border","overflow","drawerHeader","padding","mixins","toolbar","flexGrow","contentShift","innerWidth","window","useLayoutEffect","handleDrawerWidth","addEventListener","removeEventListener","setCurrentVideo","courseName","setCourseName","contents","content_slug","nextIndex","nextModule","moduleSlug","classes","useTheme","quizData","optionImage1","optionImage2","optionImage3","optionImage4","answerType","isMultiple","Drawer","anchor","paper","outline","direction","sectionsHeader","sectionItem","activeItem","underline","courseModules","moduleHeader","slice","clsx","roboCoinsContainer","menuBurger","burger","roboCoins","start","end","setModuleLoading","fetchCourseData","fetchModuleData","Object","keys","courses","constructor"],"mappings":"8FACAA,EAAOC,QAAU,CAAC,QAAU,6BAA6B,WAAa,gCAAgC,UAAY,+BAA+B,mBAAqB,wCAAwC,UAAY,+BAA+B,eAAiB,oCAAoC,YAAc,iCAAiC,cAAgB,mCAAmC,iBAAmB,sCAAsC,WAAa,gCAAgC,MAAQ,2BAA2B,MAAQ,2BAA2B,aAAe,kCAAkC,cAAgB,mCAAmC,aAAe,kCAAkC,UAAY,+BAA+B,cAAgB,mCAAmC,YAAc,iCAAiC,YAAc,iCAAiC,YAAc,iCAAiC,eAAiB,oCAAoC,YAAc,iCAAiC,WAAa,gCAAgC,UAAY,+BAA+B,WAAa,gCAAgC,WAAa,gCAAgC,OAAS,4BAA4B,UAAY,+BAA+B,WAAa,gCAAgC,aAAe,kCAAkC,WAAa,gCAAgC,OAAS,4BAA4B,UAAY,+BAA+B,QAAU,6BAA6B,QAAU,6BAA6B,YAAc,iCAAiC,WAAa,gCAAgC,WAAa,gCAAgC,iBAAmB,sCAAsC,eAAiB,oCAAoC,YAAc,mC,o+NCAh1DD,EAAOC,QAAU,CAAC,QAAU,6BAA6B,WAAa,gCAAgC,UAAY,+BAA+B,kBAAoB,uCAAuC,mBAAqB,wCAAwC,cAAgB,mCAAmC,gBAAkB,qCAAqC,kBAAoB,uCAAuC,MAAQ,2BAA2B,KAAO,0BAA0B,SAAW,8BAA8B,eAAiB,oCAAoC,WAAa,gCAAgC,uBAAyB,4CAA4C,mBAAqB,wCAAwC,YAAc,iCAAiC,eAAiB,oCAAoC,YAAc,iCAAiC,kBAAoB,uCAAuC,SAAW,8BAA8B,UAAY,+BAA+B,aAAe,kCAAkC,aAAe,kCAAkC,UAAY,+BAA+B,WAAa,gCAAgC,SAAW,8BAA8B,QAAU,6BAA6B,aAAe,kCAAkC,WAAa,gCAAgC,aAAe,kCAAkC,iBAAmB,sCAAsC,gBAAkB,qCAAqC,eAAiB,oCAAoC,SAAW,8BAA8B,SAAW,8BAA8B,aAAe,kCAAkC,oBAAsB,yCAAyC,QAAU,6BAA6B,cAAgB,mCAAmC,cAAgB,qC,oBCA34DD,EAAOC,QAAU,CAAC,QAAU,2BAA2B,WAAa,8BAA8B,oBAAsB,uCAAuC,OAAS,0BAA0B,YAAc,+BAA+B,UAAY,6BAA6B,eAAiB,kCAAkC,mBAAqB,sCAAsC,cAAgB,iCAAiC,WAAa,8BAA8B,mBAAqB,sCAAsC,kBAAoB,qCAAqC,iBAAmB,oCAAoC,OAAS,0BAA0B,aAAe,gCAAgC,eAAiB,kCAAkC,WAAa,8BAA8B,WAAa,8BAA8B,KAAO,wBAAwB,YAAc,+BAA+B,eAAiB,kCAAkC,YAAc,+BAA+B,UAAY,6BAA6B,cAAgB,iCAAiC,eAAiB,kCAAkC,SAAW,4BAA4B,YAAc,+BAA+B,aAAe,gCAAgC,aAAe,gCAAgC,cAAgB,iCAAiC,cAAgB,iCAAiC,YAAc,+BAA+B,qBAAuB,wCAAwC,SAAW,8B,m9lGCA5iDD,EAAOC,QAAU,CAAC,QAAU,yBAAyB,WAAa,4BAA4B,oBAAsB,qCAAqC,OAAS,wBAAwB,YAAc,6BAA6B,UAAY,2BAA2B,eAAiB,gCAAgC,mBAAqB,oCAAoC,cAAgB,+BAA+B,WAAa,4BAA4B,mBAAqB,oCAAoC,kBAAoB,mCAAmC,iBAAmB,kCAAkC,OAAS,wBAAwB,aAAe,8BAA8B,eAAiB,gCAAgC,WAAa,4BAA4B,WAAa,4BAA4B,KAAO,sBAAsB,QAAU,yBAAyB,YAAc,6BAA6B,eAAiB,gCAAgC,YAAc,6BAA6B,UAAY,2BAA2B,cAAgB,+BAA+B,eAAiB,gCAAgC,SAAW,0BAA0B,YAAc,6BAA6B,aAAe,8BAA8B,aAAe,8BAA8B,cAAgB,+BAA+B,cAAgB,+BAA+B,YAAc,6BAA6B,qBAAuB,sCAAsC,SAAW,0BAA0B,WAAa,4BAA4B,SAAW,4B,qNCD5kD,MAA0B,mCCA1B,MAA0B,kCCA1B,MAA0B,iCCA1B,MAA0B,yCCA1B,MAA0B,wCCA1B,MAA0B,uCCA1B,MAA0B,kCCA1B,MAA0B,6CCA1B,MAA0B,gCCA1B,MAA0B,kCCA1B,MAA0B,iCCA1B,MAA0B,sCCA1B,MAA0B,yC,8YC8BzC,SAASC,GAAMC,GACb,OAAO,cAAC,KAAD,aAAUC,UAAW,EAAGC,QAAQ,UAAaF,IAGtD,IA0OeG,GA1OK,SAAC,GASd,IARLC,EAQI,EARJA,UACAC,EAOI,EAPJA,QACAC,EAMI,EANJA,aACAC,EAKI,EALJA,SACAC,EAII,EAJJA,WACAC,EAGI,EAHJA,MACAC,EAEI,EAFJA,YACAC,EACI,EADJA,QACI,EACoCC,mBAAS,IAD7C,mBACGC,EADH,KACiBC,EADjB,OAEoCF,oBAAS,GAF7C,mBAEGG,EAFH,KAEiBC,EAFjB,OAGoCJ,oBAAS,GAH7C,gCAI4BA,mBAAS,KAJrC,mBAIGK,EAJH,KAIaC,EAJb,OAK8BN,oBAAS,GALvC,mBAKGO,EALH,KAKcC,EALd,OAMoBR,mBAAS,IAAIS,MAAMhB,EAAQiB,QAAQC,MAAK,IAN5D,mBAMGC,EANH,KAMSC,EANT,KAYEC,EAAa,WACjBN,GAAa,IAGTO,EAAc,SAACC,EAAOC,GACX,cAAXA,GAIJT,GAAa,IAqCTU,EAAcC,mBASdC,EAAe,SAACC,EAAGC,EAAIC,GAC3BF,EAAEG,iBArBW,SAACF,EAAIC,GAClB,IAAIE,GAAU,EACVpB,EAASqB,SAASJ,KAAKG,GAAU,GACrC9B,EAAS2B,EAAIrB,EAAc,KAAMwB,GACjCE,SAASC,eAAe,UAAYN,GAAIO,MAAQ,GAChD,IAAIC,EAAO,YAAOlB,GAClBkB,EAAQP,IAAS,EACjBQ,QAAQC,IAAI,kCACZnB,EAAQiB,GAcRG,CAAOX,EAAIC,IAYb,OACE,sBAAKW,UAAWC,IAAOC,UAAvB,UACE,cAACC,GAAA,EAAD,CACEzB,KAAML,EACN+B,aAAc,CACZC,SAAU,MACVC,WAAY,UAEdC,iBAAkB,IAClBC,QAAS3B,EAPX,SASE,cAAC,GAAD,CAAO2B,QAAS3B,EAAa4B,SAAS,UAAtC,uFAKF,sBACET,UAAWU,IACTT,IAAOU,QACPV,IAAOW,eACPX,IAAOY,mBAJX,UAOE,kDACA,eAACC,EAAA,EAAD,CACEC,QAAS,kBAAM7C,GAAgB,IAC/Bd,QAAQ,WACR4C,UAAWU,IAAWT,IAAOe,SAAUf,IAAOgB,eAHhD,2BAME,cAAC,KAAD,CAAoBC,SAAS,aAE/B,cAACC,EAAA,EAAD,CACEC,MAAM,YACNpB,UAAWU,IAAWT,IAAOe,SAAUf,IAAOoB,eAC9CC,UAAU,MAHZ,SAKE,cAACC,EAAA,EAAD,CAAYR,QAAS,kBAAM7C,GAAgB,IAA3C,SACE,cAAC,KAAD,CAAoBgD,SAAS,iBAInC,qBAAKlB,UAAWU,IAAWT,IAAOuB,YAAavB,IAAOwB,YAAtD,SACGlE,EAAQmE,KAAI,SAACC,EAAMC,GAClB,OACE,sBAA0B5B,UAAWC,IAAO4B,kBAA5C,UACE,sBAAK7B,UAAWC,IAAO6B,SAAvB,UACE,qBAAK9B,UAAWC,IAAOpC,QAAvB,SACE,cAACkE,EAAA,EAAD,mBAEF,sBAAK/B,UAAWC,IAAO+B,QAAvB,UACE,6BAAKL,EAAKP,QACV,4BAAIO,EAAKM,OACT,4BAAIN,EAAKO,cACT,mBAAGlC,UAAWC,IAAOkC,aAArB,SAAoCR,EAAKS,OACxCT,EAAKU,OACJ,qBAAKrC,UAAWC,IAAOqC,WAAvB,SACE,cAACC,EAAA,EAAD,CAAMrC,WAAS,EAACsC,QAAS,EAAzB,SAEE,cAACD,EAAA,EAAD,CAAMZ,MAAI,EAACc,GAAI,EAAf,SACE,qBAAKzC,UAAWC,IAAOyC,UAAvB,SACE,qBACE3B,QAAS,kBAxGZ,SAAC4B,GACxB,IAAMC,EAAInD,SAASoD,cAAc,KACjCD,EAAEE,KAAOH,EACTC,EAAEG,OAAS,SACXH,EAAEI,UAAW,EACbJ,EAAEK,QAmGuCC,CAAiBvB,EAAKU,QACrCM,IAAKhB,EAAKU,MACVc,IAAI,uBASnBxB,EAAKyB,WAAazB,EAAKyB,UAAU5E,OAAS,GACzC,cAAC,GAAD,CACE6E,KAAM1B,EAAKyB,UACXE,WACE3B,EAAKyB,UAAUG,QAAO,SAAC5B,GAAD,OAAUA,EAAK6B,mBAClChF,OAAS,EAEduB,OACE4B,EAAKyB,UAAUG,QAAO,SAAC5B,GAAD,OAAUA,EAAK6B,mBAAiB,GAExD9E,KAAMA,EACNC,QAASA,EACTU,MAAOuC,IAGV/D,EAAQ4F,WAAa9B,EAAK+B,MAAQ7F,EAAQ8F,SACzC,uBACEC,SAAU,SAACzE,GAAD,OAAOD,EAAaC,EAAGwC,EAAKvC,GAAIwC,IAC1C5B,UAAWC,IAAO4D,eAClBC,IAAK9E,EAHP,UAKE,uBAEE+E,SAAU,SAAC5E,GAAD,OAAOnB,EAAgBmB,EAAE4D,OAAOpD,QAC1CK,UAAWC,IAAO+D,aAClBC,YAAY,UACZC,UAAQ,EACR9E,GAAI,UAAYuC,EAAKvC,GAErB+E,KAAK,SAEP,sBAAKnE,UAAWC,IAAOmE,WAAvB,UACE,uBACED,KAAK,SACLE,MAAO,CACLC,WAAY,SACZC,MAAO,EACPC,SAAU,WACVC,cAAe,UAGlB5G,EAAQ8F,UACP,cAACe,EAAA,EAAD,CACEC,QAASxG,EAASqB,SAASmC,EAAKvC,IAChC2E,SAAU,kBA9HH,SAAC3E,GAC5B,IAAMC,EAAQlB,EAASyG,WAAU,SAACjD,GAAD,OAAUA,IAASvC,KAElDhB,GADa,IAAXiB,EACU,GAAD,mBAAKlB,GAAL,CAAeiB,IAEdjB,EAASoF,QAAO,SAAC5B,GAAD,OAAUA,IAASvC,MAyHbyF,CAAqBlD,EAAKvC,KAC1C0F,KAAK,WACLC,WAAY,CAAE,aAAc,wBAGhC,cAACxD,EAAA,EAAD,CAAY4C,KAAK,SAAjB,SACE,cAAC,KAAD,YAIJ,OAlFIxC,EAAKP,MAAQQ,QAuF7B,cAAC,GAAD,CACElD,KAAMT,EACNY,YA/MsB,WAC1BX,GAAgB,IA+MZ8G,gBAhMkB,SAACC,IACvB,OAAIA,QAAJ,IAAIA,OAAJ,EAAIA,EAASnD,WACXtE,EACEF,EACA2H,EAAQnD,SACRmD,EAAQ7C,KACR6C,EAAQC,OACR,KACAD,EAAQE,SAAS/F,GACjB,KACAR,IAuLAlB,WAAYA,EACZC,MAAOA,EACPC,YAAaA,QAQfwH,GAAW,SAAC,GAAwD,IAAtD/B,EAAqD,EAArDA,KAAMC,EAA+C,EAA/CA,WAAYvD,EAAmC,EAAnCA,OAAQrB,EAA2B,EAA3BA,KAAMC,EAAqB,EAArBA,QAASU,EAAY,EAAZA,MAC3D,OACE,eAACgG,EAAA,EAAD,CACErF,UAAWC,IAAOqF,mBAClBvB,SAAU,SAAC5E,EAAGyD,GACZ,IAAIhD,EAAO,YAAOlB,GAClBkB,EAAQP,GAASuD,EACjBjE,EAAQiB,IAEV2F,SAAU7G,EAAKW,GAPjB,UASE,cAACmG,GAAA,EAAD,CACEC,WAAY,cAAC,KAAD,IACZC,gBAAc,kBACdtG,GAAG,iBAHL,SAKE,sBAAKY,UAAWC,IAAO0F,iBAAvB,UACE,+BACGrC,EAAa,WAAa,mBAD7B,OAEE,+BACGA,EAAa,cAAC,KAAD,CAAapC,SAAS,UAAa,KAC3C,OAEToC,GACC,mBACEtD,UACEtB,EAAKW,GAASY,IAAO2F,eAAiB3F,IAAO4F,gBAFjD,SAKG9F,EAAOmC,mBAKhB,cAAC4D,GAAA,EAAD,UACE,qBAAK9F,UAAWC,IAAO8F,cAAvB,SACG1C,EAAK3B,KAAI,SAACC,EAAMC,GACf,OACE,sBAAgC5B,UAAWC,IAAO6B,SAAlD,UACE,qBAAK9B,UAAWC,IAAOpC,QAAvB,SACE,cAACkE,EAAA,EAAD,mBAEF,4BAAIJ,EAAKO,gBAJDP,EAAKO,YAAcN,cAcrCoE,GAAgB,SAAC,GAOhB,IANLtH,EAMI,EANJA,KACAG,EAKI,EALJA,YACAmG,EAII,EAJJA,gBACAtH,EAGI,EAHJA,WAEAE,GACI,EAFJD,MAEI,EADJC,aACI,EACsBE,mBAAS,IAD/B,mBACGsD,EADH,KACU6E,EADV,OAEoBnI,mBAAS,IAF7B,mBAEGsE,EAFH,KAES8D,EAFT,OAGwBpI,mBAAS,IAHjC,mBAGGoH,EAHH,KAGWiB,EAHX,OAM8BrI,mBAAS,IANvC,mBAMGsI,EANH,KAMcC,EANd,OAOsCvI,oBAAS,GAP/C,mBAOGwI,EAPH,KAOkBC,EAPlB,OAQ0BzI,oBAAS,GARnC,mBAQG0I,EARH,KAQYC,EARZ,OASoC3I,mBAAS,IAT7C,mBASG4I,EATH,KASiBC,EATjB,KAWJC,IAAMC,WAAU,WACdZ,EAAS,IACTC,EAAQ,IACRC,EAAU,IACVE,EAAa,IACbE,GAAiB,GACjBE,GAAW,GACXE,EAAgB,MACf,CAACjI,IAEJ,IAiDMoI,EAAe,SAACnJ,GACpBkC,QAAQC,IAAI,cAAenC,GAC3B0I,EAAa1I,GACb,IAAIoJ,EAAYpJ,EAAM+D,KAAI,SAACsF,GACzB,IAAI/E,EAAO,IAAIgF,KAAKD,EAAKE,WACrBC,EAAM,UAAMlF,EAAKmF,UAAX,YAAwBnF,EAAKoF,WAA7B,YAA2CpF,EAAKqF,eACtDC,EAAI,UAAMtF,EAAKuF,WAAX,aAA0BvF,EAAKwF,cAGvC,OAFAT,EAAK/E,KAAOkF,EACZH,EAAKO,KAAOA,EACLP,KAETX,EAAaU,GACbN,GAAW,IAGPiB,EAAgB,uCAAG,sBAAA9E,EAAA,6DACvB6D,GAAW,GADY,SAEjB/I,EAAWE,EAAakJ,GAFP,OAmBvBP,GAAiB,GAnBM,2CAAH,qDAiCtB,OACE,cAACoB,GAAA,EAAD,CACEjJ,KAAMA,EACN8B,QAAS3B,EACT+I,kBAAgB,qBAChBC,mBAAiB,2BACjBxD,MAAO,CAAEyD,OAAQ,QACjB9H,UAAWC,IAAO8H,gBANpB,SAQE,uBAAMnE,SA/EW,SAACzE,GACpBA,EAAEG,iBAEF,IAAM0I,EAAW,IAAIC,SACjB5E,EAAO,CACTvB,SAAUV,EACVgB,OACA8F,YAAaC,QAAQzB,GACrBzE,MAAM,IAAIgF,MAAOmB,eAEf/E,EAAK6E,cAAa7E,EAAI,SAAeqD,GACrCxB,GAAUA,EAAO1G,SACnB0G,EAAOmD,SAAQ,SAAC1G,GACdqG,EAASM,OAAO,QAAS3G,EAAK4G,SAGhClF,EAAI,OAAa6B,EAAO,IAE1BF,EAAgB3B,GAChBxE,KA4DE,UACE,cAAC2J,GAAA,EAAD,CAAapJ,GAAG,qBAAhB,SAAsC,gBACtC,cAACqJ,GAAA,EAAD,UACE,sBAAKzI,UAAWC,IAAOyI,uBAAvB,UACE,sBACE1I,UAAWU,IACTT,IAAO0I,oBACP1I,IAAOwB,YAHX,UAME,uBAAOmH,QAAQ,QAAf,sBACA,uBACE9D,KAAK,QACLZ,UAAQ,EACRvE,MAAOyB,EACP+C,KAAK,OACLJ,SAAU,SAAC5E,GAAD,OAAO8G,EAAS9G,EAAE4D,OAAOpD,aAGvC,sBACEK,UAAWU,IACTT,IAAO0I,oBACP1I,IAAOwB,YAHX,UAME,uBAAOmH,QAAQ,OAAf,yBACA,0BACE9D,KAAK,OACLZ,UAAQ,EACRvE,MAAOyC,EACP+B,KAAK,OACL0E,UAAU,IACV9E,SAAU,SAAC5E,GAAD,OAAO+G,EAAQ/G,EAAE4D,OAAOpD,aAGtC,sBAAKK,UAAWC,IAAO6I,mBAAvB,UACG5D,EAAOxD,KAAI,SAACW,GACX,OACE,sBAAuBrC,UAAWC,IAAO8I,aAAzC,UACE,qBAAKpG,IAAKN,EAAMM,IAAKQ,IAAI,aACzB,cAAC5B,EAAA,EAAD,CACER,QAAS,kBA9HF4B,EA8H0BN,EAAMM,SA7HzDwD,EAAUjB,EAAO3B,QAAO,SAAC5B,GAAD,OAAUA,EAAKgB,MAAQA,MADvB,IAACA,GA+HP3C,UAAWC,IAAO+I,UAFpB,SAIE,cAAC,KAAD,CAAkB9H,SAAS,cANrBmB,EAAMjB,UAcpB,eAACN,EAAA,EAAD,CACEd,UAAWC,IAAOgJ,aAClB7L,QAAQ,YACR8L,UAAU,QACVnI,QAAS,WACe,IAAlBmE,EAAO1G,QACT2K,MAAM,0BANZ,UAUE,cAAC,KAAD,IACCjE,EAAO1G,OAAS,GACf,uBACE2F,KAAK,OACL/E,GAAG,OACH0F,KAAK,QACLf,SA9KQ,SAAC5E,GACzB,IAAMkD,EAAQlD,EAAE4D,OAAOqG,MAAM,GACvBC,EAAS,IAAIC,WACnB,GAAIjH,EAAO,CACT,IACEgH,EAAOE,cAAclH,GACrB,MAAOmH,IACTH,EAAOI,UAAY,WACbJ,EAAOK,QACTvD,EAAU,GAAD,mBACJjB,GADI,CAEP,CACE9D,MAAOiB,EAAMyC,KACbnC,IAAK0G,EAAOK,OACZnB,KAAMlG,SAiKAsH,OAAO,mCACPtF,MAAO,CAAEE,MAAO,IAAKqF,QAAS,aAKrCtD,GACC,sBAAKtG,UAAWC,IAAO4J,kBAAvB,UACE,kDACA,eAACtH,EAAA,EAAD,CAAMrC,WAAS,EAACF,UAAWC,IAAOtC,MAAlC,UACGkC,QAAQC,IAAIsG,GACZI,EACC,cAACsD,GAAA,EAAD,IAEA1D,EAAU1E,KAAI,SAACC,EAAMC,GAAP,OACZ,cAACW,EAAA,EAAD,CAA0BZ,MAAI,EAACc,GAAI,EAAnC,SACE,eAAC3B,EAAA,EAAD,CACEC,QAAS,WAvGT,IAACiG,EAErBL,EADED,KADmBM,EAuG8BrF,GArGnC,GAEAqF,IAoGI5J,QAAQ,WACR4C,UAAWU,IACTT,IAAO+G,KACPN,IAAiB/E,EAAO1B,IAAO8J,aAAe,IALlD,UAQE,6BAAKpI,EAAKM,OACV,4BAAIN,EAAK4F,WAVF5F,EAAKM,KAAOL,iBAuCrC,eAACoI,GAAA,EAAD,WACE,cAAC7I,EAAA,EAAD,CACEnB,UAAWC,IAAOgK,QAClB3I,UAAU,MACVF,MAAM,wBAHR,SAKE,eAACN,EAAA,EAAD,CAAQC,QAAS2G,EAAkB1H,UAAWC,IAAOiK,WAArD,+BAEE,cAAC,KAAD,CAAsBhJ,SAAS,eAGnC,cAACJ,EAAA,EAAD,CACEd,UAAWU,IAAWT,IAAOkK,UAAWlK,IAAOmK,UAC/CrJ,QAASlC,EAFX,oBAMA,cAACiC,EAAA,EAAD,CACEd,UAAWU,IAAWT,IAAOkK,UAAWlK,IAAOoK,UAC/ClG,KAAK,SACLmG,WAAS,EAHX,6B,sICtRKC,gBAnSG,SAAC,GAUZ,IAAD,IATJC,EASI,EATJA,UACAC,EAQI,EARJA,gBACAtG,EAOI,EAPJA,KACAuG,EAMI,EANJA,QACAC,EAKI,EALJA,OACAC,EAII,EAJJA,YACAC,EAGI,EAHJA,KAEAC,GACI,EAFJC,YAEI,EADJD,YACI,EAC0ChN,mBAAS,IADnD,mBACoBkN,GADpB,aAEkClN,mBAAS,IAF3C,mBAEGmN,EAFH,KAEgBC,EAFhB,OAGkCpN,mBAAS,IAH3C,mBAGGqN,EAHH,KAGgBC,EAHhB,OAI4BtN,mBAAS,IAJrC,mBAIGuN,EAJH,aAM8CvN,mBAAS,KANvD,mBAMGwN,EANH,KAMsBC,EANtB,OAQsBzN,mBAAS,CACjC0N,SAAU,EACVC,MAAO,KAVL,mBAQGC,EARH,KAQUC,EARV,OAakC7N,oBAAS,GAb3C,mBAaG8N,EAbH,KAagBC,EAbhB,OAckC/N,oBAAS,GAd3C,mBAcGgO,EAdH,KAcgBC,EAdhB,OAesCjO,oBAAS,GAf/C,mBAeGkO,EAfH,KAekBC,EAflB,OAiBuCC,cAAnCC,GAjBJ,EAiBIA,OAAQpP,GAjBZ,EAiBYA,OAjBZ,EAiBoBqE,MAjBpB,EAiB2BgL,QAE/BvF,qBAAU,WACR,GAAa,SAAT1C,EAAiB,CACnB,GAAIsG,EAAiB,CACnB,IAAM4B,EAAU5M,SAASC,eACvB+K,EAAgBrJ,MACdoJ,EAAU5F,WAAU,SAACjD,GAAD,OAAUA,EAAKP,QAAUqJ,EAAgBrJ,UAE7DiL,GAASA,EAAQC,eAAe,CAAEC,SAAU,WAElD,IAAIC,EAAa,GACjBhC,EAAUnC,SAAQ,SAAC1G,GACjB6K,EAAWC,KAAK,CACdrL,MAAOO,EAAK+K,KACZC,QAAShL,EAAKiL,UAAUlL,KAAI,SAACmL,GAAD,OAAeA,EAAU9M,UACrD+M,aAAcnL,EAAKiL,UAAUlL,KAAI,WAC/B,OAAO,aAKbsJ,EAAmBwB,MAEpB,CAAC/B,EAAiBD,EAAWrG,IAEhC0C,qBAAU,WACR,GAAIgE,GAAiB,SAAT1G,EAAiB,CAC3B,IAAI4I,EAAWpC,EAAOqC,MAAK,SAACrL,GAAD,OAAUA,EAAKsL,OAASpC,KACnDK,EAAe6B,GACfpB,EAAS,CACPH,SAAU,EACVC,MAAmC,GAA5BsB,EAASH,UAAUpO,SAE5B4M,EAAe,IAEjB,GAAIP,GAAiB,eAAT1G,EAAuB,CACjC,IAAI+I,EAAWtC,EAAYoC,MAAK,SAACrL,GAAD,OAAUA,EAAKsL,OAASpC,KACxDU,EAAqB2B,GAOvBrN,QAAQC,IAAI,CAAE+K,OAAMF,aACnB,CAACE,EAAMF,EAAQC,EAAazG,IAe/B,IAAMgJ,GAAqB,SAACxL,EAAMyL,GAChC,IAAIC,EAAc,YAAOlC,GACzBkC,EAAeD,GAAiBzL,EAChCyJ,EAAeiC,IA6DXC,GAAuB,WAC3BrB,GAAiB,IAWnB,OACE,sBAAKjM,UAAWC,KAAOC,UAAvB,UACE,sBAAKF,UAAWC,KAAOsN,eAAvB,UACE,2CACU,SAATpJ,GACC,cAAC5C,EAAA,EAAD,CACER,QAAS,kBACP2J,EAAQ+B,KAAR,kBAAwBN,GAAxB,YAAkCpP,GAAlC,gBAFJ,SAKE,cAAC,KAAD,SAII,SAAToH,EACC,sBAAKnE,UAAWC,KAAOuN,mBAAvB,UACE,sBAAKxN,UAAWC,KAAOwN,cAAvB,UACE,sBAAKzN,UAAWC,KAAOyN,WAAvB,UACE,6BAAKzC,EAAY7J,MAAQ6J,EAAY7J,MAAQ,OAC7C,iDACW6J,QADX,IACWA,GADX,UACWA,EAAa0C,uBADxB,iBACW,EAA8BC,uBADzC,aACW,EAA+ClC,MAD1D,KACmE,IAChEA,EAAMD,YAGVR,EAAY2B,UACT3B,EAAY2B,UAAUlL,KAAI,SAACmM,EAAUjM,GACnC,OAAOiM,EAASC,SACd,cAAC,GAAD,CACEV,cAAexL,EAEfuL,mBAAoBA,GACpBU,SAAUA,EACVzO,GAAIyO,EAASzM,MAAQQ,EACrBmM,MAAO1C,IAGT,cAAC,GAAD,CACE+B,cAAexL,EAEfuL,mBAAoBA,GACpBU,SAAUA,EACVzO,GAAIyO,EAASzM,MAAQQ,EACrBmM,MAAO1C,OAIb,KACJ,qBAAKrL,UAAWC,KAAO+N,mBAAvB,SACE,cAAClN,EAAA,EAAD,CACEC,QAAS,kBAlGD,SAACkN,GACrBhC,GAAiB,GACjB,IAAIa,EAAY,YAAO3B,GACnB+C,EAAMjD,EAAY2B,UAAUlL,KAAI,SAACI,GACnC,OAAOA,EAASqM,QAAQ5K,QAAO,SAAC6K,GAAD,OAAYA,EAAOC,iBAEpD,GAAIvB,EAAatO,OAAS,EAAG,CAC3B,IAAI8P,EAAY,EAChBJ,EAAI7F,SAAQ,SAAC1G,EAAMC,GACjB,IAAI2M,GAAO,EACP5M,EAAKnD,UAAYsO,EAAalL,GAAKkL,EAAalL,GAAGpD,OAAS,GAC9DmD,EAAK0G,SAAQ,SAACgE,GACPS,EAAalL,GAAGpC,SAAS6M,KAC5BkC,GAAO,MAKXA,GAAO,EAELA,IACFD,GAAwB,OAG5B3C,EAAS,2BACJD,GADG,IAENF,SAAU8C,KAEZzC,GAAe,GACfhM,QAAQC,IAAImL,GACZH,EAAWG,EAAY7L,GAAIkP,EAAWhB,SAGtCvB,GAAe,GAiEUyC,CAAcvD,EAAY7L,KACzCY,UAAWC,KAAOwO,UAFpB,yBA6CJ,cAAC,GAAD,CACE/P,KAAMkN,GAAeI,EACrBnN,YAvGiB,WACzBgN,GAAe,IAuGPH,MAAOA,EACPtK,MAAM,aACNsN,QAAQ,OACRvK,KAAK,YAGP,cAAC,GAAD,CACEzF,KAAMoN,GAAeE,EACrBnN,YA5GiB,WACzBkN,GAAe,IA4GP3K,MAAM,kBACNsN,QAAQ,2DACRvK,KAAK,eAGE,eAATA,EACF,cAAC,GAAD,CACEwK,WAAYrD,IAKd,cAAC,GAAD,CACEX,OAAQA,EACRC,YAAaA,EACbF,QAASA,UASbkE,GAAgB,SAAC,GAAsC,IAApClE,EAAmC,EAAnCA,QAASC,EAA0B,EAA1BA,OAAQC,EAAkB,EAAlBA,YAoCxC,OACE,sBAAK5K,UAAWC,KAAO4O,oBAAvB,UACE,sBAAK7O,UAAWC,KAAO0K,OAAvB,UACE,wCACA,oBAAI3K,UAAWC,KAAO6O,WAAtB,SACGnE,EAAOjJ,KAAI,SAACC,EAAMC,GAAO,IAAD,UACvB,OACE,qBAEEb,QAAS,kBArBE8J,EAqBoBlJ,EAAKsL,UApBhDvC,EAAQ+B,KAAK/B,EAAQqE,SAASC,SAAW,MAAQnE,GAD3B,IAACA,GAsBX7K,UAAWC,KAAO4K,KAHpB,UAKE,sBAAK7K,UAAWC,KAAO+B,QAAvB,UACE,6BAAKL,EAAKP,QACV,8BAAIO,EAAKiL,UAAUpO,OAAnB,mBAGF,qBAAKwB,UAAWC,KAAOgP,YAAvB,SACE,cAAC,GAAD,CACEtP,OACE,UAAAgC,EAAKgM,uBAAL,mBAAsBC,uBAAtB,eAAuClC,QAClC,UAAA/J,EAAKgM,uBAAL,mBAAsBC,uBAAtB,eAAuClC,QACb,GAAxB/J,EAAKiL,UAAUpO,QAClB,IACA,SAhBD,OAAJmD,QAAI,IAAJA,GAAA,UAAAA,EAAM+J,aAAN,eAAawD,YAAatN,WAyBzC,sBAAK5B,UAAWC,KAAO2K,YAAvB,UACE,6CACA,oBAAI5K,UAAWC,KAAOkP,eAAtB,SACGvE,EAAYlJ,KAAI,SAACC,EAAMC,GACtB,OACE,qBAEEb,QAAS,kBAhDQ4N,EAgDoBhN,EAAKsL,UA/CtDvC,EAAQ+B,KACN/B,EAAQqE,SAASC,SACf,MACAL,EAAWS,cAAcC,MAAM,KAAKC,KAAK,MAJjB,IAACX,GAiDjB3O,UAAWC,KAAO0O,WAHpB,UAKE,qBAAK3O,UAAWC,KAAO+B,QAAvB,SACE,6BAAKL,EAAKP,UAIZ,qBAAKpB,UAAWC,KAAOgP,YAAvB,SACE,cAAC,GAAD,CACEtP,MAAkD,KAA1CgC,EAAK+J,MAAQ/J,EAAK+J,MAAQ,SAXjC/J,EAAK+J,MAAQ9J,eAuB5B2N,GAAiB,SAAC,GAOjB,IANL1B,EAMI,EANJA,SACAzO,EAKI,EALJA,GACA+N,EAII,EAJJA,mBACAC,EAGI,EAHJA,cAEAW,GACI,EAFJyB,UAEI,EADJzB,OACI,EAC4BjQ,mBAAS,IADrC,mBACG2R,EADH,KACaC,EADb,KAGJ7I,qBAAU,WACR6I,EAAY,MACX,CAAC7B,IAEJhH,qBAAU,cAEP,CAAC4I,IAEJ,IAAME,EAAqB,SAAChO,EAAMC,GAC3B6N,EAASjQ,SAASmC,IAIrB+N,EAAYD,EAASlM,QAAO,SAACqM,GAAD,OAASA,IAAQjO,MAC7CwL,EACEsC,EAASlM,QAAO,SAACqM,GAAD,OAASA,IAAQjO,KACjCyL,KANFsC,EAAY,GAAD,mBAAKD,GAAL,CAAe9N,KAC1BwL,EAAmB,GAAD,mBAAKsC,GAAL,CAAe9N,IAAOyL,KAU5C,OACE,sBAAKpN,UAAWC,KAAO4B,kBAAmBzC,GAAIA,EAA9C,UACE,6BAAKyO,EAAS3L,cACd,qBAAKlC,UAAWC,KAAO4P,iBAAvB,SACE,cAACtN,EAAA,EAAD,CAAMrC,WAAS,EAACsC,QAAS,EAAzB,SACGqL,EAASM,QAAQzM,KAAI,SAACC,GACrB,OACE,cAACY,EAAA,EAAD,CAAMZ,MAAI,EAACc,GAAI,EAAGqN,GAAI,EAAGC,GAAI,GAA7B,SACE,sBACE/P,UAAWU,IACTT,KAAOmO,OACPqB,EAASjQ,SAASmC,GAAQ1B,KAAO+P,eAAiB,GAClDjC,EAAMvO,SAASmC,GAAQ1B,KAAOgQ,YAAc,IAE9ClP,QAAS,kBAAM4O,EAAmBhO,IANpC,UAQE,cAACuO,GAAA,EAAD,CACEvL,QAAS8K,EAASjQ,SAASmC,GAC3BoC,SAAU,WACR4L,EAAmBhO,IAErBmD,KAAK,WACLqL,MAAM,UACNnQ,UAAWC,KAAOmQ,WAGM,MAAzBvC,EAASwC,YACR,qBACE1N,IAAKkL,EAASyC,aACdnN,IAAI,cACJoB,MAAM,UAGR,4BAAI5C,EAAK4O,8BAYvBC,GAA6B,SAAC,GAO7B,IANL3C,EAMI,EANJA,SACAzO,EAKI,EALJA,GACA+N,EAII,EAJJA,mBACAC,EAGI,EAHJA,cAEAW,GACI,EAFJyB,UAEI,EADJzB,OACI,EAC4BjQ,mBAAS,IADrC,mBACG2R,EADH,KACaC,EADb,KAGJ7I,qBAAU,WACR6I,MACC,CAAC7B,IAEJhH,qBAAU,cAEP,CAAC4I,IAEJ,IAAME,EAAqB,SAAChO,EAAMC,GAC5B6N,IAAa9N,GACf+N,EAAY/N,GACZwL,EAAmB,CAACxL,GAAOyL,KAE3BsC,EAAY,IACZvC,EAAmB,KAAMC,KAI7B,OACE,sBAAKpN,UAAWC,KAAO4B,kBAAmBzC,GAAIA,EAA9C,UACE,6BAAKyO,EAAS3L,cACb2L,EAASxL,OACR,qBAAKrC,UAAWC,KAAOwQ,cAAvB,SACE,qBAAK9N,IAAKkL,EAASxL,MAAOc,IAAI,eAGlC,qBAAKnD,UAAWC,KAAO4P,iBAAvB,SACE,cAACtN,EAAA,EAAD,CAAMrC,WAAS,EAACsC,QAAS,EAAzB,SACGqL,EAASM,QAAQzM,KAAI,SAACC,GACrB,OACE,cAACY,EAAA,EAAD,CAAMZ,MAAI,EAACc,GAAI,EAAGqN,GAAI,EAAGC,GAAI,GAA7B,SACE,sBACE/P,UAAWU,IACTT,KAAOmO,QACC,OAARqB,QAAQ,IAARA,OAAA,EAAAA,EAAUc,gBAAV,OAA0B5O,QAA1B,IAA0BA,OAA1B,EAA0BA,EAAM4O,aAC5BtQ,KAAO+P,eACP,GACJjC,EAAMvO,SAASmC,GAAQ1B,KAAOgQ,YAAc,IAE9ClP,QAAS,kBAAM4O,EAAmBhO,IARpC,UAUE,cAAC+O,GAAA,EAAD,CACE/L,SAAiB,OAAR8K,QAAQ,IAARA,OAAA,EAAAA,EAAUc,gBAAV,OAA0B5O,QAA1B,IAA0BA,OAA1B,EAA0BA,EAAM4O,aACzCxM,SAAU,kBAAM4L,EAAmBhO,IAEnCmD,KAAK,qBACLC,WAAY,CAAE,aAAc,UAGJ,MAAzB8I,EAASwC,YACR,qBACE1N,IAAKhB,EAAK2O,aACVnN,IAAI,cACJoB,MAAM,UAGR,4BAAI5C,EAAK4O,8BAYvBI,GAAe,SAAC,GAAwD,IAAtDjS,EAAqD,EAArDA,KAAMG,EAA+C,EAA/CA,YAAa6M,EAAkC,EAAlCA,MAAOtK,EAA2B,EAA3BA,MAAOsN,EAAoB,EAApBA,QAASvK,EAAW,EAAXA,KAChE,OACE,qCACE,eAACwD,GAAA,EAAD,CACEnH,QAAS3B,EACT+I,kBAAgB,sBAChBlJ,KAAMA,EACN2F,MAAO,CAAEyD,OAAQ,QAJnB,UAME,cAACU,GAAA,EAAD,CAAapJ,GAAG,sBAAhB,SACE,sBACEY,UAAWU,IACTT,KAAO2Q,YACgB,YAAvBzM,EAAKiL,cACDnP,KAAO4Q,aACgB,YAAvB1M,EAAKiL,cACLnP,KAAO6Q,aACP,IAPR,SAUG1P,MAGL,cAACqH,GAAA,EAAD,UACE,sBACEzI,UAAWU,IACTT,KAAO8Q,aACgB,YAAvB5M,EAAKiL,cACDnP,KAAO+Q,cACgB,YAAvB7M,EAAKiL,cACLnP,KAAOgR,cACP,IAPR,UAU0B,YAAvB9M,EAAKiL,eAA+B1D,EAAMF,SACzC,cAAC,KAAD,IACyB,YAAvBrH,EAAKiL,cACP,cAAC,KAAD,IACE,KAdN,OAgBE,4BAC0B,YAAvBjL,EAAKiL,cACF1D,EAAMF,SAAN,wCACmCE,EAAMF,SADzC,WAEE,oDACqB,YAAvBrH,EAAKiL,cAAL,UACGV,GACH,aAKXhQ,GAA+B,YAAvByF,EAAKiL,eACZ,qBACE/K,MAAO,CAKLG,SAAU,QACV0M,IAAK,MACLC,KAAM,MACNC,UAAW,wBATf,SAYE,cAAC,GAAD,UAOJC,GAA4B,SAACnU,GACjC,OACE,eAACoU,GAAA,EAAD,CACE9M,SAAS,WACT+M,aAAa,MACbC,UAAU,kCACVC,QAAQ,cAJV,UAME,cAAC3H,GAAA,EAAD,aAAkB1M,QAAQ,eAAkBF,IAC5C,cAACoU,GAAA,EAAD,CACEJ,IAAK,EACLC,KAAM,EACNO,OAAQ,EACRC,MAAO,EACPnN,SAAS,WACTiN,QAAQ,OACRG,WAAW,SACXC,eAAe,SARjB,SAUE,cAACC,GAAA,EAAD,CACE1U,QAAQ,UACR8L,UAAU,MACViH,MAAM,gBAHR,mBAIK4B,KAAKC,MAAM9U,EAAMyC,OAJtB,aAUFsS,GAAa,SAAC,GAAoB,IAAD,EAAjBtD,EAAiB,EAAjBA,WAAiB,EACf7Q,mBAAS,IADM,6BAErC,OACE,sBAAKkC,UAAWC,KAAOiS,qBAAvB,UACE,oCAAKvD,QAAL,IAAKA,OAAL,EAAKA,EAAYvN,QACjB,qBAAKpB,UAAWC,KAAOR,SAAvB,SACE,wBACE8E,MAAM,OACN4N,OAAO,OACPC,YAAY,OACZhR,MAAK,OAAEuN,QAAF,IAAEA,OAAF,EAAEA,EAAYvN,MACnBuB,IAAG,OAAEgM,QAAF,IAAEA,GAAF,UAAEA,EAAY0D,oBAAd,aAAE,EAA0BC,eAOnCC,GAAe,WACnB,IAAMC,EAAiB,CACrBC,MAAM,EACNC,UAAU,EACVC,cAAeA,GACfC,iBAAkB,CAChBC,oBAAqB,mBAIzB,OACE,cAAC,IAAD,CACE1E,QAASqE,EACTL,OAAQ,IACR5N,MAAO,IACPuO,WAAW,EACXC,UAAU,K,yECziBDC,GAlJC,WAAM,MAoBIlV,mBAAS,IApBb,mBAoBbuF,EApBa,KAoBP4P,EApBO,OAsBQnV,mBAAS,IAtBjB,mBAsBboV,EAtBa,KAsBLC,EAtBK,KAqCpBtM,qBAAU,WACRuM,KACGC,IAAI,0BAA2B,CAC9BC,OAAQ,CAAE1V,YAAa,mBAExB2V,MAAK,SAACC,GACDA,EAAInQ,OACN4P,EAAQO,EAAInQ,MACZ8P,EACEK,EAAInQ,KAAK3B,KAAI,SAACC,GACZ,MAAO,CACL8R,OAAQ,IAAIxM,KAAKtF,EAAKuF,YAAa,IAAID,MAAOG,qBASzD,IAEH,IAAMsM,EAAW,SAAC,GAA4C,IAA1CC,EAAyC,EAAzCA,MAAOC,EAAkC,EAAlCA,QAASC,EAAyB,EAAzBA,QAClC,OAD2D,EAAhBC,UAGlC,gEAIL,iCACGH,EADH,OACcC,EADd,QAC4BC,EAD5B,WAsBN,OACE,sBAAK7T,UAAWC,KAAOC,UAAvB,UACE,yCACA,qBAAKF,UAAWC,KAAO4O,oBAAvB,SACE,qBAAK7O,UAAWC,KAAO0K,OAAvB,SAEE,oBAAI3K,UAAWC,KAAO6O,WAAtB,SACGzL,EAAK3B,KAAI,SAACC,EAAMC,GAAO,IAAD,IACfmS,EAAQ,IAAI9M,KAAKtF,EAAKuF,WAC5B,OACE,oBAEElH,UAAWC,KAAO4K,KAFpB,SAIE,sBAAK7K,UAAWC,KAAO+B,QAAvB,UACE,gCACE,uCACEgS,KAAOD,GACJE,UAAU,UACV/E,WACAG,MAAM,aAAa,MAEvB0E,EAAM3M,WAAY,IAAIH,MAAOG,WAAa,GACzC,0CACY,IACV,+BACE,cAAC,KAAD,CACEnF,KAAM8R,EACNG,aAAW,EACXR,SAAUA,EACVS,WAAY,SAAChV,GAAD,OA7CZ,SAACA,EAAGwC,GAC9B,GAAIxC,EAAE2U,UAAW,CACf,IAAMzU,EAAQgE,EAAKuB,WACjB,SAACwP,GAAD,OAAeA,EAAU7M,OAAS5F,EAAKuF,aAEnCmN,EAAUnB,EAAO7T,GACjB4F,EAAO,YAAOiO,GACpBjO,EAAQqP,OAAOjV,EAAO,EAAtB,2BAA8BgV,GAA9B,IAAuCZ,OAAQtU,EAAE2U,aACjDjU,QAAQC,IAAI,CAAEmF,YACdsP,YAAW,WACTpB,EAAUlO,KACT,IAkCwCuP,CAAoBrV,EAAGwC,cAMpD,8BACE,cAACb,EAAA,EAAD,CACE2T,WAAU,UAACvB,EAAOtR,UAAR,aAAC,EAAW6R,QACtBzT,UAAWU,IACTT,KAAOyU,YACP,UAACxB,EAAOtR,UAAR,aAAC,EAAW6R,QAA2B,GAAlBxT,KAAOwU,UAJhC,wBA1BC9S,EAAKuF,UAAUgI,WAAatN,EAAEsN,yBC3GtC,OAA0B,gCCA1B,OAA0B,gCCA1B,OAA0B,gCCA1B,OAA0B,gC,+BC4CnCyF,GAAe,SAAC,GAYf,IAAD,EAXJC,EAWI,EAXJA,aACAlW,EAUI,EAVJA,KACAmW,EASI,EATJA,eACAC,EAQI,EARJA,aACA/J,EAOI,EAPJA,YACAgK,EAMI,EANJA,YACAC,EAKI,EALJA,SACAC,EAII,EAJJA,aACAlY,EAGI,EAHJA,OAEAmY,GACI,EAFJC,mBAEI,EADJD,qBAEM1C,EAAiB,CACrBC,MAAM,EACNC,UAAU,EACVC,cAAeyC,EACfxC,iBAAkB,CAChBC,oBAAqB,mBANrB,EAU8B/U,oBAAS,GAVvC,mBAUGuX,EAVH,KAUcC,EAVd,OAWoBxX,oBAAS,GAX7B,mBAWGyX,EAXH,KAWSC,EAXT,KAaEC,EAAU,WACdD,GAAQ,IAGJE,EAAS,WACbF,GAAQ,GACRF,GAAa,IAef,OACE,0BAASjR,MAAO,CAAEE,MAAO,QAAUvE,UAAWC,IAAO0V,aAArD,UACE,qBAAK3V,UAAWC,IAAO2V,WAAvB,SACE,6BAAKhB,EAAaxT,UAEpB,qBACEiD,MAAO,CAAEwR,WAAYnX,EAAO,QAAU,SACtCsB,UAAWC,IAAO6V,eAFpB,SAIE,cAAC,IAAD,CAKEC,OACE,UAAAnB,EAAavC,oBAAb,eAA2BC,SAC3B,2CAEFI,UAAQ,EAERP,OAAO,OACP6D,OAAO,EACPC,UAAU,EACVC,MAAO,kBAAMnL,EAAY6J,EAAa3H,OACtCkJ,WApCe,SAACC,KAEpBA,EAAcC,QAAU,MACvBhB,GACAE,GACCP,EAASjY,IAAUiY,EAASjY,GAAQ6X,EAAa3H,QAEnD8H,EAAYE,EAAclY,EAAQ6X,EAAa3H,KAAMwI,EAASC,GAC9DJ,GAAa,KA6BTgB,SAAU,WACRhB,GAAa,GACbE,GAAQ,QAId,qBACEnR,MAAO,CAAEkS,SAAU7X,EAAO,OAAS,MAAO8X,OAAQ,UAClDxW,UAAWC,IAAOwW,UAFpB,SAIG3B,EAAapT,KAAI,SAACC,EAAMC,GACvB,OACE,sBACEb,QACwB,MAAtBY,EAAK+U,aACD,kBAAM7B,EAAelT,EAAKsL,OACJ,MAAtBtL,EAAK+U,aACL,kBAAMxB,EAAoB,IAAKvT,EAAKsL,OACpC,kBAAMiI,EAAoB,IAAKvT,EAAKsL,OAG1CjN,UAAWC,IAAO0W,cATpB,UAWE,qBAAK3W,UAAWC,IAAO2W,YAAvB,SACE,qBACEjU,IACwB,MAAtBhB,EAAK+U,aACD/U,IAASiT,EACPiC,EACAC,EACFC,EAEN5T,IAAI,mBAGR,sBACEpC,QAAS,kBAAM8T,EAAelT,EAAKsL,OACnCjN,UAAWC,IAAO+W,YAFpB,UAIE,6BAAKrV,EAAKP,QACV,sBAAKpB,UAAWC,IAAOU,QAAvB,UACGgB,IAASiT,EACR,qBAAK5U,UAAWC,IAAOmV,iBAAvB,SACE,cAAC,IAAD,CACEjH,QAASqE,EACTL,OAAQ,GACR5N,MAAO,GACPuO,WAAW,EACXC,UAAU,MAGZiC,EAASjY,IAAWiY,EAASjY,GAAQ4E,EAAKsL,MAC5C,qBAAKtK,IAAKsU,EAAW9T,IAAI,wBAEzB,GAEF,cAAC5B,EAAA,EAAD,CACER,QAAS,SAAC5B,GACRA,EAAE+X,mBAEJlX,UAAWC,IAAOkX,YAJpB,SAME,cAAC,IAAD,cA1CDxV,EAAKP,MAAQQ,YAsD1BwV,GAAgB,SAAC,GAKhB,IAJLC,EAII,EAJJA,QACAC,EAGI,EAHJA,cACAC,EAEI,EAFJA,UACAC,EACI,EADJA,cAEA,OACE,qBAAKxX,UAAWC,IAAOwX,iBAAvB,SACGJ,EAAQ3V,KAAI,SAACC,EAAMC,GAClB,IAAI8V,EAAS/V,EAAKsL,OAASqK,EACvBK,EAAShW,EAAKiW,SAASC,oBAAsBN,EACjD,OACE,sBAEEvX,UAAWU,IACTT,IAAO6X,WACPJ,EAASzX,IAAO8X,WAAa,GAC7BJ,EAAS1X,IAAO+X,WAAa,IAE/BjX,QAAS,kBACN2W,GAAWC,EAAoC,KAA3BH,EAAc7V,EAAKsL,OAR5C,UAWE,qBAAKjN,UAAWC,IAAOgY,WAAvB,SACE,qBAEEtV,IAAKuV,EACL/U,IAAI,kBAGR,qBAAKnD,UAAWC,IAAOkY,QAAvB,SACE,sBAAKnY,UAAWC,IAAO+B,QAAvB,UACE,6BAAKL,EAAKP,QACV,4BAAIO,EAAKO,cACT,sBAAKlC,UAAWC,IAAOmY,MAAvB,UACE,sBAAKpY,UAAWC,IAAOoY,UAAvB,UACE,qBACE1V,IAAK+U,EAASY,EAAeC,EAC7BpV,IAAI,iBAEN,+BAAOxB,EAAKiW,SAASY,wBAEvB,sBAAKxY,UAAWC,IAAOoY,UAAvB,UACE,qBACE1V,IAAK+U,EAASe,EAAiBC,EAC/BvV,IAAI,iBAEN,+BAAOxB,EAAKiW,SAASe,mBAEvB,sBAAK3Y,UAAWC,IAAOoY,UAAvB,UACE,qBACE1V,IAAK+U,EAASkB,EAAgBC,EAC9B1V,IAAI,iBAEN,+BAAOxB,EAAKiW,SAASkB,4BAK5BnB,EACG,KACsC,IAAtChW,EAAKiW,SAASC,qBACZ,sBAAK7X,UAAWC,IAAO8Y,MAAvB,UACE,4BAAIpX,EAAKiW,SAASC,sBAClB,qBAAKlV,IAAKqW,EAAW7V,IAAI,aAGhCwU,GACC,qCACE,qBAAK3X,UAAWC,IAAO0X,OAAvB,SACE,qBAAKhV,IAAKsW,EAAY9V,IAAI,YAE5B,sBAAKnD,UAAWC,IAAOiZ,aAAvB,UACE,sBAAKlZ,UAAWC,IAAOkZ,cAAvB,UACE,uDACA,qBAAKxW,IAAKsW,EAAY9V,IAAI,qBAE5B,qBAAKnD,UAAWC,IAAOmZ,YAAvB,SACE,2CACYzX,EAAKiW,SAASC,oBAD1B,aACyD,IACvD,+BACE,qBAAKlV,IAAKqW,EAAW7V,IAAI,YACnB,IAJV,qCAjEHxB,EAAKP,MAAQ,SAAWQ,SAmFnCyX,GAAc,SAAC,GAed,IAdL3O,EAcI,EAdJA,QACA4O,EAaI,EAbJA,WACA/B,EAYI,EAZJA,UACAvC,EAWI,EAXJA,SACAuE,EAUI,EAVJA,WACAxE,EASI,EATJA,YACAE,EAQI,EARJA,aACAzX,EAOI,EAPJA,aACAC,EAMI,EANJA,SACA+b,EAKI,EALJA,cACA9b,EAII,EAJJA,WACAC,EAGI,EAHJA,MACAE,EAEI,EAFJA,QACAiN,EACI,EADJA,WACI,EAC4BhN,mBAAS,CACvC,CACEgH,KAAM,YACN4S,QAAQ,GAEV,CACE5S,KAAM,cACN4S,QAAQ,GAEV,CACE5S,KAAM,YACN4S,QAAQ,GAEV,CACE5S,KAAM,UACN4S,QAAQ,KAhBR,mBACG+B,EADH,aAoBkC3b,mBAAS,MApB3C,mBAoBG4b,EApBH,KAoBgBC,EApBhB,OAqBoC7b,mBAAS,iBArB7C,mBAqBGyT,EArBH,KAqBiBqI,EArBjB,KAuBEC,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJvI,QAAS,QAEXwI,OAAQ,CACNC,WAAYH,EAAMI,YAAYC,OAAO,CAAC,SAAU,SAAU,CACxDC,OAAQN,EAAMI,YAAYE,OAAOC,MACjCC,SAAUR,EAAMI,YAAYI,SAASC,iBAGzCC,YAAa,CACXlW,MAAM,eAAD,OAAiBmV,EAAjB,OACLgB,WAAYhB,EACZQ,WAAYH,EAAMI,YAAYC,OAAO,CAAC,SAAU,SAAU,CACxDC,OAAQN,EAAMI,YAAYE,OAAOM,QACjCJ,SAAUR,EAAMI,YAAYI,SAASK,kBAGzCC,WAAY,CACVC,YAAaf,EAAMvX,QAAQ,IAE7BuY,KAAM,CACJtJ,QAAS,QAEXuJ,OAAQ,CACNzW,MAAOmV,EACPuB,WAAY,GAEdC,YAAa,CACX3W,MAAOmV,EACPyB,OAAQ,OACR5J,aAAcA,EACdC,UAAW,gCACX4J,SAAU,UAEZC,aAAa,yBACX5J,QAAS,OACTG,WAAY,SACZ0J,QAASvB,EAAMvX,QAAQ,EAAG,GAC1B+B,MAAO,MACPiS,OAAQ,UAELuD,EAAMwB,OAAOC,SAPN,IAQV3J,eAAgB,kBAElBsG,QAAS,CACPsD,SAAU,EACVH,QAASvB,EAAMvX,QAAQ,GACvB0X,WAAYH,EAAMI,YAAYC,OAAO,SAAU,CAC7CC,OAAQN,EAAMI,YAAYE,OAAOC,MACjCC,SAAUR,EAAMI,YAAYI,SAASC,gBAEvCE,WAAY,EACZvI,OAAQ,QACRiJ,SAAU,UAEZM,aAAc,CACZxB,WAAYH,EAAMI,YAAYC,OAAO,SAAU,CAC7CC,OAAQN,EAAMI,YAAYE,OAAOM,QACjCJ,SAAUR,EAAMI,YAAYI,SAASK,iBAEvCF,WAAYhB,OAIhB7S,qBAAU,WACR,IAAM8U,EAAaC,OAAOD,WACtBA,GAAc,KAChBhC,EAAe,QACfC,EAAgB,KAChB/Z,QAAQC,IAAI,SAEZ6Z,EAAe,KACfC,EAAgB,kBAEd+B,GAAc,MAChBhd,GAAQ,KAIT,IAEHkd,2BAAgB,WACd,IAAMC,EAAoB,WACxB,IAAMH,EAAaC,OAAOD,WACtBA,GAAc,KAChBhC,EAAe,QACfC,EAAgB,KAChB/Z,QAAQC,IAAI,SAEZ6Z,EAAe,KACfC,EAAgB,kBAEd+B,GAAc,MAChBhd,GAAQ,IAIZ,OADAid,OAAOG,iBAAiB,SAAUD,GAC3B,kBAAMF,OAAOI,oBAAoB,SAAUF,MACjD,IA1HC,MA4HoBhe,oBAAS,GA5H7B,mBA4HGY,EA5HH,KA4HSC,EA5HT,OA6HoCb,mBAAS,IA7H7C,mBA6HG8W,EA7HH,KA6HiBqH,EA7HjB,OA8HgCne,mBAASwb,EAAWlY,OA9HpD,mBA8HG8a,EA9HH,KA8HeC,GA9Hf,QAgImDjQ,cAA/CC,GAhIJ,GAgIIA,OAAQpP,GAhIZ,GAgIYA,OAAQqE,GAhIpB,GAgIoBA,MAAOyJ,GAhI3B,GAgI2BA,KAAMuB,GAhIjC,GAgIiCA,QAASjI,GAhI1C,GAgI0CA,KAQ9C0C,qBAAU,WAER,GAAIzF,IACF,IAAIwT,EAAaxT,QAAUA,KAAUwT,EAAaxT,QAC5CmY,EAAW6C,SAAU,CACvB,IAAM/c,EAAQka,EAAW6C,SAASxX,WAChC,SAACjD,GAAD,OAAUA,EAAKsL,OAAS7L,OAEX,IAAX/B,GAAc4c,EAAgB1C,EAAW6C,SAAS/c,UAGrD4c,EAAgB1C,EAAW6C,SAAS,IACvCjQ,IAA4B,kBAAXA,IACnBgQ,GAAchQ,GAAOiD,cAAcC,MAAM,KAAKC,KAAK,QAGpD,CAACnD,GAAQ/K,GAAOwT,EAAaxT,MAAOmY,IAQvBta,mBAAhB,IA+BM8L,GAAc,SAACsR,GACnB,IAAMhd,EAAQka,EAAW6C,SAASxX,WAChC,SAACjD,GAAD,OAAUA,EAAKsL,OAASoP,KAEtBC,EAAYjd,EAAQ,GACT,IAAXA,IACEid,GAAa/C,EAAW6C,SAAS5d,OAAS,EACQ,MAAhD+a,EAAW6C,SAASE,GAAW5F,aACjChM,EAAQ+B,KAAR,kBACaN,GADb,YACuBpP,GADvB,wBAC6Cwc,EAAW6C,SAASE,GAAWrP,OAG5EvC,EAAQ+B,KAAR,kBACaN,GADb,YACuBpP,GADvB,sBAC2Cwc,EAAW6C,SAASE,GAAWrP,OAI5EsP,OAKA/E,GAAgB,SAACgF,GACrB9R,EAAQ+B,KAAR,kBAAwBN,GAAxB,YAAkCqQ,EAAlC,YAAgDpQ,MAG5CmQ,GAAa,WACjB,IAAMld,EAAQia,EAAWjC,QAAQzS,WAAU,SAACjD,GAAD,OAAUA,EAAKsL,OAASlQ,MAC/Duf,EAAYjd,EAAQ,GACT,IAAXA,GAAgBA,EAAQia,EAAWjC,QAAQ7Y,QAE3C+Y,GAAa+B,EAAWjC,QAAQiF,GAAW1E,SAASC,qBAEpDnN,EAAQ+B,KAAR,kBACaN,GADb,YACuBmN,EAAWjC,QAAQiF,GAAWrP,KADrD,gBAOAwP,GAAU5C,IACVE,GAAQ2C,cAERvH,GAAqB,SAACxT,GAEtBia,OAAOD,YAAc,KACvBhd,GAAQ,GAEV+L,EAAQ+B,KAAR,kBAAwBN,GAAxB,YAAkCpP,GAAlC,YAA4C4E,EAAKyN,iBAO7CuN,GAAW,CACf,CACEvb,MAAO,SACPwL,UAAW,CACT,CACE9K,SAAU,yBACVqM,QAAS,CAAC,OAAQ,UAAW,QAAS,OACtCpO,OAAQ,SAEV,CACE+B,SAAU,sBACVqM,QAAS,CAACyO,GAAcC,GAAcC,GAAcC,IACpDhd,OAAQ8c,GACRG,WAAY,SAEd,CACElb,SAAU,yCACVqM,QAAS,CACP,iBACA,oBACA,wBACA,iBAEF8O,YAAY,EACZld,OAAQ,oBAMhB,OACE,sBAAKC,UAAWC,IAAOC,UAAvB,UACE,eAACgd,EAAA,EAAD,CACEld,UAAWyc,GAAQzB,OACnB5d,QAAQ,aACR+f,OAAO,OACPze,KAAMA,EACN+d,QAAS,CACPW,MAAOX,GAAQvB,aANnB,UASE,sBAAKlb,UAAWyc,GAAQpB,aAAxB,UACE,qBAAKrb,UAAWC,IAAOic,WAAvB,SACE,6BAAKA,MAEP,cAAC3a,EAAA,EAAD,CACER,QA5GgB,WACxBpC,GAAQ,IA4GA0F,MAAO,CAAE8W,OAAQ,OAAQkC,QAAS,QAFpC,SAIuB,QAApBtD,GAAMuD,UACL,cAAC,IAAD,IAEA,cAAC,IAAD,SAIN,qBAAKtd,UAAWC,IAAOsd,eAAvB,SACG9D,EAAS/X,KAAI,SAACC,GACb,OACE,sBACEZ,QAAS,kBAAMoU,GAAmBxT,EAAKmD,OAEvC9E,UAAWC,IAAOud,YAHpB,UAKE,oBACExd,UACEoM,KAAYzK,EAAKmD,KAAKsK,cAAgBnP,IAAOwd,WAAa,GAF9D,SAKG9b,EAAKmD,OAER,qBACET,MAAO,CACLuF,QAASwC,KAAYzK,EAAKmD,KAAKsK,cAAgB,EAAI,GAErDpP,UAAWC,IAAOyd,cAdf/b,EAAKmD,WAqBlB,sBAAK9E,UAAWC,IAAO0d,cAAvB,UACE,mBAAG3d,UAAWC,IAAO2d,aAArB,0BACA,cAAC,GAAD,CACEvG,QAAS,CAACiC,EAAWjC,QAAQ,IAC7BC,cAAeva,GACfwa,UAAWA,EACXC,cAAeA,KAEjB,mBAAGxX,UAAWC,IAAO2d,aAArB,2BACA,cAAC,GAAD,CACEvG,QAASiC,EAAWjC,QAAQwG,MAAM,GAClCvG,cAAeva,GACfwa,UAAWA,EACXC,cAAeA,WAIrB,uBACExX,UAAW8d,YAAKrB,GAAQtE,QAAT,eACZsE,GAAQf,aAAehd,IAF5B,UAKE,sBACEsB,UAAWU,IACT+b,GAAQpB,aACRpb,IAAO8d,oBAHX,UAME,sBAAK/d,UAAWC,IAAO+d,WAAYjd,QAhLlB,WACvBpC,GAAQ,IA+KF,UACE,qBAAKqB,UAAWC,IAAOge,SACvB,qBAAKje,UAAWC,IAAOge,SACvB,qBAAKje,UAAWC,IAAOge,YAEzB,sBAAKje,UAAWC,IAAOie,UAAvB,UACE,4BACE,cAAC,KAAD,CAASC,MAAO,EAAGC,IAAK7G,MAE1B,qBAAK5U,IAAKqW,EAAW7V,IAAI,qBAG5BqW,EACC,cAAC,KAAD,IAEA,mCACe,cAAZpN,GACC,cAAC,GAAD,CACEwI,aAAcA,EACdlW,KAAMA,EACNmW,eA7LS,SAACwH,GACtB3R,EAAQ+B,KAAR,kBAAwBN,GAAxB,YAAkCpP,GAAlC,sBAAsDsf,KA6L1CtR,YAAaA,GACb+J,aAAcyE,EAAW6C,SACzBrH,YAAaA,EACbC,SAAUA,EACVC,aAAcA,EACdlY,OAAQA,GACRoY,mBAAoBA,GACpBD,oBA9Ic,SAAC/Q,EAAM8I,GACjCvC,EAAQ+B,KAAR,kBAAwBN,GAAxB,YAAkCpP,GAAlC,sBAAsDoH,EAAtD,YAA8D8I,OA+ItC,gBAAZb,GACF,cAAC,GAAD,CACE7O,QAASgc,EAAWhc,QACpBC,aAAcA,EACdF,UAAWic,EAAWna,GACtB3B,SAAUA,EACVC,WAAYA,EACZC,MAAOA,EACPC,YAAauO,GACbtO,QAASA,IAEG,cAAZuO,GACF,cAAC,GAAD,CACE5B,UAAWmS,GACXlS,gBAAiBkS,GAAS9R,KAC1B1G,KACW,MAATA,GAAe,OAAkB,MAATA,GAAe,aAAe,OAExDuG,QAASA,EACTC,OAAQ4O,EAAW6C,SAAS7Y,QAC1B,SAAC4U,GAAD,MAAsC,MAAzBA,EAAQzB,gBAEvB9L,YAAa2O,EAAW6C,SAAS7Y,QAC/B,SAAC4U,GAAD,MAAsC,MAAzBA,EAAQzB,gBAEvB7L,KAAMA,GACNE,YAAaA,GACbD,WAAYA,IAGd,cAAC,GAAD,aAkECP,uBAzDf,SAAgBrN,GAAQ,IAAD,EACIgP,cAAnBC,EADe,EACfA,OAAQpP,EADO,EACPA,OADO,EAEqBe,oBAAS,GAF9B,mBAEd0b,EAFc,KAEC6E,EAFD,KAIf5I,EAAU,WACd4I,GAAiB,IAGb3I,EAAS,WACbxY,EAAMwN,QAAQ+B,KAAK,SACnB4R,GAAiB,IAcnB,OAXAxX,qBAAU,WACR3J,EAAMohB,gBAAgBnS,EAAQsJ,EAASC,KAEtC,IAEH7O,qBAAU,WACR3J,EAAMqhB,gBAAgBpS,EAAQpP,EAAQ0Y,EAASC,GAC/C2I,GAAiB,KAEhB,CAACthB,IAGFyhB,OAAOC,KAAKvhB,EAAMwhB,QAAQpF,YAAY9a,OAAS,GAC/CtB,EAAMwhB,QAAQpF,WAAWqF,cAAgBH,QACzCA,OAAOC,KAAKvhB,EAAMwhB,QAAQnF,YAAY/a,OAAS,GAC/CtB,EAAMwhB,QAAQnF,WAAWoF,cAAgBH,OAGvC,cAAC,GAAD,CACElF,WAAYpc,EAAMwhB,QAAQpF,WAAWnN,OACrC8I,aAAc/X,EAAMwhB,QAAQpF,WAAWla,GACvCma,WAAYrc,EAAMwhB,QAAQnF,WAC1BhC,UAAWra,EAAMwhB,QAAQpF,WAAW1L,gBAAgB2J,UACpDvC,SAAU9X,EAAMwhB,QAAQpF,WAAW1L,gBAAgBoH,SACnDtK,QAASxN,EAAMwN,QACfqK,YAAa7X,EAAM6X,YACnBvX,aAAcN,EAAMM,aACpBC,SAAUP,EAAMO,SAChB+b,cAAeA,EACf9b,WAAYR,EAAMQ,WAClBC,MAAOT,EAAMwhB,QAAQ/gB,MACrBE,QAASX,EAAMW,QAAQA,QACvBiN,WAAY5N,EAAM4N,aAKpB,qBAAK9K,UAAU,SAAf,SACE,cAAC,KAAD","file":"static/js/17.54c37d0f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"flexRow\":\"CourseVideo_flexRow__1-xKo\",\"flexColumn\":\"CourseVideo_flexColumn__3cdq1\",\"container\":\"CourseVideo_container__n9HIZ\",\"roboCoinsContainer\":\"CourseVideo_roboCoinsContainer__15Xq9\",\"roboCoins\":\"CourseVideo_roboCoins__3Yrmn\",\"sectionsHeader\":\"CourseVideo_sectionsHeader__1AwPM\",\"sectionItem\":\"CourseVideo_sectionItem__1DF3E\",\"courseModules\":\"CourseVideo_courseModules__8PX9S\",\"modulesContainer\":\"CourseVideo_modulesContainer__3mE-J\",\"moduleCard\":\"CourseVideo_moduleCard__1R0mN\",\"coins\":\"CourseVideo_coins__mEsif\",\"items\":\"CourseVideo_items__3sfxy\",\"moduleLocked\":\"CourseVideo_moduleLocked__1MR6w\",\"lockedHeading\":\"CourseVideo_lockedHeading__3ik1b\",\"videoSection\":\"CourseVideo_videoSection__3itY3\",\"videoList\":\"CourseVideo_videoList__NV71j\",\"listItemVideo\":\"CourseVideo_listItemVideo__1copf\",\"videoDetail\":\"CourseVideo_videoDetail__2bXFU\",\"videoAction\":\"CourseVideo_videoAction__2qoiq\",\"alignCenter\":\"CourseVideo_alignCenter__wFA9x\",\"justifyBetween\":\"CourseVideo_justifyBetween__8QIqF\",\"styledSerif\":\"CourseVideo_styledSerif__2o5Nk\",\"videoTitle\":\"CourseVideo_videoTitle__1DIyO\",\"fontSerif\":\"CourseVideo_fontSerif__2XeuJ\",\"courseName\":\"CourseVideo_courseName__GVfi4\",\"menuBurger\":\"CourseVideo_menuBurger__1kNmy\",\"burger\":\"CourseVideo_burger__3pcXu\",\"underline\":\"CourseVideo_underline__1b-B-\",\"activeItem\":\"CourseVideo_activeItem__1MFaW\",\"moduleHeader\":\"CourseVideo_moduleHeader__1ccqI\",\"moduleIcon\":\"CourseVideo_moduleIcon__1Ey0V\",\"locked\":\"CourseVideo_locked__2mO2T\",\"mediaItem\":\"CourseVideo_mediaItem__14OwZ\",\"content\":\"CourseVideo_content__20l59\",\"details\":\"CourseVideo_details__3ZFqZ\",\"coinsNeeded\":\"CourseVideo_coinsNeeded__h2Grw\",\"showLocked\":\"CourseVideo_showLocked__2ubuV\",\"activeCard\":\"CourseVideo_activeCard__2KZtd\",\"playingAnimation\":\"CourseVideo_playingAnimation__1IBU-\",\"videoContainer\":\"CourseVideo_videoContainer__x7ANm\",\"downloadBtn\":\"CourseVideo_downloadBtn__2UTg1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"flexRow\":\"Discussions_flexRow__UReTm\",\"flexColumn\":\"Discussions_flexColumn__1XVBf\",\"container\":\"Discussions_container__1G2PH\",\"questionContainer\":\"Discussions_questionContainer__ysq_7\",\"accordianContainer\":\"Discussions_accordianContainer__3_3Tx\",\"descContainer\":\"Discussions_descContainer__39DKs\",\"dialogContainer\":\"Discussions_dialogContainer__2jN0x\",\"timeSlotContainer\":\"Discussions_timeSlotContainer__3Khs5\",\"slots\":\"Discussions_slots__2XkyH\",\"slot\":\"Discussions_slot__EjTEW\",\"question\":\"Discussions_question__2jzNY\",\"inputContainer\":\"Discussions_inputContainer__2TjOl\",\"actionBtns\":\"Discussions_actionBtns__1rkdt\",\"dialogContentContainer\":\"Discussions_dialogContentContainer__1bKS6\",\"addImagesContainer\":\"Discussions_addImagesContainer__2cMty\",\"alignCenter\":\"Discussions_alignCenter__1hVC6\",\"justifyBetween\":\"Discussions_justifyBetween__MrrNT\",\"styledSerif\":\"Discussions_styledSerif__1tlUl\",\"discussionHeading\":\"Discussions_discussionHeading__1XCSw\",\"noBounds\":\"Discussions_noBounds__3ZRFT\",\"actionBtn\":\"Discussions_actionBtn__2g95K\",\"addImagesBtn\":\"Discussions_addImagesBtn__2MN0_\",\"imgContainer\":\"Discussions_imgContainer__2KKMl\",\"deleteBtn\":\"Discussions_deleteBtn__vIjuU\",\"liveDisBtn\":\"Discussions_liveDisBtn__37-kB\",\"doubtBtn\":\"Discussions_doubtBtn__3ooNJ\",\"details\":\"Discussions_details__3YRgO\",\"questionDesc\":\"Discussions_questionDesc__1lIok\",\"descImages\":\"Discussions_descImages__UKRG0\",\"inputElement\":\"Discussions_inputElement__kYjNQ\",\"accordianSummary\":\"Discussions_accordianSummary__fOkGx\",\"answerCollapsed\":\"Discussions_answerCollapsed__qiUel\",\"answerExpanded\":\"Discussions_answerExpanded__25vWp\",\"negative\":\"Discussions_negative__1cT3b\",\"positive\":\"Discussions_positive__3KTLm\",\"slotSelected\":\"Discussions_slotSelected__3uoO_\",\"modalInputContainer\":\"Discussions_modalInputContainer__2NyCJ\",\"tooltip\":\"Discussions_tooltip__1CmyH\",\"doubtBtnSmall\":\"Discussions_doubtBtnSmall__3Qm7R\",\"doubtBtnLarge\":\"Discussions_doubtBtnLarge__2xDip\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"flexRow\":\"Exercises_flexRow__3-X9f\",\"flexColumn\":\"Exercises_flexColumn__3GlC4\",\"quizesListContainer\":\"Exercises_quizesListContainer__1mq4Y\",\"quizes\":\"Exercises_quizes__30jHD\",\"assignments\":\"Exercises_assignments__1Tfk1\",\"container\":\"Exercises_container__1oyCK\",\"titleContainer\":\"Exercises_titleContainer__1ddnw\",\"exercisesContainer\":\"Exercises_exercisesContainer__2W7KQ\",\"quizContainer\":\"Exercises_quizContainer__3QhhI\",\"quizHeader\":\"Exercises_quizHeader__38JqK\",\"submitBtnContainer\":\"Exercises_submitBtnContainer__2UEmi\",\"questionContainer\":\"Exercises_questionContainer__ploj9\",\"optionsContainer\":\"Exercises_optionsContainer__1p8xu\",\"option\":\"Exercises_option__KOzYq\",\"customDialog\":\"Exercises_customDialog__3dB4m\",\"assignmentList\":\"Exercises_assignmentList__2fpwh\",\"quizesList\":\"Exercises_quizesList__3udOn\",\"assignment\":\"Exercises_assignment__2uDkY\",\"quiz\":\"Exercises_quiz__2YgOa\",\"alignCenter\":\"Exercises_alignCenter__3cRIT\",\"justifyBetween\":\"Exercises_justifyBetween__W-cex\",\"styledSerif\":\"Exercises_styledSerif__dqhGa\",\"submitBtn\":\"Exercises_submitBtn__2RchE\",\"questionImage\":\"Exercises_questionImage__3Hkgc\",\"selectedOption\":\"Exercises_selectedOption__22ZyT\",\"checkbox\":\"Exercises_checkbox__36pEV\",\"dialogTitle\":\"Exercises_dialogTitle__31K4y\",\"successTitle\":\"Exercises_successTitle__1SYbo\",\"warningTitle\":\"Exercises_warningTitle__2CqlY\",\"successDialog\":\"Exercises_successDialog__1CsFf\",\"warningDialog\":\"Exercises_warningDialog__1_xIB\",\"progressDiv\":\"Exercises_progressDiv__3tKuv\",\"assignmentsContainer\":\"Exercises_assignmentsContainer__1y0ln\",\"document\":\"Exercises_document__izXVK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"flexRow\":\"Updates_flexRow__3ZY43\",\"flexColumn\":\"Updates_flexColumn__3L3Ha\",\"quizesListContainer\":\"Updates_quizesListContainer__2X3pO\",\"quizes\":\"Updates_quizes__3NNU9\",\"assignments\":\"Updates_assignments__29vXl\",\"container\":\"Updates_container__8lZ6p\",\"titleContainer\":\"Updates_titleContainer__1cS0B\",\"exercisesContainer\":\"Updates_exercisesContainer__3xOdy\",\"quizContainer\":\"Updates_quizContainer__JQgHt\",\"quizHeader\":\"Updates_quizHeader__20se-\",\"submitBtnContainer\":\"Updates_submitBtnContainer__2Pd1m\",\"questionContainer\":\"Updates_questionContainer__3eAe0\",\"optionsContainer\":\"Updates_optionsContainer__2sjGT\",\"option\":\"Updates_option__3HL2e\",\"customDialog\":\"Updates_customDialog__3KYFE\",\"assignmentList\":\"Updates_assignmentList__2XGWH\",\"quizesList\":\"Updates_quizesList__mY0bL\",\"assignment\":\"Updates_assignment__ZOyG9\",\"quiz\":\"Updates_quiz__2pwsh\",\"details\":\"Updates_details__3dzc1\",\"alignCenter\":\"Updates_alignCenter__1hHSK\",\"justifyBetween\":\"Updates_justifyBetween__1a0z8\",\"styledSerif\":\"Updates_styledSerif__3WQOh\",\"submitBtn\":\"Updates_submitBtn__3putc\",\"questionImage\":\"Updates_questionImage__pJ3Hy\",\"selectedOption\":\"Updates_selectedOption__2ZD-o\",\"checkbox\":\"Updates_checkbox__1h3uL\",\"dialogTitle\":\"Updates_dialogTitle__3m4wj\",\"successTitle\":\"Updates_successTitle__3V2jN\",\"warningTitle\":\"Updates_warningTitle__Q5vvZ\",\"successDialog\":\"Updates_successDialog__3QGKs\",\"warningDialog\":\"Updates_warningDialog__bCmcp\",\"progressDiv\":\"Updates_progressDiv__2Tmks\",\"assignmentsContainer\":\"Updates_assignmentsContainer__19DbH\",\"document\":\"Updates_document__hLJm9\",\"joinNowBtn\":\"Updates_joinNowBtn__1c4_Q\",\"disabled\":\"Updates_disabled__2DmXM\"};","export default __webpack_public_path__ + \"static/media/edit-3.16e0d29a.svg\";","export default __webpack_public_path__ + \"static/media/video.aef5834f.svg\";","export default __webpack_public_path__ + \"static/media/list.3712f01e.svg\";","export default __webpack_public_path__ + \"static/media/edit-3-white.b537c687.svg\";","export default __webpack_public_path__ + \"static/media/video-white.7977b047.svg\";","export default __webpack_public_path__ + \"static/media/list-white.836a571c.svg\";","export default __webpack_public_path__ + \"static/media/money.05b52888.svg\";","export default __webpack_public_path__ + \"static/media/unlock-alt-solid.2ad9b701.svg\";","export default __webpack_public_path__ + \"static/media/cat.7e0528ef.svg\";","export default __webpack_public_path__ + \"static/media/Pause.532b8bdd.svg\";","export default __webpack_public_path__ + \"static/media/play.e9888d21.svg\";","export default __webpack_public_path__ + \"static/media/lightbulb.85b780ff.svg\";","export default __webpack_public_path__ + \"static/media/check-circle.d07f1aae.svg\";","import React, { useState, useRef } from \"react\";\nimport styles from \"./Discussions.module.css\";\nimport classNames from \"classnames\";\nimport {\n  Avatar,\n  Accordion,\n  AccordionSummary,\n  AccordionDetails,\n  IconButton,\n  Button,\n  Dialog,\n  DialogTitle,\n  DialogActions,\n  DialogContent,\n  Tooltip,\n  Switch,\n  Grid,\n  CircularProgress,\n} from \"@material-ui/core\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport DoneAllIcon from \"@material-ui/icons/DoneAll\";\nimport SendIcon from \"@material-ui/icons/Send\";\nimport QuestionAnswerIcon from \"@material-ui/icons/QuestionAnswer\";\nimport AddPhotoAlternateIcon from \"@material-ui/icons/AddPhotoAlternate\";\nimport HighlightOffIcon from \"@material-ui/icons/HighlightOff\";\nimport VideocamOutlinedIcon from \"@material-ui/icons/VideocamOutlined\";\nimport Skeleton from \"@material-ui/lab/Skeleton\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst Discussions = ({\n  module_id,\n  threads,\n  createThread,\n  followUp,\n  fetchSlots,\n  slots,\n  course_slug,\n  profile,\n}) => {\n  const [commentInput, setCommentInput] = useState(\"\");\n  const [newDoubtOpen, setNewDoubtOpen] = useState(false);\n  const [isInstructor, setIsInstructor] = useState(true);\n  const [isAnswer, setIsAnswer] = useState([]);\n  const [snackOpen, setSnackOpen] = useState(false);\n  const [open, setOpen] = useState(new Array(threads.length).fill(false));\n\n  const handleCloseNewDoubt = () => {\n    setNewDoubtOpen(false);\n  };\n\n  const slotBooked = () => {\n    setSnackOpen(true);\n  };\n\n  const handleClose = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n\n    setSnackOpen(false);\n  };\n\n  const handleNewSubmit = (newData) => {\n    if (newData?.question) {\n      createThread(\n        module_id,\n        newData.question,\n        newData.desc,\n        newData.images,\n        null,\n        newData.timeSlot.id,\n        null,\n        slotBooked\n      );\n    }\n  };\n\n  const handleImageClick = (src) => {\n    const a = document.createElement(\"a\");\n    a.href = src;\n    a.target = \"_blank\";\n    a.download = true;\n    a.click();\n  };\n\n  const answer = (id, index) => {\n    let isFinal = false;\n    if (isAnswer.includes(id)) isFinal = true;\n    followUp(id, commentInput, null, isFinal);\n    document.getElementById(\"comment\" + id).value = \"\";\n    let newOpen = [...open];\n    newOpen[index] = true;\n    console.log(\"seeetttttttttinggggggg oppeeen\");\n    setOpen(newOpen);\n  };\n\n  const commentForm = useRef();\n\n  const handleEnter = (e) => {\n    e.preventDefault();\n    if (e.key === \"Enter\" || e.keyCode === 13) {\n      commentForm.current.submit();\n    }\n  };\n\n  const handleSubmit = (e, id, index) => {\n    e.preventDefault();\n    answer(id, index);\n  };\n\n  const handleToggleIsAnswer = (id) => {\n    const index = isAnswer.findIndex((item) => item === id);\n    if (index === -1) {\n      setIsAnswer([...isAnswer, id]);\n    } else {\n      setIsAnswer(isAnswer.filter((item) => item !== id));\n    }\n  };\n\n  return (\n    <div className={styles.container}>\n      <Snackbar\n        open={snackOpen}\n        anchorOrigin={{\n          vertical: \"top\",\n          horizontal: \"center\",\n        }}\n        autoHideDuration={6000}\n        onClose={handleClose}\n      >\n        <Alert onClose={handleClose} severity=\"success\">\n          Your slot has been booked, For more detail check your registered\n          email.\n        </Alert>\n      </Snackbar>\n      <div\n        className={classNames(\n          styles.flexRow,\n          styles.justifyBetween,\n          styles.discussionHeading\n        )}\n      >\n        <h2>Discussion Forum</h2>\n        <Button\n          onClick={() => setNewDoubtOpen(true)}\n          variant=\"outlined\"\n          className={classNames(styles.doubtBtn, styles.doubtBtnLarge)}\n        >\n          New Doubt &nbsp;\n          <QuestionAnswerIcon fontSize=\"small\" />\n        </Button>\n        <Tooltip\n          title=\"New Doubt\"\n          className={classNames(styles.doubtBtn, styles.doubtBtnSmall)}\n          placement=\"top\"\n        >\n          <IconButton onClick={() => setNewDoubtOpen(true)}>\n            <QuestionAnswerIcon fontSize=\"small\" />\n          </IconButton>\n        </Tooltip>\n      </div>\n      <div className={classNames(styles.discussions, styles.flexColumn)}>\n        {threads.map((item, i) => {\n          return (\n            <div key={item.title + i} className={styles.questionContainer}>\n              <div className={styles.question}>\n                <div className={styles.profile}>\n                  <Avatar>AP</Avatar>\n                </div>\n                <div className={styles.details}>\n                  <h4>{item.title}</h4>\n                  <p>{item.date}</p>\n                  <p>{item.description}</p>\n                  <p className={styles.questionDesc}>{item.desc}</p>\n                  {item.image && (\n                    <div className={styles.descImages}>\n                      <Grid container spacing={2}>\n                        {/* {item.images.map((imgItem) => ( */}\n                        <Grid item md={3}>\n                          <div className={styles.descImage}>\n                            <img\n                              onClick={() => handleImageClick(item.image)}\n                              src={item.image}\n                              alt=\"desc\"\n                            />\n                          </div>\n                        </Grid>\n                      </Grid>\n                    </div>\n                  )}\n                </div>\n              </div>\n              {item.followups && item.followups.length > 0 && (\n                <Comments\n                  data={item.followups}\n                  isAnswered={\n                    item.followups.filter((item) => item.is_final_answer)\n                      .length > 0\n                  }\n                  answer={\n                    item.followups.filter((item) => item.is_final_answer)[0]\n                  }\n                  open={open}\n                  setOpen={setOpen}\n                  index={i}\n                />\n              )}\n              {profile.username === item.user || profile.is_staff ? (\n                <form\n                  onSubmit={(e) => handleSubmit(e, item.id, i)}\n                  className={styles.inputContainer}\n                  ref={commentForm}\n                >\n                  <input\n                    // value={commentInput}\n                    onChange={(e) => setCommentInput(e.target.value)}\n                    className={styles.inputElement}\n                    placeholder=\"Comment\"\n                    required\n                    id={\"comment\" + item.id}\n                    // onKeyUp={handleEnter}\n                    type=\"text\"\n                  />\n                  <div className={styles.actionBtns}>\n                    <input\n                      type=\"submit\"\n                      style={{\n                        visibility: \"hidden\",\n                        width: 0,\n                        position: \"absolute\",\n                        pointerEvents: \"none\",\n                      }}\n                    />\n                    {profile.is_staff && (\n                      <Switch\n                        checked={isAnswer.includes(item.id)}\n                        onChange={() => handleToggleIsAnswer(item.id)}\n                        name=\"checkedA\"\n                        inputProps={{ \"aria-label\": \"secondary checkbox\" }}\n                      />\n                    )}\n                    <IconButton type=\"submit\">\n                      <SendIcon />\n                    </IconButton>\n                  </div>\n                </form>\n              ) : null}\n            </div>\n          );\n        })}\n      </div>\n      <NewDoubtModal\n        open={newDoubtOpen}\n        handleClose={handleCloseNewDoubt}\n        handleNewSubmit={handleNewSubmit}\n        fetchSlots={fetchSlots}\n        slots={slots}\n        course_slug={course_slug}\n      />\n    </div>\n  );\n};\n\nexport default Discussions;\n\nconst Comments = ({ data, isAnswered, answer, open, setOpen, index }) => {\n  return (\n    <Accordion\n      className={styles.accordianContainer}\n      onChange={(e, a) => {\n        let newOpen = [...open];\n        newOpen[index] = a;\n        setOpen(newOpen);\n      }}\n      expanded={open[index]}\n    >\n      <AccordionSummary\n        expandIcon={<ExpandMoreIcon />}\n        aria-controls=\"panel1a-content\"\n        id=\"panel1a-header\"\n      >\n        <div className={styles.accordianSummary}>\n          <h3>\n            {isAnswered ? \"Answered\" : \"Not answered yet\"}&nbsp;\n            <span>\n              {isAnswered ? <DoneAllIcon fontSize=\"small\" /> : \"\"}\n            </span>{\" \"}\n          </h3>\n          {isAnswered && (\n            <p\n              className={\n                open[index] ? styles.answerExpanded : styles.answerCollapsed\n              }\n            >\n              {answer.description}\n            </p>\n          )}\n        </div>\n      </AccordionSummary>\n      <AccordionDetails>\n        <div className={styles.descContainer}>\n          {data.map((item, i) => {\n            return (\n              <div key={item.description + i} className={styles.question}>\n                <div className={styles.profile}>\n                  <Avatar>AP</Avatar>\n                </div>\n                <p>{item.description}</p>\n              </div>\n            );\n          })}\n        </div>\n      </AccordionDetails>\n    </Accordion>\n  );\n};\n\nconst NewDoubtModal = ({\n  open,\n  handleClose,\n  handleNewSubmit,\n  fetchSlots,\n  slots,\n  course_slug,\n}) => {\n  const [title, setTitle] = useState(\"\");\n  const [desc, setDesc] = useState(\"\");\n  const [images, setImages] = useState([]);\n\n  //For slots\n  const [timeSlots, setTimeSlots] = useState([]);\n  const [showTimeSlots, setShowTimeSlots] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [selectedSlot, setSelectedSlot] = useState({});\n\n  React.useEffect(() => {\n    setTitle(\"\");\n    setDesc(\"\");\n    setImages([]);\n    setTimeSlots([]);\n    setShowTimeSlots(false);\n    setLoading(false);\n    setSelectedSlot({});\n  }, [open]);\n\n  const handleChangeImage = (e) => {\n    const image = e.target.files[0];\n    const reader = new FileReader();\n    if (image) {\n      try {\n        reader.readAsDataURL(image);\n      } catch (error) {}\n      reader.onloadend = () => {\n        if (reader.result)\n          setImages([\n            ...images,\n            {\n              title: image.name,\n              src: reader.result,\n              file: image,\n            },\n          ]);\n      };\n    }\n  };\n\n  const handleClickDelete = (src) => {\n    setImages(images.filter((item) => item.src !== src));\n  };\n\n  //TODO\n  //Form submit, use this function to send data to backend\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    // setShowTimeSlots(false);\n    const formData = new FormData();\n    let data = {\n      question: title,\n      desc,\n      isLiveDoubt: Boolean(selectedSlot),\n      date: new Date().toISOString(),\n    };\n    if (data.isLiveDoubt) data[\"timeSlot\"] = selectedSlot;\n    if (images && images.length) {\n      images.forEach((item) => {\n        formData.append(\"image\", item.file); //change the key acc. to backend\n      });\n      // data[\"images\"] = images.map((item) => item.src);\n      data[\"images\"] = images[0];\n    }\n    handleNewSubmit(data);\n    handleClose();\n  };\n\n  const successSlots = (slots) => {\n    console.log(\"succceessss\", slots);\n    setTimeSlots(slots);\n    let tempSlots = slots.map((slot) => {\n      let date = new Date(slot.starts_at);\n      let dValue = `${date.getDate()}/${date.getMonth()}/${date.getFullYear()}`;\n      let time = `${date.getHours()}: ${date.getMinutes()}`;\n      slot.date = dValue;\n      slot.time = time;\n      return slot;\n    });\n    setTimeSlots(tempSlots);\n    setLoading(false);\n  };\n\n  const handleVideoClick = async () => {\n    setLoading(true);\n    await fetchSlots(course_slug, successSlots);\n    // const date = new Date();\n    // const dValue = `${date.getDate()}/${date.getMonth()}/${date.getFullYear()}`;\n    // setTimeSlots([\n    //   {\n    //     date: dValue,\n    //     time: \"03:00 PM\",\n    //   },\n    //   {\n    //     date: dValue,\n    //     time: \"03:00 PM\",\n    //   },\n    //   {\n    //     date: dValue,\n    //     time: \"03:00 PM\",\n    //   },\n    // ]);\n    setShowTimeSlots(true);\n    // setTimeout(() => {\n    //   setLoading(false);\n    // }, 2000);\n  };\n\n  const handleClickSlot = (slot) => {\n    if (selectedSlot === slot) {\n      setSelectedSlot({});\n    } else {\n      setSelectedSlot(slot);\n    }\n  };\n\n  return (\n    <Dialog\n      open={open}\n      onClose={handleClose}\n      aria-labelledby=\"alert-dialog-title\"\n      aria-describedby=\"alert-dialog-description\"\n      style={{ zIndex: 999999 }}\n      className={styles.dialogContainer}\n    >\n      <form onSubmit={handleSubmit}>\n        <DialogTitle id=\"alert-dialog-title\">{\"Ask a doubt\"}</DialogTitle>\n        <DialogContent>\n          <div className={styles.dialogContentContainer}>\n            <div\n              className={classNames(\n                styles.modalInputContainer,\n                styles.flexColumn\n              )}\n            >\n              <label htmlFor=\"title\">Question</label>\n              <input\n                name=\"title\"\n                required\n                value={title}\n                type=\"text\"\n                onChange={(e) => setTitle(e.target.value)}\n              />\n            </div>\n            <div\n              className={classNames(\n                styles.modalInputContainer,\n                styles.flexColumn\n              )}\n            >\n              <label htmlFor=\"desc\">Description</label>\n              <textarea\n                name=\"desc\"\n                required\n                value={desc}\n                type=\"text\"\n                minLength=\"6\"\n                onChange={(e) => setDesc(e.target.value)}\n              />\n            </div>\n            <div className={styles.addImagesContainer}>\n              {images.map((image) => {\n                return (\n                  <div key={image.title} className={styles.imgContainer}>\n                    <img src={image.src} alt=\"question\" />\n                    <IconButton\n                      onClick={() => handleClickDelete(image.src)}\n                      className={styles.deleteBtn}\n                    >\n                      <HighlightOffIcon fontSize=\"small\" />\n                    </IconButton>\n                  </div>\n                );\n              })}\n              {/* <Button className={styles.addImagesBtn} variant=\"contained\">\n              <AddPhotoAlternateIcon />\n            </Button> */}\n              <Button\n                className={styles.addImagesBtn}\n                variant=\"contained\"\n                component=\"label\"\n                onClick={() => {\n                  if (images.length === 1) {\n                    alert(\"Can add single images\");\n                  }\n                }}\n              >\n                <AddPhotoAlternateIcon />\n                {images.length < 1 && (\n                  <input\n                    type=\"file\"\n                    id=\"file\"\n                    name=\"image\"\n                    onChange={handleChangeImage}\n                    accept=\"image/jpg, image/png, image/jpeg\"\n                    style={{ width: \"0\", opacity: \"0\" }}\n                  />\n                )}\n              </Button>\n            </div>\n            {showTimeSlots && (\n              <div className={styles.timeSlotContainer}>\n                <h4>Select Time Slot</h4>\n                <Grid container className={styles.slots}>\n                  {console.log(timeSlots)}\n                  {loading ? (\n                    <CircularProgress />\n                  ) : (\n                    timeSlots.map((item, i) => (\n                      <Grid key={item.date + i} item md={3}>\n                        <Button\n                          onClick={() => handleClickSlot(item)}\n                          variant=\"outlined\"\n                          className={classNames(\n                            styles.slot,\n                            selectedSlot === item ? styles.slotSelected : \"\"\n                          )}\n                        >\n                          <h5>{item.date}</h5>\n                          <p>{item.time}</p>\n                        </Button>\n                      </Grid>\n                    ))\n                  )}\n                  {/* {timeSlots.map((item, i) =>\n                    !loading ? (\n                      <Grid key={item.date + i} item md={3}>\n                        <Button\n                          onClick={() => handleClickSlot(item)}\n                          variant=\"outlined\"\n                          className={classNames(\n                            styles.slot,\n                            selectedSlot === item ? styles.slotSelected : \"\"\n                          )}\n                        >\n                          <h5>{item.date}</h5>\n                          <p>{item.time}</p>\n                        </Button>\n                      </Grid>\n                    ) : (\n                      <CircularProgress />\n                    )\n                  )} */}\n                </Grid>\n              </div>\n            )}\n          </div>\n        </DialogContent>\n        <DialogActions>\n          <Tooltip\n            className={styles.tooltip}\n            placement=\"top\"\n            title=\"Live Doubt Discussion\"\n          >\n            <Button onClick={handleVideoClick} className={styles.liveDisBtn}>\n              Book Live Slot&nbsp;\n              <VideocamOutlinedIcon fontSize=\"small\" />\n            </Button>\n          </Tooltip>\n          <Button\n            className={classNames(styles.actionBtn, styles.negative)}\n            onClick={handleClose}\n          >\n            Cancel\n          </Button>\n          <Button\n            className={classNames(styles.actionBtn, styles.positive)}\n            type=\"submit\"\n            autoFocus\n          >\n            Submit\n          </Button>\n        </DialogActions>\n      </form>\n    </Dialog>\n  );\n};\n","import React, { useState, useEffect } from \"react\";\nimport styles from \"./Exercises.module.css\";\nimport {\n  Avatar,\n  IconButton,\n  Button,\n  Tooltip,\n  Card,\n  Grid,\n  Checkbox,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  CircularProgress,\n  Box,\n  Typography,\n  Radio,\n  Icon,\n} from \"@material-ui/core\";\nimport classNames from \"classnames\";\nimport { withRouter, useParams } from \"react-router-dom\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\nimport WarningIcon from \"@material-ui/icons/Warning\";\nimport animationData from \"../../../public/animation/confetti.json\";\nimport Lottie from \"react-lottie\";\nimport CloseIcon from \"@material-ui/icons/Close\";\n\nconst Exercises = ({\n  exercises,\n  currentExercise,\n  type,\n  history,\n  quizes,\n  assignments,\n  quiz,\n  nextContent,\n  submitQuiz,\n}) => {\n  const [selectedAnswers, setSelectedAnswers] = useState([]);\n  const [currentQuiz, setCurrentQuiz] = useState({});\n  const [selectedAns, setSelectedAns] = useState([]);\n  const [wrongAns, setwrongAns] = useState([]);\n\n  const [currentAssignment, setCurrentAssignment] = useState({});\n\n  const [score, setScore] = useState({\n    achieved: 0,\n    total: 30,\n  });\n\n  const [successOpen, setSuccessOpen] = useState(false);\n  const [warningOpen, setWarningOpen] = useState(false);\n  const [quizSubmitted, setQuizSubmitted] = useState(false);\n\n  const { course, module, title, tabOpen } = useParams();\n\n  useEffect(() => {\n    if (type === \"quiz\") {\n      if (currentExercise) {\n        const element = document.getElementById(\n          currentExercise.title +\n            exercises.findIndex((item) => item.title === currentExercise.title)\n        );\n        if (element) element.scrollIntoView({ behavior: \"smooth\" });\n      }\n      let tempSelect = [];\n      exercises.forEach((item) => {\n        tempSelect.push({\n          title: item.tile,\n          answers: item.questions.map((questItem) => questItem.answer),\n          userSelected: item.questions.map(() => {\n            return null;\n          }),\n        });\n      });\n\n      setSelectedAnswers(tempSelect);\n    }\n  }, [currentExercise, exercises, type]);\n\n  useEffect(() => {\n    if (quiz && type === \"quiz\") {\n      let currQuiz = quizes.find((item) => item.slug === quiz);\n      setCurrentQuiz(currQuiz);\n      setScore({\n        achieved: 0,\n        total: currQuiz.questions.length * 10,\n      });\n      setSelectedAns([]);\n    }\n    if (quiz && type === \"assignment\") {\n      let currAssn = assignments.find((item) => item.slug === quiz);\n      setCurrentAssignment(currAssn);\n      // setScore({\n      //   achieved: 0,\n      //   total: currQuiz.questions.length * 10,\n      // });\n      // setSelectedAns([]);\n    }\n    console.log({ quiz, quizes });\n  }, [quiz, quizes, assignments, type]);\n\n  // const handleSelectAnswer = (item, questionIndex) => {\n  //   let temp = [...selectedAnswers];\n  //   if (questionIndex !== -1) {\n  //     let tempUserSelected = temp[quizIndex].userSelected;\n  //     tempUserSelected[questionIndex] = item;\n  //     temp[quizIndex] = {\n  //       ...temp[quizIndex],\n  //       userSelected: tempUserSelected,\n  //     };\n  //   }\n  //   // setSelectedAnswers(temp);\n  // };\n\n  const handleSelectAnswer = (item, questionIndex) => {\n    let newSelectedAns = [...selectedAns];\n    newSelectedAns[questionIndex] = item;\n    setSelectedAns(newSelectedAns);\n  };\n\n  // const onClickSubmit = (quizIndex) => {\n  //   const tempSelected = selectedAnswers[quizIndex].userSelected;\n  //   const correctAnswers = selectedAnswers[quizIndex].answers;\n  //   let tempScore = 0;\n  //   let flag = false;\n  //   tempSelected.forEach((item) => {\n  //     if (item) flag = true;\n  //   });\n  //   if (flag) {\n  //     tempSelected.forEach((item, i) => {\n  //       if (item) {\n  //         if (item === correctAnswers[i] && item !== null) tempScore += 10;\n  //       }\n  //     });\n  //     setScore({ ...score, achieved: tempScore });\n  //     setSuccessOpen(true);\n  //   } else {\n  //     setWarningOpen(true);\n  //   }\n  // };\n\n  const onClickSubmit = (quizId) => {\n    setQuizSubmitted(true);\n    let userSelected = [...selectedAns];\n    let ans = currentQuiz.questions.map((question) => {\n      return question.options.filter((option) => option.is_correct);\n    });\n    if (userSelected.length > 0) {\n      let tempScore = 0;\n      ans.forEach((item, i) => {\n        let flag = true;\n        if (item.length === (userSelected[i] ? userSelected[i].length : 0)) {\n          item.forEach((element) => {\n            if (!userSelected[i].includes(element)) {\n              flag = false;\n              return;\n            }\n          });\n        } else {\n          flag = false;\n        }\n        if (flag) {\n          tempScore = tempScore + 10;\n        }\n      });\n      setScore({\n        ...score,\n        achieved: tempScore,\n      });\n      setSuccessOpen(true);\n      console.log(currentQuiz);\n      submitQuiz(currentQuiz.id, tempScore, successQuizSubmitted);\n      // setSelectedAns([]);\n    } else {\n      setWarningOpen(true);\n    }\n  };\n\n  const successQuizSubmitted = () => {\n    setQuizSubmitted(false);\n  };\n\n  const handleCloseSuccess = () => {\n    setSuccessOpen(false);\n  };\n\n  const handleCloseWarning = () => {\n    setWarningOpen(false);\n  };\n\n  return (\n    <div className={styles.container}>\n      <div className={styles.titleContainer}>\n        <h2>Exercises</h2>\n        {type === \"quiz\" && (\n          <IconButton\n            onClick={() =>\n              history.push(`/course/${course}/${module}/exercises`)\n            }\n          >\n            <CloseIcon />\n          </IconButton>\n        )}\n      </div>\n      {type === \"quiz\" ? (\n        <div className={styles.exercisesContainer}>\n          <div className={styles.quizContainer}>\n            <div className={styles.quizHeader}>\n              <h5>{currentQuiz.title ? currentQuiz.title : null}</h5>\n              <h5>\n                Score : {currentQuiz?.quiz_submission?.additional_info?.score} /{\" \"}\n                {score.total}\n              </h5>\n            </div>\n            {currentQuiz.questions\n              ? currentQuiz.questions.map((exercise, i) => {\n                  return exercise.multiple ? (\n                    <ExerciseRender\n                      questionIndex={i}\n                      // quizIndex={quizIndex}\n                      handleSelectAnswer={handleSelectAnswer}\n                      exercise={exercise}\n                      id={exercise.title + i}\n                      wrong={wrongAns}\n                    />\n                  ) : (\n                    <ExerciseRenderSingleChoice\n                      questionIndex={i}\n                      // quizIndex={quizIndex}\n                      handleSelectAnswer={handleSelectAnswer}\n                      exercise={exercise}\n                      id={exercise.title + i}\n                      wrong={wrongAns}\n                    />\n                  );\n                })\n              : null}\n            <div className={styles.submitBtnContainer}>\n              <Button\n                onClick={() => onClickSubmit(currentQuiz.id)}\n                className={styles.submitBtn}\n              >\n                Submit\n              </Button>\n              {/* <Button\n                onClick={() => nextContent(quiz)}\n                className={styles.submitBtn}\n              >\n                Next\n              </Button> */}\n            </div>\n          </div>\n          {/* {quizes.map((item, quizIndex) => {\n            return (\n              <div className={styles.quizContainer}>\n                <div className={styles.quizHeader}>\n                  <h5>{item.title}</h5>\n                  <h5>\n                    Score : {score.achieved} / {score.total}\n                  </h5>\n                </div>\n                {item.questions.map((exercise, i) => {\n                  return (\n                    <ExerciseRender\n                      questionIndex={i}\n                      quizIndex={quizIndex}\n                      handleSelectAnswer={handleSelectAnswer}\n                      exercise={exercise}\n                      id={exercise.title + i}\n                    />\n                  );\n                })}\n                <div className={styles.submitBtnContainer}>\n                  <Button\n                    onClick={() => onClickSubmit(quizIndex)}\n                    className={styles.submitBtn}\n                  >\n                    Submit\n                  </Button>\n                </div>\n              </div>\n            );\n          })} */}\n          <CustomDialog\n            open={successOpen && quizSubmitted}\n            handleClose={handleCloseSuccess}\n            score={score}\n            title=\"Quiz Score\"\n            message=\"Hero\"\n            type=\"success\"\n          />\n\n          <CustomDialog\n            open={warningOpen && quizSubmitted}\n            handleClose={handleCloseWarning}\n            title=\"Solve Questions\"\n            message=\"Oops! Seems like you haven't answered any questions yet.\"\n            type=\"warning\"\n          />\n        </div>\n      ) : type === \"assignment\" ? (\n        <Assignment\n          assignment={currentAssignment}\n          // title=\"Assignment 1\"\n          // src=\"https://anuragtech02.github.io/sample-robo/\"\n        />\n      ) : (\n        <ExercisesList\n          quizes={quizes}\n          assignments={assignments}\n          history={history}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default withRouter(Exercises);\n\nconst ExercisesList = ({ history, quizes, assignments }) => {\n  const data = [\n    {\n      score: null,\n      questions: 4,\n      module: \"ratation-and-translation\",\n    },\n    {\n      score: 30,\n      questions: 4,\n      module: \"ratation-and-translation\",\n    },\n    {\n      score: 10,\n      questions: 3,\n      module: \"ratation-and-translation\",\n    },\n    {\n      score: 20,\n      questions: 5,\n      module: \"ratation-and-translation\",\n    },\n  ];\n\n  const handleClickQuiz = (quiz) => {\n    history.push(history.location.pathname + \"/q/\" + quiz);\n  };\n\n  const handleClickAssignment = (assignment) => {\n    history.push(\n      history.location.pathname +\n        \"/a/\" +\n        assignment.toLowerCase().split(\" \").join(\"-\")\n    );\n  };\n\n  return (\n    <div className={styles.quizesListContainer}>\n      <div className={styles.quizes}>\n        <h3>Quizes</h3>\n        <ul className={styles.quizesList}>\n          {quizes.map((item, i) => {\n            return (\n              <li\n                key={item?.score?.toString() + i}\n                onClick={() => handleClickQuiz(item.slug)}\n                className={styles.quiz}\n              >\n                <div className={styles.details}>\n                  <h4>{item.title}</h4>\n                  <p>{item.questions.length} Questions</p>\n                </div>\n\n                <div className={styles.progressDiv}>\n                  <CircularProgressWithLabel\n                    value={\n                      item.quiz_submission?.additional_info?.score\n                        ? (item.quiz_submission?.additional_info?.score /\n                            (item.questions.length * 10)) *\n                          100\n                        : 0\n                    }\n                  />\n                </div>\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n      <div className={styles.assignments}>\n        <h3>Assignments</h3>\n        <ul className={styles.assignmentList}>\n          {assignments.map((item, i) => {\n            return (\n              <li\n                key={item.score + i}\n                onClick={() => handleClickAssignment(item.slug)}\n                className={styles.assignment}\n              >\n                <div className={styles.details}>\n                  <h4>{item.title}</h4>\n                  {/* <p>{item.questions} Questions</p> */}\n                </div>\n\n                <div className={styles.progressDiv}>\n                  <CircularProgressWithLabel\n                    value={(item.score ? item.score : 0 / (4 * 10)) * 100}\n                  />\n                </div>\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nconst ExerciseRender = ({\n  exercise,\n  id,\n  handleSelectAnswer,\n  questionIndex,\n  quizIndex,\n  wrong,\n}) => {\n  const [selected, setSelected] = useState([]);\n\n  useEffect(() => {\n    setSelected([]);\n  }, [exercise]);\n\n  useEffect(() => {\n    // console.log(selected);\n  }, [selected]);\n\n  const handleSelectOption = (item, i) => {\n    if (!selected.includes(item)) {\n      setSelected([...selected, item]);\n      handleSelectAnswer([...selected, item], questionIndex);\n    } else {\n      setSelected(selected.filter((sel) => sel !== item));\n      handleSelectAnswer(\n        selected.filter((sel) => sel !== item),\n        questionIndex\n      );\n    }\n  };\n\n  return (\n    <div className={styles.questionContainer} id={id}>\n      <h4>{exercise.description}</h4>\n      <div className={styles.optionsContainer}>\n        <Grid container spacing={4}>\n          {exercise.options.map((item) => {\n            return (\n              <Grid item md={6} sm={6} xs={12}>\n                <div\n                  className={classNames(\n                    styles.option,\n                    selected.includes(item) ? styles.selectedOption : \"\",\n                    wrong.includes(item) ? styles.wrongOption : \"\"\n                  )}\n                  onClick={() => handleSelectOption(item, questionIndex)}\n                >\n                  <Checkbox\n                    checked={selected.includes(item)}\n                    onChange={() => {\n                      handleSelectOption(item, questionIndex);\n                    }}\n                    name=\"checkedB\"\n                    color=\"primary\"\n                    className={styles.checkbox}\n                  />\n\n                  {exercise.answer_type === \"i\" ? (\n                    <img\n                      src={exercise.answer_image}\n                      alt=\"option-qiuz\"\n                      width=\"150px\"\n                    />\n                  ) : (\n                    <p>{item.answer_text}</p>\n                  )}\n                </div>\n              </Grid>\n            );\n          })}\n        </Grid>\n      </div>\n    </div>\n  );\n};\n\nconst ExerciseRenderSingleChoice = ({\n  exercise,\n  id,\n  handleSelectAnswer,\n  questionIndex,\n  quizIndex,\n  wrong,\n}) => {\n  const [selected, setSelected] = useState({});\n\n  useEffect(() => {\n    setSelected();\n  }, [exercise]);\n\n  useEffect(() => {\n    // console.log(selected);\n  }, [selected]);\n\n  const handleSelectOption = (item, i) => {\n    if (selected !== item) {\n      setSelected(item);\n      handleSelectAnswer([item], questionIndex);\n    } else {\n      setSelected({});\n      handleSelectAnswer(null, questionIndex);\n    }\n  };\n\n  return (\n    <div className={styles.questionContainer} id={id}>\n      <h4>{exercise.description}</h4>\n      {exercise.image && (\n        <div className={styles.questionImage}>\n          <img src={exercise.image} alt=\"exercise\" />\n        </div>\n      )}\n      <div className={styles.optionsContainer}>\n        <Grid container spacing={4}>\n          {exercise.options.map((item) => {\n            return (\n              <Grid item md={6} sm={6} xs={12}>\n                <div\n                  className={classNames(\n                    styles.option,\n                    selected?.answer_text === item?.answer_text\n                      ? styles.selectedOption\n                      : \"\",\n                    wrong.includes(item) ? styles.wrongOption : \"\"\n                  )}\n                  onClick={() => handleSelectOption(item, questionIndex)}\n                >\n                  <Radio\n                    checked={selected?.answer_text === item?.answer_text}\n                    onChange={() => handleSelectOption(item, questionIndex)}\n                    // value=\"a\"\n                    name=\"single-choice-quiz\"\n                    inputProps={{ \"aria-label\": \"Quiz\" }}\n                  />\n\n                  {exercise.answer_type === \"i\" ? (\n                    <img\n                      src={item.answer_image}\n                      alt=\"option-qiuz\"\n                      width=\"150px\"\n                    />\n                  ) : (\n                    <p>{item.answer_text}</p>\n                  )}\n                </div>\n              </Grid>\n            );\n          })}\n        </Grid>\n      </div>\n    </div>\n  );\n};\n\nconst CustomDialog = ({ open, handleClose, score, title, message, type }) => {\n  return (\n    <>\n      <Dialog\n        onClose={handleClose}\n        aria-labelledby=\"simple-dialog-title\"\n        open={open}\n        style={{ zIndex: 999999 }}\n      >\n        <DialogTitle id=\"simple-dialog-title\">\n          <span\n            className={classNames(\n              styles.dialogTitle,\n              type.toLowerCase() === \"success\"\n                ? styles.successTitle\n                : type.toLowerCase() === \"warning\"\n                ? styles.warningTitle\n                : \"\"\n            )}\n          >\n            {title}\n          </span>\n        </DialogTitle>\n        <DialogContent>\n          <div\n            className={classNames(\n              styles.customDialog,\n              type.toLowerCase() === \"success\"\n                ? styles.successDialog\n                : type.toLowerCase() === \"warning\"\n                ? styles.warningDialog\n                : \"\"\n            )}\n          >\n            {type.toLowerCase() === \"success\" && score.achieved ? (\n              <FavoriteIcon />\n            ) : type.toLowerCase() === \"warning\" ? (\n              <WarningIcon />\n            ) : null}\n            &nbsp;\n            <p>\n              {type.toLowerCase() === \"success\"\n                ? score.achieved\n                  ? `Congratulations! You scored : ${score.achieved} points`\n                  : \"Oops! Seems like you missed this time, try again.\"\n                : type.toLowerCase() === \"warning\"\n                ? `${message}`\n                : \"\"}\n            </p>\n          </div>\n        </DialogContent>\n      </Dialog>\n      {open && type.toLowerCase() === \"success\" && (\n        <div\n          style={{\n            // zIndex: 999999999999,\n            // margin: \"auto\",\n            // width: \"100%\",\n            // height: \"100vh\",\n            position: \"fixed\",\n            top: \"50%\",\n            left: \"50%\",\n            transform: \"translate(-50%,-50%)\",\n          }}\n        >\n          <ConfettiAnim />\n        </div>\n      )}\n    </>\n  );\n};\n\nconst CircularProgressWithLabel = (props) => {\n  return (\n    <Box\n      position=\"relative\"\n      borderRadius=\"50%\"\n      boxShadow=\"2px 2px 10px rgba(0, 0, 0, 0.1)\"\n      display=\"inline-flex\"\n    >\n      <CircularProgress variant=\"determinate\" {...props} />\n      <Box\n        top={0}\n        left={0}\n        bottom={0}\n        right={0}\n        position=\"absolute\"\n        display=\"flex\"\n        alignItems=\"center\"\n        justifyContent=\"center\"\n      >\n        <Typography\n          variant=\"caption\"\n          component=\"div\"\n          color=\"textSecondary\"\n        >{`${Math.round(props.value)}%`}</Typography>\n      </Box>\n    </Box>\n  );\n};\n\nconst Assignment = ({ assignment }) => {\n  const [val, setVal] = useState(\"\");\n  return (\n    <div className={styles.assignmentsContainer}>\n      <h3>{assignment?.title}</h3>\n      <div className={styles.document}>\n        <iframe\n          width=\"100%\"\n          height=\"100%\"\n          frameBorder=\"none\"\n          title={assignment?.title}\n          src={assignment?.content_info?.source}\n        ></iframe>\n      </div>\n    </div>\n  );\n};\n\nconst ConfettiAnim = () => {\n  const defaultOptions = {\n    loop: false,\n    autoplay: true,\n    animationData: animationData,\n    rendererSettings: {\n      preserveAspectRatio: \"xMidYMid slice\",\n    },\n  };\n\n  return (\n    <Lottie\n      options={defaultOptions}\n      height={400}\n      width={400}\n      isStopped={false}\n      isPaused={false}\n    />\n  );\n};\n\nexport const quizesRaw = {\n  title: \"Module 2\",\n  questions: [\n    {\n      id: \"0\",\n      image: \"https://i.stack.imgur.com/x1zEk.png\",\n      description:\n        \"Change X and Set X blocks are used to perform the same task.\",\n      options: [\n        { id: \"a\", answer_text: \"True\", is_correct: false },\n        { id: \"b\", answer_text: \"False\", is_correct: true },\n      ],\n      multiple: false,\n      answer: {\n        type: \"text\",\n\n        correct: \"b\",\n        explanation:\n          \" Change X block increases or decreases X value, whereas Set X block is to fix or set X value.\",\n      },\n    },\n    {\n      id: \"1\",\n      description:\n        \" Consider that your sprite is in the position X = 30 and Y = 0. If your sprite wants to go at X = 80 and Y = 0 then which of the following will help your sprite to go to the desired position ? \",\n      options: [\n        { id: \"a\", answer_text: \"m2q1a\", is_correct: false },\n        { id: \"b\", answer_text: \"m2q1b\", is_correct: false },\n        { id: \"c\", answer_text: \"m2q1c\", is_correct: false },\n        { id: \"d\", answer_text: \"m2q1d\", is_correct: true },\n      ],\n      multiple: false,\n      answer: {\n        type: \"image\",\n\n        correct: \"d\",\n        explanation:\n          \" Initially x = 30 and y = 0, we want x = 80. So there are two options :  1) Change x by 50 block (80 - 30 = 50)  2) Set x to 80 block (Alternative) .\",\n      },\n    },\n    {\n      id: \"2\",\n      Info:\n        \"We all know very well,Doraemon loves Dora cakes. Assume that Doraemon is your sprite and you have to help him to reach towards the Dora cakes. Nobita’s mom has kept that bag of Dora cakes in their kitchen (which is 100 steps away from Nobita’s room) inside the cupboard (which is 70 steps above from the ground). Then: \",\n      description: \"  Which block will help Doraemon to reach in the kitchen? \",\n      options: [\n        { id: \"a\", answer_text: \"m2q2a\", is_correct: true },\n        { id: \"b\", answer_text: \"m2q2b\", is_correct: false },\n        { id: \"c\", answer_text: \"m2q2c\", is_correct: false },\n        { id: \"d\", answer_text: \"m2q2d\", is_correct: false },\n      ],\n      answer: {\n        type: \"image\",\n        multiple: false,\n\n        correct: \"a\",\n        explanation:\n          \"Exact position of doraemon is not given. So we can’t use set x to 100 block because it will fix x = 100. We have given the distance i.e change in the two positions, so answer_text is A.\",\n      },\n    },\n    {\n      id: \"3\",\n      description:\n        \"  Which block will help Doraemon to reach near the Dora cakes from Nobita’s Room? \",\n      options: [\n        { id: \"a\", answer_text: \"m2q3a\", is_correct: false },\n        { id: \"b\", answer_text: \"m2q3b\", is_correct: true },\n        { id: \"c\", answer_text: \"m2q3c\", is_correct: false },\n        { id: \"d\", answer_text: \"m2q3d\", is_correct: true },\n      ],\n      multiple: true,\n      answer: {\n        type: \"image\",\n\n        correct: [\"d\", \"b\"],\n      },\n    },\n    {\n      id: \"4\",\n      description:\n        \"  If the Doraemon wants to reach within 10 sec then which block will you use?\",\n      options: [\n        { id: \"a\", answer_text: \"m2q4a\", is_correct: false },\n        { id: \"b\", answer_text: \"m2q4b\", is_correct: false },\n        { id: \"c\", answer_text: \"m2q4c\", is_correct: false },\n        { id: \"d\", answer_text: \"m2q4d\", is_correct: true },\n      ],\n      multiple: false,\n      answer: {\n        type: \"image\",\n\n        correct: \"d\",\n      },\n    },\n  ],\n};\n","import React, { useState, useEffect } from \"react\";\nimport { Button } from \"@material-ui/core\";\nimport styles from \"./Updates.module.css\";\nimport moment from \"moment\";\nimport Countdown from \"react-countdown\";\nimport classNames from \"classnames\";\nimport axios from \"axios\";\n\nconst Updates = () => {\n  // const data = [\n  //   {\n  //     time: Date.now() + Math.floor(Math.random() * 1000000000),\n  //     isDone: true,\n  //   },\n  //   {\n  //     time: Date.now() + Math.floor(Math.random() * 1000000000),\n  //     isDone: false,\n  //   },\n  //   {\n  //     time: Date.now() + Math.floor(Math.random() * 1000000000),\n  //     isDone: false,\n  //   },\n  //   {\n  //     time: Date.now() + Math.floor(Math.random() * 1000000000),\n  //     isDone: true,\n  //   },\n  // ];\n\n  const [data, setData] = useState([]);\n\n  const [timers, setTimers] = useState([\n    // {\n    //   isDone: false,\n    // },\n    // {\n    //   isDone: false,\n    // },\n    // {\n    //   isDone: false,\n    // },\n    // {\n    //   isDone: false,\n    // },\n  ]);\n  //TODO: SHWETA -> CALL FROM REDUX\n  useEffect(() => {\n    axios\n      .get(\"/forum/discussion-slots\", {\n        params: { course_slug: \"test-course-1\" },\n      })\n      .then((res) => {\n        if (res.data) {\n          setData(res.data);\n          setTimers(\n            res.data.map((item) => {\n              return {\n                isDone: new Date(item.starts_at) > new Date().getDate(),\n              };\n            })\n          );\n        }\n      });\n    // fetch(\"/forum/discussion-slots?course_slug=test-course-1\", {\n    //   method: \"GET\",\n    // }).then((res) => console.log(res));\n  }, []);\n\n  const renderer = ({ hours, minutes, seconds, completed }) => {\n    if (completed) {\n      // Render a completed state\n      return <span>You can now join the meeting</span>;\n    } else {\n      // Render a countdown\n      return (\n        <span>\n          {hours} Hr {minutes} Min {seconds} Sec\n        </span>\n      );\n    }\n  };\n\n  const handleCompleteTimer = (e, item) => {\n    if (e.completed) {\n      const index = data.findIndex(\n        (innerItem) => innerItem.time === item.starts_at\n      );\n      const newItem = timers[index];\n      const newData = [...timers];\n      newData.splice(index, 1, { ...newItem, isDone: e.completed });\n      console.log({ newData });\n      setTimeout(() => {\n        setTimers(newData);\n      }, 0);\n    }\n  };\n\n  return (\n    <div className={styles.container}>\n      <h2>Updates</h2>\n      <div className={styles.quizesListContainer}>\n        <div className={styles.quizes}>\n          {/* <h3>Documents</h3> */}\n          <ul className={styles.quizesList}>\n            {data.map((item, i) => {\n              const mDate = new Date(item.starts_at);\n              return (\n                <li\n                  key={item.starts_at.toString() + i.toString()}\n                  className={styles.quiz}\n                >\n                  <div className={styles.details}>\n                    <div>\n                      <h4>{`${\n                        moment(mDate)\n                          .utcOffset(\"+05:30\")\n                          .toString()\n                          .split(\" GMT+0530\")[0]\n                      }`}</h4>\n                      {mDate.getDate() - new Date().getDate() <= 1 && (\n                        <p>\n                          Starts in{\" \"}\n                          <span>\n                            <Countdown\n                              date={mDate}\n                              daysInHours\n                              renderer={renderer}\n                              onComplete={(e) => handleCompleteTimer(e, item)}\n                            />\n                          </span>\n                        </p>\n                      )}\n                    </div>\n                    <div>\n                      <Button\n                        disabled={!timers[i]?.isDone}\n                        className={classNames(\n                          styles.joinNowBtn,\n                          !timers[i]?.isDone ? styles.disabled : \"\"\n                        )}\n                      >\n                        Join\n                      </Button>\n                    </div>\n                  </div>\n                </li>\n              );\n            })}\n          </ul>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Updates;\n","export default __webpack_public_path__ + \"static/media/3a.f4ca26b3.webp\";","export default __webpack_public_path__ + \"static/media/3b.a3d3cba7.webp\";","export default __webpack_public_path__ + \"static/media/3c.b97bb260.webp\";","export default __webpack_public_path__ + \"static/media/3d.9169e453.webp\";","import React, { useState, useEffect, useRef, useLayoutEffect } from \"react\";\nimport styles from \"./CourseVideo.module.css\";\nimport classNames from \"classnames\";\nimport { useParams, withRouter } from \"react-router-dom\";\nimport clsx from \"clsx\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\nimport penIcon from \"../../public/CoursePlayIcons/edit-3.svg\";\nimport videoIcon from \"../../public/CoursePlayIcons/video.svg\";\nimport listIcon from \"../../public/CoursePlayIcons/list.svg\";\n\nimport penIconWhite from \"../../public/CoursePlayIcons/edit-3-white.svg\";\nimport videoIconWhite from \"../../public/CoursePlayIcons/video-white.svg\";\nimport listIconWhite from \"../../public/CoursePlayIcons/list-white.svg\";\n\nimport coinsIcon from \"../../public/CoursePlayIcons/money.svg\";\nimport lockedIcon from \"../../public/CoursePlayIcons/unlock-alt-solid.svg\";\n\nimport catIcon from \"../../public/CoursePlayIcons/cat.svg\";\n\nimport pauseIcon from \"../../public/CoursePlayIcons/Pause.svg\";\nimport playIcon from \"../../public/CoursePlayIcons/play.svg\";\nimport bulbIcon from \"../../public/CoursePlayIcons/lightbulb.svg\";\nimport checkIcon from \"../../public/CoursePlayIcons/check-circle.svg\";\nimport CloudDownloadIcon from \"@material-ui/icons/CloudDownload\";\n\nimport Lottie from \"react-lottie\";\nimport playingAnimation from \"../../public/animation/playing-animation.json\";\n\nimport Vimeo from \"@u-wave/react-vimeo\";\nimport Discussions from \"./Discussions/Discussions\";\nimport Exercises from \"./Exercises/Exercises\";\nimport Updates from \"./Updates/Updates\";\nimport optionImage1 from \"../../public/images/3a.webp\";\nimport optionImage2 from \"../../public/images/3b.webp\";\nimport optionImage3 from \"../../public/images/3c.webp\";\nimport optionImage4 from \"../../public/images/3d.webp\";\n\nimport CustomLoader from \"../Loader\";\nimport CountUp from \"react-countup\";\n\nconst VideoSection = ({\n  currentVideo,\n  open,\n  onClickContent,\n  introduction,\n  nextContent,\n  contentDone,\n  progress,\n  courseDataId,\n  module,\n  handleClickSection,\n  handleQuizSelection,\n}) => {\n  const defaultOptions = {\n    loop: true,\n    autoplay: true,\n    animationData: playingAnimation,\n    rendererSettings: {\n      preserveAspectRatio: \"xMidYMid slice\",\n    },\n  };\n\n  const [requested, setRequested] = useState(false);\n  const [done, setDone] = useState(false);\n\n  const success = () => {\n    setDone(true);\n  };\n\n  const failed = () => {\n    setDone(false);\n    setRequested(false);\n  };\n\n  const handleProgress = (videoProgress) => {\n    if (\n      videoProgress.percent > 0.89 &&\n      !requested &&\n      !done &&\n      !(progress[module] ? progress[module][currentVideo.slug] : false)\n    ) {\n      contentDone(courseDataId, module, currentVideo.slug, success, failed);\n      setRequested(true);\n    }\n  };\n\n  return (\n    <section style={{ width: \"100%\" }} className={styles.videoSection}>\n      <div className={styles.videoTitle}>\n        <h2>{currentVideo.title}</h2>\n      </div>\n      <div\n        style={{ background: open ? \"white\" : \"black\" }}\n        className={styles.videoContainer}\n      >\n        <Vimeo\n          // video={\n          //   currentVideo.content_info.source ||\n          //   \"https://player.vimeo.com/video/501387150\"\n          // }\n          video={\n            currentVideo.content_info?.source ||\n            \"https://player.vimeo.com/video/501387150\"\n          }\n          autoplay\n          // height={open ? 500 : 600}\n          height=\"100%\"\n          muted={false}\n          controls={true}\n          onEnd={() => nextContent(currentVideo.slug)}\n          onProgress={handleProgress} //Created a separate function, check above -> handleProgress\n          onLoaded={() => {\n            setRequested(false);\n            setDone(false);\n          }}\n        />\n      </div>\n      <div\n        style={{ maxWidth: open ? \"100%\" : \"80%\", margin: \"0 auto\" }}\n        className={styles.videoList}\n      >\n        {introduction.map((item, i) => {\n          return (\n            <div\n              onClick={\n                item.content_type === \"v\"\n                  ? () => onClickContent(item.slug)\n                  : item.content_type === \"q\"\n                  ? () => handleQuizSelection(\"q\", item.slug)\n                  : () => handleQuizSelection(\"a\", item.slug)\n              }\n              key={item.title + i}\n              className={styles.listItemVideo}\n            >\n              <div className={styles.videoAction}>\n                <img\n                  src={\n                    item.content_type === \"v\"\n                      ? item === currentVideo\n                        ? pauseIcon\n                        : playIcon\n                      : bulbIcon\n                  }\n                  alt=\"video-action\"\n                />\n              </div>\n              <div\n                onClick={() => onClickContent(item.slug)}\n                className={styles.videoDetail}\n              >\n                <h4>{item.title}</h4>\n                <div className={styles.flexRow}>\n                  {item === currentVideo ? (\n                    <div className={styles.playingAnimation}>\n                      <Lottie\n                        options={defaultOptions}\n                        height={40}\n                        width={40}\n                        isStopped={false}\n                        isPaused={false}\n                      />\n                    </div>\n                  ) : progress[module] && progress[module][item.slug] ? (\n                    <img src={checkIcon} alt=\"complete-robofreaks\" />\n                  ) : (\n                    \"\"\n                  )}\n                  <IconButton\n                    onClick={(e) => {\n                      e.stopPropagation();\n                    }}\n                    className={styles.downloadBtn}\n                  >\n                    <CloudDownloadIcon />\n                  </IconButton>\n                </div>\n              </div>\n            </div>\n          );\n        })}\n      </div>\n    </section>\n  );\n};\n\nconst CourseModules = ({\n  modules,\n  currentModule,\n  robocoins,\n  onClickModule,\n}) => {\n  return (\n    <div className={styles.modulesContainer}>\n      {modules.map((item, i) => {\n        let active = item.slug === currentModule;\n        let locked = item.metadata.robocoins_to_unlock > robocoins;\n        return (\n          <div\n            key={item.title + \"module\" + i}\n            className={classNames(\n              styles.moduleCard,\n              active ? styles.activeCard : \"\",\n              locked ? styles.showLocked : \"\"\n            )}\n            onClick={() =>\n              !active && !locked ? onClickModule(item.slug) : null\n            }\n          >\n            <div className={styles.moduleIcon}>\n              <img\n                // src={item.icon}\n                src={catIcon}\n                alt=\"module-icon\"\n              />\n            </div>\n            <div className={styles.content}>\n              <div className={styles.details}>\n                <h4>{item.title}</h4>\n                <p>{item.description}</p>\n                <div className={styles.items}>\n                  <div className={styles.mediaItem}>\n                    <img\n                      src={active ? penIconWhite : penIcon}\n                      alt=\"course-items\"\n                    />\n                    <span>{item.metadata.num_of_assignments}</span>\n                  </div>\n                  <div className={styles.mediaItem}>\n                    <img\n                      src={active ? videoIconWhite : videoIcon}\n                      alt=\"course-items\"\n                    />\n                    <span>{item.metadata.num_of_videos}</span>\n                  </div>\n                  <div className={styles.mediaItem}>\n                    <img\n                      src={active ? listIconWhite : listIcon}\n                      alt=\"course-items\"\n                    />\n                    <span>{item.metadata.num_of_quizzes}</span>\n                  </div>\n                </div>\n              </div>\n            </div>\n            {locked\n              ? null\n              : item.metadata.robocoins_to_unlock !== 0 && (\n                  <div className={styles.coins}>\n                    <p>{item.metadata.robocoins_to_unlock}</p>\n                    <img src={coinsIcon} alt=\"icons\" />\n                  </div>\n                )}\n            {locked && (\n              <>\n                <div className={styles.locked}>\n                  <img src={lockedIcon} alt=\"icons\" />\n                </div>\n                <div className={styles.moduleLocked}>\n                  <div className={styles.lockedHeading}>\n                    <h5>This module is locked</h5>\n                    <img src={lockedIcon} alt=\"locked-module\" />\n                  </div>\n                  <div className={styles.coinsNeeded}>\n                    <h3>\n                      You need {item.metadata.robocoins_to_unlock} Robocoins{\" \"}\n                      <span>\n                        <img src={coinsIcon} alt=\"coins\" />\n                      </span>{\" \"}\n                      to unlock this course\n                    </h3>\n                  </div>\n                </div>\n              </>\n            )}\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nconst CourseVideo = ({\n  history,\n  courseData,\n  robocoins,\n  progress,\n  moduleData,\n  contentDone,\n  courseDataId,\n  createThread,\n  followUp,\n  moduleLoading,\n  fetchSlots,\n  slots,\n  profile,\n  submitQuiz,\n}) => {\n  const [sections, setSections] = useState([\n    {\n      name: \"Tutorials\",\n      active: true,\n    },\n    {\n      name: \"Discussions\",\n      active: false,\n    },\n    {\n      name: \"Exercises\",\n      active: false,\n    },\n    {\n      name: \"Updates\",\n      active: false,\n    },\n  ]);\n\n  const [drawerWidth, setDrawerWidth] = useState(550);\n  const [borderRadius, setBorderRadius] = useState(\"0 20px 20px 0\");\n\n  const useStyles = makeStyles((theme) => ({\n    root: {\n      display: \"flex\",\n    },\n    appBar: {\n      transition: theme.transitions.create([\"margin\", \"width\"], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n    },\n    appBarShift: {\n      width: `calc(100% - ${drawerWidth}px)`,\n      marginLeft: drawerWidth,\n      transition: theme.transitions.create([\"margin\", \"width\"], {\n        easing: theme.transitions.easing.easeOut,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n    },\n    menuButton: {\n      marginRight: theme.spacing(2),\n    },\n    hide: {\n      display: \"none\",\n    },\n    drawer: {\n      width: drawerWidth,\n      flexShrink: 0,\n    },\n    drawerPaper: {\n      width: drawerWidth,\n      border: \"none\",\n      borderRadius: borderRadius,\n      boxShadow: \"2px 2px 40px rgba(0,0,0,0.08)\",\n      overflow: \"hidden\",\n    },\n    drawerHeader: {\n      display: \"flex\",\n      alignItems: \"center\",\n      padding: theme.spacing(2, 0),\n      width: \"90%\",\n      margin: \"0 auto\",\n      // necessary for content to be below app bar\n      ...theme.mixins.toolbar,\n      justifyContent: \"space-between\",\n    },\n    content: {\n      flexGrow: 1,\n      padding: theme.spacing(3),\n      transition: theme.transitions.create(\"margin\", {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n      marginLeft: 0,\n      height: \"100vh\",\n      overflow: \"hidden\",\n    },\n    contentShift: {\n      transition: theme.transitions.create(\"margin\", {\n        easing: theme.transitions.easing.easeOut,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n      marginLeft: drawerWidth,\n    },\n  }));\n\n  useEffect(() => {\n    const innerWidth = window.innerWidth;\n    if (innerWidth <= 800) {\n      setDrawerWidth(\"100%\");\n      setBorderRadius(\"0\");\n      console.log(\"Yes\");\n    } else {\n      setDrawerWidth(550);\n      setBorderRadius(\"0 20px 20px 0\");\n    }\n    if (innerWidth <= 1200) {\n      setOpen(false);\n    }\n    // window.addEventListener(\"resize\", handleDrawerWidth);\n    // return () => window.removeEventListener(\"resize\", handleDrawerWidth);\n  }, []);\n\n  useLayoutEffect(() => {\n    const handleDrawerWidth = () => {\n      const innerWidth = window.innerWidth;\n      if (innerWidth <= 800) {\n        setDrawerWidth(\"100%\");\n        setBorderRadius(\"0\");\n        console.log(\"Yes\");\n      } else {\n        setDrawerWidth(550);\n        setBorderRadius(\"0 20px 20px 0\");\n      }\n      if (innerWidth <= 1200) {\n        setOpen(false);\n      }\n    };\n    window.addEventListener(\"resize\", handleDrawerWidth);\n    return () => window.removeEventListener(\"resize\", handleDrawerWidth);\n  }, []);\n\n  const [open, setOpen] = useState(true);\n  const [currentVideo, setCurrentVideo] = useState({});\n  const [courseName, setCourseName] = useState(courseData.title);\n\n  const { course, module, title, quiz, tabOpen, type } = useParams();\n\n  // const [loading, setLoading] = useState(false);\n  // const [currentTime, setCurrentTime] = useState(0);\n  // const [duration, setDuration] = useState(0);\n\n  // const [tabOpen, setTabOpen] = useState(\"tutorials\");\n\n  useEffect(() => {\n    // setLoading(true);\n    if (title) {\n      if (currentVideo.title !== title || !currentVideo.title) {\n        if (moduleData.contents) {\n          const index = moduleData.contents.findIndex(\n            (item) => item.slug === title\n          );\n          if (index !== -1) setCurrentVideo(moduleData.contents[index]);\n        }\n      }\n    } else setCurrentVideo(moduleData.contents[0]);\n    if (course && typeof course === \"string\") {\n      setCourseName(course.toLowerCase().split(\"-\").join(\" \"));\n    }\n    // setLoading(false);\n  }, [course, title, currentVideo.title, moduleData]);\n\n  // useEffect(() => {\n  //   if (quiz || title === \"quizes\") {\n  //     setTabOpen(\"exercises\");\n  //   }\n  // }, [quiz, title]);\n\n  const vPlayer = useRef();\n  // const [player, setPlayer] = useState();\n  // useEffect(() => {\n  //   const player = new Vimeo(vPlayer.current);\n  //   player.on(\"finish\", () => {\n  //     console.log(\"Ended\");\n  //     history.push(\n  //       `/course/${course}/${currentVideo.module\n  //         .toLowerCase()\n  //         .split(\" \")\n  //         .join(\"-\")}/${introduction[1].videos[1].title\n  //         .toLowerCase()\n  //         .split(\" \")\n  //         .join(\"-\")}`\n  //     );\n  //     console.log({ history });\n  //   });\n  //   console.log({ player });\n  // }, [vPlayer, currentVideo, course, history, introduction]);\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n  const onClickContent = (content_slug) => {\n    history.push(`/course/${course}/${module}/tutorials/${content_slug}`);\n  };\n\n  const nextContent = (content_slug) => {\n    const index = moduleData.contents.findIndex(\n      (item) => item.slug === content_slug\n    );\n    let nextIndex = index + 1;\n    if (index !== -1) {\n      if (nextIndex <= moduleData.contents.length - 1) {\n        if (moduleData.contents[nextIndex].content_type === \"q\") {\n          history.push(\n            `/course/${course}/${module}/exercises/q/${moduleData.contents[nextIndex].slug}`\n          );\n        } else {\n          history.push(\n            `/course/${course}/${module}/tutorials/${moduleData.contents[nextIndex].slug}`\n          );\n        }\n      } else {\n        nextModule();\n      }\n    }\n  };\n\n  const onClickModule = (moduleSlug) => {\n    history.push(`/course/${course}/${moduleSlug}/${tabOpen}`);\n  };\n\n  const nextModule = () => {\n    const index = courseData.modules.findIndex((item) => item.slug === module);\n    let nextIndex = index + 1;\n    if (index !== -1 && index < courseData.modules.length) {\n      if (\n        robocoins >= courseData.modules[nextIndex].metadata.robocoins_to_unlock\n      ) {\n        history.push(\n          `/course/${course}/${courseData.modules[nextIndex].slug}/tutorials`\n        );\n      }\n    }\n  };\n\n  const classes = useStyles();\n  const theme = useTheme();\n\n  const handleClickSection = (item) => {\n    // setTabOpen(item.name.toLowerCase());\n    if (window.innerWidth <= 800) {\n      setOpen(false);\n    }\n    history.push(`/course/${course}/${module}/${item.toLowerCase()}`);\n  };\n\n  const handleQuizSelection = (type, slug) => {\n    history.push(`/course/${course}/${module}/exercises/${type}/${slug}`);\n  };\n\n  const quizData = [\n    {\n      title: \"Quiz 1\",\n      questions: [\n        {\n          question: \"Which planet is this ?\",\n          options: [\"Mars\", \"Jupiter\", \"Earth\", \"Sun\"],\n          answer: \"Earth\",\n        },\n        {\n          question: \"How much is (1 + 2)\",\n          options: [optionImage1, optionImage2, optionImage3, optionImage4],\n          answer: optionImage2,\n          answerType: \"image\",\n        },\n        {\n          question: \"Which one is correct team name in NBA?\",\n          options: [\n            \"New York Bulls\",\n            \"Los Angeles Kings\",\n            \"Golden State Warriros\",\n            \"Huston Rocket\",\n          ],\n          isMultiple: true,\n          answer: \"Huston Rocket\",\n        },\n      ],\n    },\n  ];\n\n  return (\n    <div className={styles.container}>\n      <Drawer\n        className={classes.drawer}\n        variant=\"persistent\"\n        anchor=\"left\"\n        open={open}\n        classes={{\n          paper: classes.drawerPaper,\n        }}\n      >\n        <div className={classes.drawerHeader}>\n          <div className={styles.courseName}>\n            <h4>{courseName}</h4>\n          </div>\n          <IconButton\n            onClick={handleDrawerClose}\n            style={{ border: \"none\", outline: \"none\" }}\n          >\n            {theme.direction === \"ltr\" ? (\n              <ChevronLeftIcon />\n            ) : (\n              <ChevronRightIcon />\n            )}\n          </IconButton>\n        </div>\n        <div className={styles.sectionsHeader}>\n          {sections.map((item) => {\n            return (\n              <div\n                onClick={() => handleClickSection(item.name)}\n                key={item.name}\n                className={styles.sectionItem}\n              >\n                <h5\n                  className={\n                    tabOpen === item.name.toLowerCase() ? styles.activeItem : \"\"\n                  }\n                >\n                  {item.name}\n                </h5>\n                <div\n                  style={{\n                    opacity: tabOpen === item.name.toLowerCase() ? 1 : 0,\n                  }}\n                  className={styles.underline}\n                ></div>\n              </div>\n            );\n          })}\n        </div>\n        {/* modules */}\n        <div className={styles.courseModules}>\n          <p className={styles.moduleHeader}>INTRODUCTION</p>\n          <CourseModules\n            modules={[courseData.modules[0]]}\n            currentModule={module}\n            robocoins={robocoins}\n            onClickModule={onClickModule}\n          />\n          <p className={styles.moduleHeader}>CORE CONCEPTS</p>\n          <CourseModules\n            modules={courseData.modules.slice(1)}\n            currentModule={module}\n            robocoins={robocoins}\n            onClickModule={onClickModule}\n          />\n        </div>\n      </Drawer>\n      <main\n        className={clsx(classes.content, {\n          [classes.contentShift]: open,\n        })}\n      >\n        <div\n          className={classNames(\n            classes.drawerHeader,\n            styles.roboCoinsContainer\n          )}\n        >\n          <div className={styles.menuBurger} onClick={handleDrawerOpen}>\n            <div className={styles.burger}></div>\n            <div className={styles.burger}></div>\n            <div className={styles.burger}></div>\n          </div>\n          <div className={styles.roboCoins}>\n            <p>\n              <CountUp start={0} end={robocoins} />\n            </p>\n            <img src={coinsIcon} alt=\"robo-coins\" />\n          </div>\n        </div>\n        {moduleLoading ? (\n          <CustomLoader />\n        ) : (\n          <>\n            {tabOpen === \"tutorials\" ? (\n              <VideoSection\n                currentVideo={currentVideo}\n                open={open}\n                onClickContent={onClickContent}\n                nextContent={nextContent}\n                introduction={moduleData.contents}\n                contentDone={contentDone}\n                progress={progress}\n                courseDataId={courseDataId}\n                module={module}\n                handleClickSection={handleClickSection}\n                handleQuizSelection={handleQuizSelection}\n              />\n            ) : tabOpen === \"discussions\" ? (\n              <Discussions\n                threads={moduleData.threads}\n                createThread={createThread}\n                module_id={moduleData.id}\n                followUp={followUp}\n                fetchSlots={fetchSlots}\n                slots={slots}\n                course_slug={course}\n                profile={profile}\n              />\n            ) : tabOpen === \"exercises\" ? (\n              <Exercises\n                exercises={quizData}\n                currentExercise={quizData.quiz}\n                type={\n                  type === \"q\" ? \"quiz\" : type === \"a\" ? \"assignment\" : \"list\"\n                }\n                history={history}\n                quizes={moduleData.contents.filter(\n                  (content) => content.content_type === \"q\"\n                )}\n                assignments={moduleData.contents.filter(\n                  (content) => content.content_type === \"a\"\n                )}\n                quiz={quiz}\n                nextContent={nextContent}\n                submitQuiz={submitQuiz}\n              />\n            ) : (\n              <Updates />\n            )}\n          </>\n        )}\n      </main>\n    </div>\n  );\n};\n\nfunction Course(props) {\n  let { course, module } = useParams();\n  const [moduleLoading, setModuleLoading] = useState(false);\n\n  const success = () => {\n    setModuleLoading(false);\n  };\n\n  const failed = () => {\n    props.history.push(\"/home\");\n    setModuleLoading(false);\n  };\n\n  useEffect(() => {\n    props.fetchCourseData(course, success, failed);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    props.fetchModuleData(course, module, success, failed);\n    setModuleLoading(true);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [module]);\n\n  if (\n    Object.keys(props.courses.courseData).length > 0 &&\n    props.courses.courseData.constructor === Object &&\n    Object.keys(props.courses.moduleData).length > 0 &&\n    props.courses.moduleData.constructor === Object\n  ) {\n    return (\n      <CourseVideo\n        courseData={props.courses.courseData.course}\n        courseDataId={props.courses.courseData.id}\n        moduleData={props.courses.moduleData}\n        robocoins={props.courses.courseData.additional_info.robocoins}\n        progress={props.courses.courseData.additional_info.progress}\n        history={props.history}\n        contentDone={props.contentDone}\n        createThread={props.createThread}\n        followUp={props.followUp}\n        moduleLoading={moduleLoading}\n        fetchSlots={props.fetchSlots}\n        slots={props.courses.slots}\n        profile={props.profile.profile}\n        submitQuiz={props.submitQuiz}\n      />\n    );\n  } else {\n    return (\n      <div className=\"loader\">\n        <CustomLoader />\n      </div>\n    );\n  }\n}\n\nexport default withRouter(Course);\n"],"sourceRoot":""}