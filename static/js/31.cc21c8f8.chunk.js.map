{"version":3,"sources":["components/ResetPass/ResetPassword.js"],"names":["pass1","required","val","length","validPass","test","matched","store","ResetPassComponent","props","state","hidden1","hidden2","resetSubmitted","toggleShow1","bind","toggleShow2","handleSubmit","onSuccessReset","onFailedReset","this","setState","values","arr","user","key","split","uid","token","console","log","password1","resetPass","history","push","className","onSubmit","htmlFor","model","id","name","placeholder","md","style","border","height","type","validators","role","tabIndex","onClick","onKeyDown","outline","fontSize","show","messages","variant","fullWidth","backgroundColor","color","Component","withRouter","useParams"],"mappings":"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","file":"static/js/31.cc21c8f8.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { withRouter, useParams } from \"react-router-dom\";\nimport { Control, Errors, LocalForm } from \"react-redux-form\";\nimport Button from \"@material-ui/core/Button\";\nimport \"./ResetPass.css\";\nimport { CircularProgress } from \"@material-ui/core\";\n\nvar pass1 = \"\";\nconst required = (val) => val && val.length;\nconst validPass = (val) =>\n  /^(?=.*[a-z])(?=.*\\d)(?=.*[$@$!%*#?&<>^()])[a-z\\d$@$!%*#?&<>^()]{8,}$/i.test(\n    val\n  );\nconst matched = (val) => val === pass1;\nconst store = (val) => {\n  pass1 = val;\n  return true;\n};\n\nclass ResetPassComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      hidden1: true,\n      hidden2: true,\n      resetSubmitted: false,\n    };\n    this.toggleShow1 = this.toggleShow1.bind(this);\n    this.toggleShow2 = this.toggleShow2.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.onSuccessReset = this.onSuccessReset.bind(this);\n    this.onFailedReset = this.onFailedReset.bind(this);\n  }\n\n  toggleShow1() {\n    this.setState({ hidden1: !this.state.hidden1 });\n  }\n\n  toggleShow2() {\n    this.setState({ hidden2: !this.state.hidden2 });\n  }\n\n  componentDidMount() {\n    // this.props.verifyEmail(user_id, timestamp, signature, this.props.history);\n  }\n\n  handleSubmit(values) {\n    this.setState({ resetSubmitted: true });\n    // const search = this.props.location.search;\n    // const params = new URLSearchParams(search);\n    // const user_id = Number(params.get(\"user_id\"));\n    // const timestamp = Number(params.get(\"timestamp\"));\n    // const signature = params.get(\"signature\");\n    let arr = this.props.user.key.split(\"-\");\n    let uid = arr[0];\n    let token = arr[1] + \"-\" + arr[2];\n    console.log(values.password1, uid, token);\n    console.log(this.props.resetPass);\n    this.props.resetPass(values.password1, uid, token, this.onSuccessReset);\n  }\n\n  onSuccessReset() {\n    this.setState({ resetSubmitted: false });\n    this.props.history.push(\"/\");\n  }\n\n  render() {\n    console.log(\"reset password compoenent\", this.props);\n    return (\n      <div className=\"container resetpass\">\n        <div className=\"reset-block\">\n          <h4>Reset Your password</h4>\n          <hr />\n          <div>\n            <LocalForm onSubmit={(values) => this.handleSubmit(values)}>\n              <div className=\"row form-group\">\n                <div className=\"col col-12\">\n                  <label htmlFor=\"password1\">New Password</label>\n                </div>\n                <div className=\"col col-12\">\n                  <div className=\"border password d-flex\">\n                    <Control\n                      model=\".password1\"\n                      id=\"password1\"\n                      name=\"password1\"\n                      placeholder=\"password\"\n                      md={10}\n                      className=\"form-control\"\n                      style={{ border: \"none\", height: 50 }}\n                      type={this.state.hidden1 ? \"password\" : \"text\"}\n                      validators={{\n                        required,\n                        validPass,\n                        store,\n                      }}\n                    />\n                    <span\n                      role=\"button\"\n                      tabIndex={0}\n                      onClick={this.toggleShow1}\n                      onKeyDown={this.toggleShow1}\n                      style={{ outline: \"none\", fontSize: 20 }}\n                      md={2}\n                      className={\n                        this.state.hidden1\n                          ? \"fa fa-eye pt-3 pr-2\"\n                          : \"fa fa-eye-slash pt-3 pr-2\"\n                      }\n                      id=\"togglePassword1\"\n                    ></span>\n                  </div>\n                  <Errors\n                    className=\"text-danger error\"\n                    model=\".password1\"\n                    show=\"touched\"\n                    messages={{\n                      required: \"Required \",\n                      validPass:\n                        \"Must contain at least one numeric and special character\",\n                    }}\n                  />\n                </div>\n              </div>\n              <div className=\"row form-group\">\n                <div className=\"col col-12\">\n                  <label htmlFor=\"password2\">Confirm Password</label>\n                </div>\n                <div className=\"col col-12\">\n                  <div className=\"border password d-flex\">\n                    <Control\n                      model=\".password2\"\n                      id=\"password2\"\n                      name=\"password2\"\n                      placeholder=\"Confirm Password\"\n                      md={10}\n                      className=\"form-control\"\n                      style={{ border: \"none\", height: 50 }}\n                      type={this.state.hidden2 ? \"password\" : \"text\"}\n                      validators={{\n                        required,\n                        matched,\n                      }}\n                    />\n                    <span\n                      role=\"button\"\n                      tabIndex={0}\n                      onClick={this.toggleShow2}\n                      onKeyDown={this.toggleShow2}\n                      style={{ outline: \"none\", fontSize: 20 }}\n                      md={2}\n                      className={\n                        this.state.hidden2\n                          ? \"fa fa-eye pt-3 pr-2\"\n                          : \"fa fa-eye-slash pt-3 pr-2\"\n                      }\n                      id=\"togglePassword\"\n                    ></span>\n                  </div>\n                  <Errors\n                    className=\"text-danger error\"\n                    model=\".password2\"\n                    show=\"touched\"\n                    messages={{\n                      required: \"Required\",\n                      matched: \"password does not match\",\n                    }}\n                  />\n                </div>\n              </div>\n              <div className=\"row form-group\">\n                <div className=\"col col-12\">\n                  <Button\n                    variant=\"contained\"\n                    type=\"submit\"\n                    fullWidth={true}\n                    style={{\n                      backgroundColor: \"#09bfad\",\n                      color: \"white\",\n                      outline: \"none\",\n                      height: 50,\n                    }}\n                  >\n                    {this.state.resetSubmitted ? (\n                      <CircularProgress style={{ color: \"white\" }} />\n                    ) : (\n                      \"Submit\"\n                    )}\n                  </Button>\n                </div>\n              </div>\n            </LocalForm>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction ResetPass(props) {\n  const key = useParams();\n  console.log(key);\n\n  return (\n    <div>\n      {console.log(key)}\n      <ResetPassComponent\n        user={key}\n        history={props.history}\n        resetPass={props.resetPass}\n      />\n    </div>\n  );\n}\n\nexport default withRouter(ResetPass);\n"],"sourceRoot":""}