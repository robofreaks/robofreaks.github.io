{"version":3,"sources":["components/ThreadList.js"],"names":["useStyles","makeStyles","theme","root","width","backgroundColor","palette","background","paper","hover","input","marginLeft","spacing","flex","iconButton","padding","cardroot","maxWidth","overlay","position","top","left","opacity","color","height","n_overlay","display","content","overflowX","Problems","course","module","threads","classes","thrds","length","map","thread","i","to","id","style","textDecoration","className","primary","title","secondary","author","StartThread","open","handleClose","postQuestion","slots","files","setFiles","useState","live","setLive","selected","setSlot","Close","fullWidth","onClose","scroll","aria-labelledby","aria-describedby","outline","onClick","margin","dividers","onSubmit","values","file","console","log","handleSubmit","row","marginBottom","htmlFor","type","model","name","placeholder","component","control","onChange","event","target","checked","label","slot","is_available","align","Date","starts_at","toDateString","toTimeString","variant","multiple","e","accept","Object","Threads","props","state","search","toggleModal","bind","successCreate","this","setState","createThread","forum_id","module_id","question","description","history","push","close","prevFiles","arr","arr1","arr2","j","splice","filter","a","pop","concat","finalObj","keys","marginRight","val","value","inputProps","aria-label","fetchSlots","toLowerCase","includes","Component","withRouter","useParams","success","failed","useEffect","fetchThreads","forum"],"mappings":"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","file":"static/js/30.bb448b8b.chunk.js","sourcesContent":["import React, { Component, useState, useEffect } from \"react\";\nimport { useParams, withRouter } from \"react-router-dom\";\nimport { Container } from \"@material-ui/core\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Link } from \"react-router-dom\";\nimport Footer from \"./Footer/Footer\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport { Grid } from \"@material-ui/core\";\nimport { Control, LocalForm } from \"react-redux-form\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport Paper from \"@material-ui/core/Paper\";\nimport InputBase from \"@material-ui/core/InputBase\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport \"./Forum/Forum.css\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\nimport EventIcon from \"@material-ui/icons/Event\";\n// import classicEditor from \"@ckeditor/ckeditor5-build-classic\";\n// import { CKEditor } from \"@ckeditor/ckeditor5-react\";\nimport CustomLoader from \"./Loader\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n    backgroundColor: theme.palette.background.paper,\n  },\n  hover: {\n    \"&:hover\": {\n      backgroundColor: \"#f7f7f7\",\n    },\n  },\n  input: {\n    marginLeft: theme.spacing(1),\n    flex: 1,\n  },\n  iconButton: {\n    padding: 10,\n  },\n  cardroot: {\n    maxWidth: 50,\n  },\n  overlay: {\n    position: \"absolute\",\n    top: 0,\n    left: 0,\n    backgroundColor: \"white\",\n    opacity: 0.2,\n    color: \"black\",\n    height: \"100%\",\n    width: \"100%\",\n  },\n  n_overlay: {\n    display: \"none\",\n  },\n  content: {\n    overflowX: \"hidden\",\n  },\n}));\n\nfunction Problems({ course, module, threads }) {\n  const classes = useStyles();\n  let thrds = null;\n  if (threads.length > 0) {\n    thrds = threads.map((thread, i) => {\n      return (\n        <Link\n          to={`/forum/${course}/${module}/${thread.id}`}\n          style={{ textDecoration: \"none\", color: \"black\" }}\n        >\n          <ListItem className={classes.hover}>\n            <ListItemText\n              primary={thread.title}\n              secondary={`By ${thread.author}`}\n            />\n          </ListItem>\n        </Link>\n      );\n    });\n  } else {\n    return <div>No Match</div>;\n  }\n  return <List className={classes.root}>{thrds}</List>;\n}\n\nfunction StartThread({\n  open,\n  handleClose,\n  postQuestion,\n  slots,\n  files,\n  setFiles,\n}) {\n  const classes = useStyles();\n\n  const [live, setLive] = useState(false);\n  const [selected, setSlot] = useState(null);\n\n  const getFile = (e) => {\n    setFiles(e.target.files, false);\n  };\n\n  const handleSubmit = (values, file) => {\n    console.log(values, file);\n    setLive(false);\n    handleClose();\n    postQuestion(values, file, selected);\n  };\n\n  const Close = () => {\n    setFiles([], true);\n    setLive(false);\n    handleClose();\n  };\n\n  return (\n    <Dialog\n      className=\"editModal\"\n      fullWidth\n      open={open}\n      onClose={Close}\n      scroll=\"body\"\n      aria-labelledby=\"scroll-dialog-title\"\n      aria-describedby=\"scroll-dialog-description\"\n    >\n      <div className=\"d-flex flex-row\">\n        <DialogTitle id=\"scroll-dialog-title\">Ask Question</DialogTitle>\n        <div className=\"ml-auto\">\n          <DialogActions>\n            <Button style={{ backgroundColor: \"white\", outline: \"none\" }}>\n              <CloseIcon\n                onClick={Close}\n                style={{ backgroundColor: \"white\", margin: 10 }}\n              />\n            </Button>\n          </DialogActions>\n        </div>\n      </div>\n      <DialogContent dividers={true} className={classes.content}>\n        <LocalForm onSubmit={(values) => handleSubmit(values, files)}>\n          <Grid row style={{ marginBottom: 15 }}>\n            <label htmlFor=\"question\">Question</label>\n            <Control\n              type=\"text\"\n              model=\".question\"\n              id=\"question\"\n              name=\"question\"\n              placeholder=\"question\"\n              style={{ width: \"100%\" }}\n            />\n          </Grid>\n          <Grid row style={{ marginBottom: 15 }}>\n            <label htmlFor=\"description\">Description</label>\n            <Control\n              component=\"textarea\"\n              model=\".description\"\n              id=\"description\"\n              name=\"description\"\n              placeholder=\"description\"\n              style={{ width: \"100%\" }}\n            />\n          </Grid>\n          <Grid row>\n            <FormControlLabel\n              control={\n                <Checkbox\n                  onChange={(event) => {\n                    setLive(event.target.checked);\n                    console.log(event.target.checked);\n                  }}\n                  name=\"live\"\n                />\n              }\n              label=\"Discuss Live\"\n            />\n          </Grid>\n          {live ? (\n            <Grid row style={{ marginBottom: 15 }}>\n              <div>\n                {slots.length > 0 ? (\n                  <div className=\"row justify-content-center\">\n                    {slots.map((slot, i) => {\n                      if (slot.is_available) {\n                        return (\n                          <Card\n                            key={i}\n                            onClick={() => {\n                              setSlot(slot.id);\n                            }}\n                            style={{\n                              margin: 5,\n                              // border: \"10px #f50057\",\n                              width: 170,\n                              outline: \"none\",\n                              background: \"rgba(0, 0, 0, 0.54)\",\n                              color: \"white\",\n                            }}\n                          >\n                            <CardActionArea style={{ outline: \"none\" }}>\n                              <CardContent>\n                                <div className=\"row justify-content-center\">\n                                  <EventIcon />\n                                </div>\n                                <Typography align=\"center\">\n                                  {new Date(slot.starts_at).toDateString()},\n                                </Typography>\n                                <Typography align=\"center\">\n                                  {new Date(slot.starts_at).toTimeString()}\n                                </Typography>\n                              </CardContent>\n                              <div\n                                className={\n                                  selected === slot.id\n                                    ? classes.overlay\n                                    : classes.n_overlay\n                                }\n                              ></div>\n                            </CardActionArea>\n                          </Card>\n                        );\n                      } else {\n                        return null;\n                      }\n                    })}\n                  </div>\n                ) : null}\n              </div>\n            </Grid>\n          ) : null}\n          <Grid row style={{ marginBottom: 15 }}>\n            <Button\n              variant=\"contained\"\n              component=\"label\"\n              color=\"secondary\"\n              fullWidth\n            >\n              Attachments &nbsp;\n              <input\n                type=\"file\"\n                id=\"files\"\n                name=\"files\"\n                multiple\n                onChange={getFile}\n                accept=\"image/*\"\n                style={{ outline: \"none\", display: \"none\" }}\n              />\n            </Button>\n            {Object.values(files).map((file) => {\n              return <div>{file.name}</div>;\n            })}\n          </Grid>\n          <Grid row style={{ marginBottom: 15 }}>\n            <Button\n              variant=\"contained\"\n              type=\"submit\"\n              fullWidth={true}\n              style={{\n                backgroundColor: \"#09bfad\",\n                color: \"white\",\n                outline: \"none\",\n              }}\n            >\n              Post\n            </Button>\n          </Grid>\n        </LocalForm>\n      </DialogContent>\n    </Dialog>\n  );\n}\n\nclass Threads extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      open: false,\n      search: null,\n      files: [],\n    };\n    this.toggleModal = this.toggleModal.bind(this);\n    this.postQuestion = this.postQuestion.bind(this);\n    this.setFiles = this.setFiles.bind(this);\n    this.successCreate = this.successCreate.bind(this);\n  }\n\n  toggleModal() {\n    this.setState({\n      open: !this.state.open,\n    });\n  }\n\n  postQuestion(values, files, selected) {\n    console.log(values, this.props.module, this.props.course);\n    this.props.createThread(\n      this.props.forum_id,\n      this.props.module_id,\n      this.props.module,\n      values.question,\n      values.description,\n      files,\n      null,\n      selected,\n      this.successCreate\n    );\n  }\n\n  successCreate(id) {\n    console.log(this.props.course);\n    this.props.history.push(\n      `/forum/${this.props.course}/${this.props.module}/${id}`\n    );\n  }\n\n  setFiles(files, close) {\n    console.log(\"calllleeeeeeeeddddddddddd\");\n    if (close) {\n      this.setState({\n        files: [],\n      });\n    } else {\n      console.log(files);\n      let prevFiles = this.state.files;\n      let arr = [];\n      let arr1 = [];\n      let arr2 = [];\n      for (let i = 0; i < files.length; ++i) {\n        for (let j = 0; j < prevFiles.length; ++j) {\n          if (files[i].name === prevFiles[j].name) {\n            console.log(\"files[i].name\", files[i].name);\n            console.log(\"prevFiles[j].name\", prevFiles[j].name);\n            arr.push(i);\n          }\n        }\n      }\n      console.log(\"arr\", arr);\n      arr1 = Object.values(files);\n      console.log(\"arr1 before\", arr1);\n      for (let i = 0; i < arr.length; ++i) {\n        console.log(i);\n        arr1.splice(arr[i], 1, null);\n        console.log(arr1);\n      }\n      arr1 = arr1.filter((a) => a !== null);\n      console.log(\"arr1\", arr1);\n      arr2 = Object.values(prevFiles);\n      arr2.pop();\n      console.log(\"arr2\", arr2);\n      arr1 = arr2.concat(arr1);\n      let finalObj = { ...arr1 };\n      finalObj.length = Object.keys(finalObj).length;\n      console.log(\"final\", finalObj);\n      this.setState({\n        files: finalObj,\n      });\n      console.log(this.state.files);\n    }\n  }\n\n  render() {\n    return (\n      <>\n        {console.log(this.state.files)}\n        <Container className=\"forum\" maxWidth=\"lg\" style={{ marginBottom: 40 }}>\n          <div style={{ display: \"flex\", flex: \"row\" }}>\n            <div>\n              <h2>{this.props.module}</h2>\n            </div>\n            <div style={{ marginLeft: \"auto\", display: \"flex\", flex: \"row\" }}>\n              <Paper component=\"form\" style={{ marginRight: 5 }}>\n                <InputBase\n                  style={{ marginLeft: 10 }}\n                  placeholder=\"Search\"\n                  onChange={(val) => {\n                    console.log(val.target.value);\n                    this.setState({\n                      search: val.target.value,\n                    });\n                  }}\n                  inputProps={{ \"aria-label\": \"search google maps\" }}\n                />\n                <IconButton type=\"submit\" aria-label=\"search\">\n                  <SearchIcon />\n                </IconButton>\n              </Paper>\n              <Button\n                variant=\"contained\"\n                style={{\n                  backgroundColor: \"#09bfad\",\n                  color: \"white\",\n                  outline: \"none\",\n                }}\n                onClick={() => {\n                  this.props.fetchSlots(this.props.course);\n                  this.toggleModal();\n                }}\n              >\n                Ask Question\n              </Button>\n              <StartThread\n                slots={this.props.slots}\n                open={this.state.open}\n                handleClose={this.toggleModal}\n                postQuestion={this.postQuestion}\n                setFiles={this.setFiles}\n                files={this.state.files}\n              />\n            </div>\n          </div>\n          <hr />\n          {this.props.threads.length > 0 ? (\n            <Problems\n              threads={this.props.threads.filter((thread) => {\n                if (this.state.search === null) {\n                  return thread;\n                } else if (\n                  thread.title\n                    .toLowerCase()\n                    .includes(this.state.search.toLowerCase())\n                ) {\n                  return thread;\n                } else {\n                  return null;\n                }\n              })}\n              module={this.props.module}\n              course={this.props.course}\n            />\n          ) : (\n            <div>\n              No questions yet, click the above button to add your question\n            </div>\n          )}\n        </Container>\n        <Footer />\n      </>\n    );\n  }\n}\n\nfunction ThreadList(props) {\n  let { course, forum_id, module, module_id } = useParams();\n\n  const success = () => {\n    console.log(\"success\");\n  };\n\n  const failed = () => {\n    props.history.push(\"/home\");\n  };\n\n  useEffect(() => {\n    props.fetchThreads(module_id, success, failed);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  console.log(props.forum.threads.length === 0);\n\n  if (props.forum.threads.length >= 0) {\n    console.log(props.forum.threads);\n    return (\n      <Threads\n        course={course}\n        forum_id={forum_id}\n        module={module}\n        module_id={module_id}\n        slots={props.forum.slots}\n        threads={props.forum.threads}\n        createThread={props.createThread}\n        fetchSlots={props.fetchSlots}\n        history={props.history}\n      />\n    );\n  } else {\n    return (\n      <div className=\"loader\">\n        <CustomLoader />\n      </div>\n    );\n  }\n}\n\nexport default withRouter(ThreadList);\n"],"sourceRoot":""}