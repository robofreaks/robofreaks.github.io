{"version":3,"sources":["public/robofreaks-logo.webp","components/Header/Header.js"],"names":["Alert","props","elevation","variant","Header","toggleNav","bind","changenavbg","handleClose","handleOpen","handleCloseMenu","handleClick","handlePageMenuClick","burgerClicked","closeSidebar","onSuccessLogout","handleCloseAccountMenu","handleClickAccountMenu","handleNavClose","handleNavOpen","state","isNavOpen","ismyNavopen","open","anchorEl","mobileNav","sidebarOpen","pathname","history","location","anchorElAccount","navOpen","window","search","includes","navbar","document","getElementById","scrollY","classList","add","style","backgroundColor","boxShadow","remove","this","setState","event","currentTarget","console","log","clearMsg","toggle","addEventListener","pageURI","removeEventListener","push","querySelector","className","msg","error","anchorOrigin","vertical","horizontal","onClose","severity","id","to","src","logo","alt","href","auth","token","onClick","profile","first_name","keepMounted","Boolean","authLogout","modal","menuClicked","anchor","onOpen","last_name","email","component","aria-labelledby","button","disableGutters","primary","in","timeout","unmountOnExit","disablePadding","width","Component","withRouter"],"mappings":"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","file":"static/js/25.15bfae56.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/robofreaks-logo.0bb8a515.webp\";","import React, { Component } from \"react\";\nimport {\n  Button,\n  Menu,\n  MenuItem,\n  ListItem,\n  List,\n  Collapse,\n  ListItemText,\n  IconButton,\n  Avatar,\n  SwipeableDrawer,\n} from \"@material-ui/core\";\nimport ExpandLess from \"@material-ui/icons/ExpandLess\";\nimport ExpandMore from \"@material-ui/icons/ExpandMore\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport logo from \"../../public/robofreaks-logo.webp\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport \"./Header.css\";\nimport ArrowDropDownIcon from \"@material-ui/icons/ArrowDropDown\";\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\n// const NavItem = (props) => {\n//   const pageURI = window.location.pathname + window.location.search;\n//   const liClassName = props.path === pageURI ? \"nav-item active\" : \"nav-item\";\n//   // const aClassName = props.disabled ? \"nav-link disabled\" : \"nav-link\"\n//   if (pageURI === \"home\") {\n//     console.log(\"home\");\n//   }\n//   return (\n//     <li className={liClassName}>\n//       <Link className=\"nav-link\" to={props.path}>\n//         {props.name}\n//         {props.path === pageURI ? (\n//           <span className=\"sr-only\">(current)</span>\n//         ) : (\n//           \"\"\n//         )}\n//       </Link>\n//     </li>\n//   );\n// };\n\nclass Header extends Component {\n  constructor(props) {\n    super(props);\n    this.toggleNav = this.toggleNav.bind(this);\n    // this.reportWindowSize = this.reportWindowSize.bind(this);\n    this.changenavbg = this.changenavbg.bind(this);\n    this.handleClose = this.handleClose.bind(this);\n    this.handleOpen = this.handleOpen.bind(this);\n    this.handleCloseMenu = this.handleCloseMenu.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n    this.handlePageMenuClick = this.handlePageMenuClick.bind(this);\n    this.burgerClicked = this.burgerClicked.bind(this);\n    this.closeSidebar = this.closeSidebar.bind(this);\n    this.onSuccessLogout = this.onSuccessLogout.bind(this);\n\n    this.handleCloseAccountMenu = this.handleCloseAccountMenu.bind(this);\n    this.handleClickAccountMenu = this.handleClickAccountMenu.bind(this);\n    this.handleNavClose = this.handleNavClose.bind(this);\n    this.handleNavOpen = this.handleNavOpen.bind(this);\n\n    this.state = {\n      isNavOpen: false,\n      ismyNavopen: false,\n      open: true,\n      anchorEl: null,\n      mobileNav: false,\n      sidebarOpen: false,\n      pathname: props.history.location.pathname,\n      anchorElAccount: null,\n      navOpen: false,\n    };\n  }\n\n  changenavbg() {\n    const pageURI = window.location.pathname + window.location.search;\n    if (pageURI.includes(\"home\")) {\n      const navbar = document.getElementById(\"navbar\");\n      if (window.scrollY >= 35) {\n        navbar.classList.add(\"with-bg\");\n        navbar.style.backgroundColor = \"white\";\n        navbar.style.boxShadow = \"0 2px 10px rgba(0,0,0,0.2)\";\n      } else {\n        navbar.classList.remove(\"with-bg\");\n        navbar.style.backgroundColor = \"transparent\";\n        navbar.style.boxShadow = \"none\";\n      }\n    }\n  }\n\n  handleCloseMenu() {\n    this.setState({\n      anchorEl: null,\n    });\n  }\n  handleClick(event) {\n    this.setState({\n      anchorEl: event.currentTarget,\n    });\n  }\n  handleCloseAccountMenu() {\n    this.setState({\n      anchorElAccount: null,\n    });\n  }\n  handleClickAccountMenu(event) {\n    this.setState({\n      anchorElAccount: event.currentTarget,\n    });\n  }\n  Contact;\n  handlePageMenuClick() {\n    this.setState({\n      mobileNav: !this.state.mobileNav,\n    });\n  }\n  burgerClicked() {\n    // const sidebar = document.getElementById(\"sidebar-mobile\");\n    // sidebar.classList.toggle(\"sidebar-active\");\n    this.setState({\n      navOpen: true,\n    });\n  }\n  handleNavOpen() {\n    this.burgerClicked();\n  }\n  handleNavClose() {\n    this.setState({\n      navOpen: false,\n    });\n  }\n  toggleNav() {\n    this.setState({\n      isNavOpen: !this.state.isNavOpen,\n    });\n  }\n\n  handleOpen() {\n    this.setState({\n      open: true,\n    });\n  }\n\n  handleClose() {\n    console.log(\"closinggggggg\");\n    this.setState({\n      open: false,\n    });\n    this.props.clearMsg();\n  }\n\n  closeSidebar() {\n    const sidebar = document.getElementById(\"sidebar-mobile\");\n    sidebar.classList.toggle(\"sidebar-active\");\n    // {\n    //    {\n    //    sidebar.style.backgroundColor = \"transparent\";\n    // }\n    // }\n  }\n  componentDidMount() {\n    // {\n    //    window.addEventListener(\"resize\", this.reportWindowSize);\n    // }\n    // console.log(this.props.profile);\n    // if (\n    //   Object.keys(this.props.profile).length === 0 &&\n    //   this.props.profile.constructor === Object\n    // ) {\n    //   this.props.fetchProfile();\n    // }\n    window.addEventListener(\"scroll\", this.changenavbg);\n    const pageURI = window.location.pathname + window.location.search;\n\n    if (!pageURI.includes(\"home\")) {\n      const navbar = document.getElementById(\"navbar\");\n      navbar.classList.add(\"with-bg\");\n      navbar.style.backgroundColor = \"white\";\n      navbar.style.boxShadow = \"0 2px 10px rgba(0,0,0,0.2)\";\n    }\n    if (pageURI.includes(\"referral\")) {\n      const navbar = document.getElementById(\"navbar\");\n      navbar.classList.add(\"displaynone\");\n    }\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"scroll\", this.changenavbg);\n    // {\n    //   window.removeEventListener(\"resize\", this.reportWindowSize);\n    // }\n  }\n\n  // reportWindowSize() {\n  //   if (window.innerWidth < 1003) {\n  //     this.setState({\n  //       isNavOpen: false,\n  //     });\n  //   }\n  // }\n\n  onSuccessLogout() {\n    console.log(\"logging ouuuutttt\");\n    this.props.history.push(\"/\");\n  }\n\n  render() {\n    if (this.state.ismyNavopen) {\n      document.querySelector(\"body\").className = \"prevscol\";\n    } else {\n      document.querySelector(\"body\").className = \"\";\n    }\n    // const pageURI = window.location.pathname + window.location.search;\n    return (\n      <>\n        {\n          // console.log()\n          this.props.msg.msg || this.props.msg.error ? (\n            <Snackbar\n              open={this.state.open}\n              anchorOrigin={{\n                vertical: \"top\",\n                horizontal: \"center\",\n              }}\n              // onClose={() => {\n              //   this.handleClose();\n              // }}\n            >\n              <Alert\n                onClose={() => {\n                  this.handleClose();\n                }}\n                severity={this.props.msg.msg ? \"success\" : \"error\"}\n              >\n                {this.props.msg.msg}\n                {this.props.msg.error}\n              </Alert>\n            </Snackbar>\n          ) : null\n        }\n        <div id=\"navbar\" className=\"nav-container-outer\">\n          <Link className=\"no-decoration\" to=\"/home\">\n            <div className=\"logo\">\n              <img src={logo} alt=\"logo-robofreaks\" />\n              <h4>\n                Robo<span>Freaks</span>\n              </h4>\n            </div>\n          </Link>\n\n          <ul className=\"nav-links\">\n            <li\n              className={`nav-link ${\n                this.state.pathname.includes(\"home\") ? \"active-page\" : \"\"\n              }`}\n            >\n              <Link className=\"no-decoration color-white-80\" to=\"/home\">\n                Home\n              </Link>\n            </li>\n            <li\n              className={`nav-link ${\n                this.state.pathname.includes(\"competition\") ? \"active-page\" : \"\"\n              }`}\n            >\n              <Link className=\"no-decoration color-white-80\" to=\"/competition\">\n                CodeCarnival\n              </Link>\n            </li>\n            <li\n              className={`nav-link ${\n                this.state.pathname.includes(\"refer\") ? \"active-page\" : \"\"\n              }`}\n            >\n              <Link className=\"no-decoration color-white-80\" to=\"/refer\">\n                Refer\n              </Link>\n            </li>\n            <li className=\"nav-link pages-nav\">\n              Pages{\" \"}\n              <span>\n                <ArrowDropDownIcon />\n              </span>\n              <ul className=\"pages\">\n                <li className=\"page\">\n                  <Link className=\"no-decoration\" to=\"/about\">\n                    About Us\n                  </Link>\n                </li>\n                <li className=\"page\">\n                  <Link className=\"no-decoration\" to=\"/contact\">\n                    Contact\n                  </Link>\n                </li>\n                <li className=\"page\">\n                  <a href=\"/about#ourteam\" className=\"no-decoration\">\n                    Our Team\n                  </a>\n                </li>\n              </ul>\n            </li>\n            <li className=\"nav-link courses-btn-link\">\n              <Button className=\"courses-btn\">\n                <Link className=\"no-decoration color-white-80\" to=\"/courses/1\">\n                  Courses\n                </Link>\n              </Button>\n            </li>\n            <li className=\"nav-link login-btn-link\">\n              {this.props.auth.token !== null ? (\n                <>\n                  <IconButton onClick={this.handleClickAccountMenu}>\n                    <Avatar>\n                      {this.props.profile.first_name\n                        ? this.props.profile.first_name[0]\n                        : null}\n                    </Avatar>\n                  </IconButton>\n                  <Menu\n                    id=\"account-menu\"\n                    anchorEl={this.state.anchorElAccount}\n                    keepMounted\n                    open={Boolean(this.state.anchorElAccount)}\n                    onClose={this.handleCloseAccountMenu}\n                  >\n                    <MenuItem onClick={this.handleCloseAccountMenu}>\n                      <Link className=\"no-decoration\" to=\"/profile\">\n                        My Profile\n                      </Link>\n                    </MenuItem>\n                    <MenuItem\n                      onClick={() => {\n                        this.handleCloseAccountMenu();\n                        this.props.authLogout(this.onSuccessLogout);\n                      }}\n                    >\n                      Logout\n                    </MenuItem>\n                  </Menu>\n                </>\n              ) : (\n                <Button className=\"login-btn\">\n                  <Link\n                    to={{\n                      pathname: \"/login\",\n                      state: { modal: true },\n                    }}\n                    className=\"no-decoration color-white-80\"\n                  >\n                    Login\n                  </Link>\n                </Button>\n              )}\n            </li>\n          </ul>\n          <div\n            onClick={this.burgerClicked}\n            className={`ham mobile-device ${this.state.menuClicked}`}\n          >\n            <div className=\"bar\"></div>\n            <div className=\"bar\"></div>\n            <div className=\"bar\"></div>\n          </div>\n          <SwipeableDrawer\n            anchor={\"right\"}\n            open={this.state.navOpen}\n            onClose={this.handleNavClose}\n            onOpen={this.handleNavOpen}\n          >\n            <div className=\"sidebar sidebar-active nav-links-mobile-container\">\n              {this.props.auth.token !== null ? (\n                <div className=\"profile-header\">\n                  <div className=\"avatar-container\">\n                    <Avatar variant=\"rounded\">\n                      {this.props.profile.first_name\n                        ? this.props.profile.first_name[0]\n                        : null}\n                    </Avatar>\n                    <div className=\"profile-details\">\n                      <h4>\n                        {this.props.profile.first_name\n                          ? this.props.profile.first_name +\n                            \" \" +\n                            this.props.profile.last_name\n                          : null}\n                      </h4>\n                      <p>\n                        {this.props.profile.email\n                          ? this.props.profile.email\n                          : null}\n                      </p>\n                    </div>\n                  </div>\n                  <Link\n                    className=\"my-profile-container no-decoration\"\n                    to=\"/profile\"\n                  >\n                    <Button className=\"my-profile-btn\" variant=\"contained\">\n                      My Profile\n                    </Button>\n                  </Link>\n                </div>\n              ) : (\n                <Button\n                  href=\"#course\"\n                  variant=\"contained\"\n                  className=\"courses-btn-mobile\"\n                >\n                  Courses\n                </Button>\n              )}\n\n              <ul className=\"nav-links-mobile\">\n                <li\n                  className={`nav-link-mobile ${\n                    this.state.pathname.includes(\"home\")\n                      ? \"active-page-mobile\"\n                      : \"\"\n                  }`}\n                >\n                  <Link className=\"no-decoration\" to=\"/home\">\n                    Home\n                  </Link>\n                </li>\n                <li\n                  className={`nav-link-mobile ${\n                    this.state.pathname.includes(\"competition\")\n                      ? \"active-page-mobile\"\n                      : \"\"\n                  }`}\n                >\n                  <Link className=\"no-decoration\" to=\"/competition\">\n                    CodeCarnival\n                  </Link>\n                </li>\n                <li\n                  className={`nav-link-mobile ${\n                    this.state.pathname.includes(\"refer\")\n                      ? \"active-page-mobile\"\n                      : \"\"\n                  }`}\n                >\n                  <Link className=\"no-decoration\" to=\"/refer\">\n                    Refer\n                  </Link>\n                </li>\n                <li className=\"nav-link-mobile pages-mobile\">\n                  <List component=\"nav\" aria-labelledby=\"nested-list-subheader\">\n                    <ListItem\n                      button\n                      onClick={this.handlePageMenuClick}\n                      disableGutters\n                    >\n                      <ListItemText primary=\"Pages\" />\n                      {this.mobileNav ? <ExpandLess /> : <ExpandMore />}\n                    </ListItem>\n                    <Collapse\n                      in={this.state.mobileNav}\n                      timeout=\"auto\"\n                      unmountOnExit\n                    >\n                      <List component=\"div\" disablePadding>\n                        <ListItem button>\n                          <Link className=\"no-decoration\" to=\"/about\">\n                            <ListItemText primary=\"About Us\" />\n                          </Link>\n                        </ListItem>\n                        <ListItem button>\n                          <Link className=\"no-decoration\" to=\"/contact\">\n                            <ListItemText primary=\"Contact\" />\n                          </Link>\n                        </ListItem>\n                        <ListItem button>\n                          <Link className=\"no-decoration\" to=\"/home\">\n                            <ListItemText primary=\"Our Team\" />\n                          </Link>\n                        </ListItem>\n                      </List>\n                    </Collapse>\n                  </List>\n                </li>\n                <li\n                  className={`nav-link-mobile ${\n                    this.state.pathname.includes(\"/courses/1\")\n                      ? \"active-page-mobile\"\n                      : \"\"\n                  }`}\n                >\n                  <Link className=\"no-decoration\" to=\"/courses/1\">\n                    Courses\n                  </Link>\n                </li>\n                {/* <li className=\"nav-link-mobile\"> Courses </li> */}\n              </ul>\n              {this.props.auth.token !== null ? (\n                <Button\n                  onClick={() => this.props.authLogout(this.onSuccessLogout)}\n                  variant=\"contained\"\n                  className=\"login-btn-mobile logout-btn-mobile\"\n                >\n                  Logout\n                </Button>\n              ) : (\n                <Link\n                  to={{\n                    pathname: \"/login\",\n                    state: { modal: true },\n                  }}\n                  style={{ width: \"100%\" }}\n                  className=\"no-decoration color-white\"\n                >\n                  <Button variant=\"contained\" className=\"login-btn-mobile\">\n                    Login\n                  </Button>\n                </Link>\n              )}\n            </div>\n          </SwipeableDrawer>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default withRouter(Header);\n"],"sourceRoot":""}