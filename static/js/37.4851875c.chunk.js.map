{"version":3,"sources":["components/AssignmentsEvaluate/AssignmentsEvaluate.js"],"names":["createData","name","school","std","assignment","marks","rows","descendingComparator","a","b","orderBy","getComparator","order","stableSort","array","comparator","stabilizedThis","map","el","index","sort","headCells","id","numeric","disablePadding","label","EnhancedTableHead","props","classes","onSelectAllClick","numSelected","rowCount","onRequestSort","padding","indeterminate","checked","onChange","inputProps","headCell","align","sortDirection","active","direction","onClick","property","event","className","visuallyHidden","useToolbarStyles","makeStyles","theme","root","paddingLeft","spacing","paddingRight","highlight","palette","type","color","secondary","main","backgroundColor","lighten","light","text","primary","dark","title","flex","formControl","margin","minWidth","maxWidth","EnhancedTableToolbar","openClassComentDialog","allCourses","console","log","clsx","variant","component","aria-label","htmlFor","defaultValue","filter","e","course","value","useStyles","width","paper","marginBottom","table","border","clip","height","overflow","position","top","withoutLabel","marginTop","textField","Row","row","isItemSelected","labelId","handleClick","handleOpenMarkDialog","hover","role","aria-checked","tabIndex","selected","scope","size","style","borderColor","fontWeight","textTransform","endIcon","marginLeft","href","target","fontSize","AssignmentView","React","useState","setOrder","setOrderBy","setSelected","page","setPage","dense","setDense","rowsPerPage","setRowsPerPage","classComentDialog","setclassComentDialog","markDialog","setmarkDialog","mark","setMark","remark","setRemark","messageToSelect","setmessageToSelect","selectedIndex","indexOf","newSelected","concat","slice","length","handlecloseclassComentDialog","handleCloseMarkDialog","emptyRows","Math","min","elevation","aria-labelledby","newSelecteds","n","colSpan","rowsPerPageOptions","count","onChangePage","newPage","onChangeRowsPerPage","parseInt","control","fullWidth","open","onClose","onSubmit","preventDefault","required","float","endAdornment","aria-describedby","isNaN","rowsMin","placeholder","prototype","PropTypes","object","isRequired","bool","string","func"],"mappings":"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","file":"static/js/37.4851875c.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport clsx from \"clsx\";\nimport { lighten, makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Switch from \"@material-ui/core/Switch\";\nimport AnnouncementIcon from \"@material-ui/icons/Announcement\";\nimport Button from \"@material-ui/core/Button\";\nimport ArrowRightIcon from \"@material-ui/icons/ArrowRight\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Input from \"@material-ui/core/Input\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport TextareaAutosize from \"@material-ui/core/TextareaAutosize\";\nimport NativeSelect from \"@material-ui/core/NativeSelect\";\nimport AddCommentIcon from \"@material-ui/icons/AddComment\";\n\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\n\nfunction createData(name, school, std, assignment, marks) {\n  return { name, school, std, assignment, marks };\n}\nconst rows = [\n  createData(\"Cupcake\", 305, 3.7, 67, 4.3),\n  createData(\"Donut\", 452, 25.0, 51, 4.9),\n  createData(\"Eclair\", 262, 16.0, 24, 6.0),\n  createData(\"Frozen yoghurt\", 159, 6.0, 24, 4.0),\n  createData(\"Gingerbread\", 356, 16.0, 49, 3.9),\n  createData(\"Honeycomb\", 408, 3.2, 87, 6.5),\n  createData(\"Ice cream sandwich\", 237, 9.0, 37, 4.3),\n  createData(\"Jelly Bean\", 375, 0.0, 94, 0.0),\n  createData(\"KitKat\", 518, 26.0, 65, 7.0),\n  createData(\"Lollipop\", 392, 0.2, 98, 0.0),\n  createData(\"Marshmallow\", 318, 0, 81, 2.0),\n  createData(\"Nougat\", 360, 19.0, 9, 37.0),\n  createData(\"Oreo\", 437, 18.0, 63, 4.0),\n];\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === \"desc\"\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map((el) => el[0]);\n}\n\nconst headCells = [\n  { id: \"name\", numeric: false, disablePadding: false, label: \"Student Name\" },\n  { id: \"school\", numeric: false, disablePadding: false, label: \"School\" },\n  { id: \"std\", numeric: false, disablePadding: false, label: \"Class\" },\n  {\n    id: \"assignment\",\n    numeric: false,\n    disablePadding: false,\n    label: \"Assignment\",\n  },\n  { id: \"marks\", numeric: false, disablePadding: false, label: \"Marks\" },\n];\n\nfunction EnhancedTableHead(props) {\n  const {\n    classes,\n    onSelectAllClick,\n    order,\n    orderBy,\n    numSelected,\n    rowCount,\n    onRequestSort,\n  } = props;\n  const createSortHandler = (property) => (event) => {\n    onRequestSort(event, property);\n  };\n  return (\n    <TableHead>\n      <TableRow>\n        <TableCell padding=\"checkbox\">\n          <Checkbox\n            indeterminate={numSelected > 0 && numSelected < rowCount}\n            checked={rowCount > 0 && numSelected === rowCount}\n            onChange={onSelectAllClick}\n            inputProps={{ \"aria-label\": \"select all desserts\" }}\n          />\n        </TableCell>\n        {headCells.map((headCell) => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? \"right\" : \"left\"}\n            padding={headCell.disablePadding ? \"none\" : \"default\"}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : \"asc\"}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === \"desc\" ? \"sorted descending\" : \"sorted ascending\"}\n                </span>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf([\"asc\", \"desc\"]).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles((theme) => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === \"light\"\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: \"1 1 100%\",\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n    maxWidth: 150,\n  },\n}));\n\nconst EnhancedTableToolbar = (props) => {\n  const classes = useToolbarStyles();\n  const { numSelected, openClassComentDialog, allCourses } = props;\n  console.log(allCourses, \"............................................\");\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography\n          className={classes.title}\n          color=\"inherit\"\n          variant=\"subtitle1\"\n          component=\"div\"\n        >\n          {numSelected} selected\n        </Typography>\n      ) : null}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Add Comment to Selected\">\n          <IconButton aria-label=\"comment\" onClick={openClassComentDialog}>\n            <AnnouncementIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <>\n          <FormControl className={classes.formControl}>\n            <InputLabel htmlFor=\"uncontrolled-native\">Course</InputLabel>\n            <NativeSelect\n              defaultValue={allCourses.filter((e) => e.id === 1).id}\n              inputProps={{\n                name: \"name\",\n                id: \"uncontrolled-native\",\n              }}\n            >\n              {allCourses.map((course) => {\n                return (\n                  <option value={course.id} key={course.id}>\n                    {\" \"}\n                    {course.title}{\" \"}\n                  </option>\n                );\n              })}\n            </NativeSelect>\n          </FormControl>\n          <FormControl className={classes.formControl}>\n            <InputLabel htmlFor=\"uncontrolled-native\">Module</InputLabel>\n            <NativeSelect\n              defaultValue={30}\n              inputProps={{\n                name: \"name\",\n                id: \"uncontrolled-native\",\n              }}\n            >\n              <option value={10}>Ten</option>\n              <option value={20}>Twenty</option>\n              <option value={30}>\n                ThirtyThirtyThirtyThirtyThirtyThirtyThirtyThirtyThirtyThirtyThirtyThirtyThirtyThirtyThirtyThirtyThirty\n              </option>\n            </NativeSelect>\n          </FormControl>\n        </>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n  openClassComentDialog: PropTypes.func.isRequired,\n  allCourses: PropTypes.array.isRequired,\n};\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n  },\n  paper: {\n    width: \"100%\",\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: \"rect(0 0 0 0)\",\n    height: 1,\n    margin: -1,\n    overflow: \"hidden\",\n    padding: 0,\n    position: \"absolute\",\n    top: 20,\n    width: 1,\n  },\n  margin: {\n    margin: theme.spacing(1),\n  },\n  withoutLabel: {\n    marginTop: theme.spacing(3),\n  },\n  textField: {\n    width: \"20ch\",\n  },\n}));\n\nfunction Row(props) {\n  const {\n    row,\n    isItemSelected,\n    labelId,\n    handleClick,\n    handleOpenMarkDialog,\n  } = props;\n  return (\n    <TableRow\n      hover\n      role=\"checkbox\"\n      aria-checked={isItemSelected}\n      tabIndex={-1}\n      key={row.name}\n      selected={isItemSelected}\n    >\n      <TableCell padding=\"checkbox\">\n        <Checkbox\n          onClick={(event) => handleClick(event, row.name)}\n          checked={isItemSelected}\n          inputProps={{ \"aria-labelledby\": labelId }}\n        />\n      </TableCell>\n      <TableCell component=\"th\" id={labelId} scope=\"row\" padding=\"none\">\n        {row.name}\n      </TableCell>\n      <TableCell align=\"left\">{row.school}</TableCell>\n      <TableCell align=\"left\">{row.std}</TableCell>\n      <TableCell align=\"left\">\n        <Button\n          variant=\"outlined\"\n          size=\"small\"\n          color=\"primary\"\n          style={{\n            color: \"#06bfad\",\n            borderColor: \"#06bfad\",\n            fontWeight: \"500\",\n            textTransform: \"capitalize\",\n          }}\n          endIcon={<ArrowRightIcon style={{ marginLeft: \"-11px\" }} />}\n          href=\"https://material-ui.com/components/buttons/\"\n          target=\"_blank\"\n        >\n          View\n        </Button>\n      </TableCell>\n      <TableCell align=\"left\">\n        <IconButton aria-label=\"comment\" onClick={handleOpenMarkDialog}>\n          <AddCommentIcon fontSize=\"small\" style={{ color: \"#e03268\" }} />\n        </IconButton>\n      </TableCell>\n    </TableRow>\n  );\n}\nRow.prototype = {\n  row: PropTypes.object.isRequired,\n  isItemSelected: PropTypes.bool.isRequired,\n  labelId: PropTypes.string.isRequired,\n  handleClick: PropTypes.func.isRequired,\n  handleOpenMarkDialog: PropTypes.func.isRequired,\n};\nexport default function AssignmentView(props) {\n  const classes = useStyles();\n  const [order, setOrder] = React.useState(\"asc\");\n  const [orderBy, setOrderBy] = React.useState(\"school\");\n  const [selected, setSelected] = React.useState([]);\n  const [page, setPage] = React.useState(0);\n  const [dense, setDense] = React.useState(false);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n  const [classComentDialog, setclassComentDialog] = React.useState(false);\n  const [markDialog, setmarkDialog] = React.useState(false);\n  const [mark, setMark] = React.useState(\"\");\n  const [remark, setRemark] = React.useState(\"\");\n  const [messageToSelect, setmessageToSelect] = React.useState(\"\");\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === \"asc\";\n    setOrder(isAsc ? \"desc\" : \"asc\");\n    setOrderBy(property);\n  };\n\n  const handleSelectAllClick = (event) => {\n    if (event.target.checked) {\n      const newSelecteds = rows.map((n) => n.name);\n      setSelected(newSelecteds);\n      return;\n    }\n    setSelected([]);\n  };\n\n  const handleClick = (event, name) => {\n    const selectedIndex = selected.indexOf(name);\n    let newSelected = [];\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1)\n      );\n    }\n\n    setSelected(newSelected);\n    console.log(newSelected);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n  const handleChangeDense = (event) => {\n    setDense(event.target.checked);\n  };\n\n  const handlecloseclassComentDialog = (event) => {\n    // Message to Selected Student Dialog\n    setclassComentDialog(false); // close dialog\n  };\n  const handleOpenClassDialog = (event) => {\n    // Open dialog\n    setclassComentDialog(true);\n  };\n\n  const handleComentSubmit = (event) => {\n    // submit send message to selected student form\n    event.preventDefault();\n    console.log(messageToSelect);\n    setmessageToSelect(\"\");\n    setclassComentDialog(false);\n  };\n\n  const handleMarksSubmit = (event) => {\n    event.preventDefault();\n    console.log(mark, remark);\n    setmarkDialog(false);\n    setMark(\"\");\n    setRemark(\"\");\n  };\n\n  const handleOpenMarkDialog = (event) => {\n    // Dialog for giving Marks\n    setmarkDialog(true); // Open dialog\n  };\n  const handleCloseMarkDialog = (event) => {\n    // close dialog\n    setmarkDialog(false);\n  };\n\n  const isSelected = (name) => selected.indexOf(name) !== -1;\n  const emptyRows =\n    rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n  console.log(\n    props.allCourses,\n    \"================ ----------------------------------\"\n  );\n  return (\n    <div\n      className={(classes.root, \"container-fluid\")}\n      style={{ marginTop: \"7em\" }}\n    >\n      <Paper className={classes.paper} elevation={3}>\n        <EnhancedTableToolbar\n          numSelected={selected.length}\n          openClassComentDialog={handleOpenClassDialog}\n          allCourses={props.allCourses}\n        />\n        <TableContainer>\n          <Table\n            className={classes.table}\n            aria-labelledby=\"tableTitle\"\n            size={dense ? \"small\" : \"medium\"}\n            aria-label=\"enhanced table\"\n          >\n            <EnhancedTableHead\n              classes={classes}\n              numSelected={selected.length}\n              order={order}\n              orderBy={orderBy}\n              onSelectAllClick={handleSelectAllClick}\n              onRequestSort={handleRequestSort}\n              rowCount={rows.length}\n            />\n            <TableBody>\n              {stableSort(rows, getComparator(order, orderBy))\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                .map((row, index) => {\n                  const isItemSelected = isSelected(row.name);\n                  const labelId = `enhanced-table-checkbox-${index}`;\n\n                  return (\n                    <Row\n                      key={row.name}\n                      row={row}\n                      labelId={labelId}\n                      isItemSelected={isItemSelected}\n                      handleClick={handleClick}\n                      handleOpenMarkDialog={handleOpenMarkDialog}\n                    />\n                  );\n                })}\n              {emptyRows > 0 && (\n                <TableRow style={{ height: (dense ? 33 : 53) * emptyRows }}>\n                  <TableCell colSpan={6} />\n                </TableRow>\n              )}\n            </TableBody>\n          </Table>\n        </TableContainer>\n        <TablePagination\n          rowsPerPageOptions={[5, 10, 25]}\n          component=\"div\"\n          count={rows.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onChangePage={handleChangePage}\n          onChangeRowsPerPage={handleChangeRowsPerPage}\n        />\n      </Paper>\n      <FormControlLabel\n        control={<Switch checked={dense} onChange={handleChangeDense} />}\n        label=\"Dense padding\"\n      />\n      <Dialog // ClassComent Dialog\n        fullWidth\n        maxWidth=\"md\"\n        open={classComentDialog}\n        onClose={handlecloseclassComentDialog}\n        aria-labelledby=\"max-width-dialog-title\"\n      >\n        <DialogTitle id=\"max-width-dialog-title\">\n          Send Message to Selected Students\n        </DialogTitle>\n        <DialogContent className=\"pb-4\">\n          <form onSubmit={handleComentSubmit}>\n            <div className=\"form-group\">\n              <label htmlFor=\"exampleFormControlTextarea1\">Message</label>\n              <textarea\n                className=\"form-control\"\n                id=\"exampleFormControlTextarea1\"\n                rows=\"3\"\n                required\n                name=\"messageToSelect\"\n                onChange={(e) => setmessageToSelect(e.target.value)}\n                value={messageToSelect}\n              ></textarea>\n            </div>\n            <Button\n              type=\"submit\"\n              variant=\"contained\"\n              color=\"primary\"\n              style={{\n                float: \"right\",\n                backgroundColor: \"#06bfad\",\n                textTransform: \"capitalize\",\n              }}\n            >\n              Send\n            </Button>\n            <Button\n              onClick={handlecloseclassComentDialog}\n              color=\"primary\"\n              style={{ float: \"right\", textTransform: \"capitalize\" }}\n            >\n              Close\n            </Button>\n          </form>\n        </DialogContent>\n      </Dialog>\n      <Dialog\n        fullWidth\n        maxWidth=\"sm\"\n        open={markDialog}\n        onClose={handleCloseMarkDialog}\n        aria-labelledby=\"max-width-dialog-title\"\n      >\n        <DialogTitle id=\"max-width-dialog-title\">Evaluate</DialogTitle>\n        <DialogContent className=\"pb-4\">\n          <form onSubmit={handleMarksSubmit}>\n            <FormControl\n              className={clsx(\n                classes.margin,\n                classes.withoutLabel,\n                classes.textField\n              )}\n            >\n              <Input\n                id=\"standard-adornment-weight\"\n                endAdornment={\n                  <InputAdornment position=\"end\"> / 10</InputAdornment>\n                }\n                aria-describedby=\"standard-weight-helper-text\"\n                inputProps={{\n                  \"aria-label\": \"weight\",\n                }}\n                style={{ maxWidth: \"110px\" }}\n                type=\"text\"\n                name=\"marks\"\n                value={mark}\n                onChange={(e) => {\n                  if (!isNaN(e.target.value) && e.target.value <= 10) {\n                    setMark(e.target.value);\n                  }\n                }}\n                required\n              />\n              <FormHelperText id=\"standard-weight-helper-text\">\n                Marks\n              </FormHelperText>\n            </FormControl>\n            <TextareaAutosize\n              aria-label=\"minimum height\"\n              rowsMin={3}\n              placeholder=\"Remark\"\n              value={remark}\n              onChange={(e) => setRemark(e.target.value)}\n            />\n            <div className=\"mt-2\" style={{ float: \"right\" }}>\n              <Button\n                onClick={handleCloseMarkDialog}\n                color=\"primary\"\n                style={{ textTransform: \"capitalize\" }}\n              >\n                Close\n              </Button>\n              <Button\n                type=\"submit\"\n                color=\"primary\"\n                style={{\n                  backgroundColor: \"#06bfad\",\n                  color: \"#fff\",\n                  textTransform: \"capitalize\",\n                }}\n              >\n                Done\n              </Button>\n            </div>\n          </form>\n        </DialogContent>\n      </Dialog>\n    </div>\n  );\n}\n"],"sourceRoot":""}