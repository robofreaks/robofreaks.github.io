{"version":3,"sources":["components/Thread.js"],"names":["useStyles","makeStyles","theme","card","width","content","cardAns","marginLeft","marginTop","avatar","backgroundColor","ThreadDetailComponent","answers","classes","length","map","ans","className","style","aria-label","author","toUpperCase","title","subheader","date","variant","color","component","description","Answer","open","handleClose","postQuestion","setfiles","files","Close","fullWidth","onClose","scroll","aria-labelledby","aria-describedby","id","outline","onClick","margin","dividers","onSubmit","values","console","log","handleSubmit","row","marginBottom","htmlFor","model","name","placeholder","type","onChange","e","target","accept","display","Object","file","ThreadDetail","thread","followUp","useState","setOpen","setFiles","toggleModal","maxWidth","flex","followups","Files","close","prevFiles","arr","arr1","arr2","i","j","push","splice","filter","a","pop","concat","finalObj","keys","Thread","props","thread_id","useParams","success","failed","history","useEffect","fetchThreadDetail","Number","forum","threadDetail","constructor"],"mappings":"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","file":"static/js/29.bdf22f3d.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { Container } from \"@material-ui/core\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Footer from \"./Footer/Footer\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport { Grid } from \"@material-ui/core\";\nimport { Control, LocalForm } from \"react-redux-form\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport \"./Forum/Forum.css\";\nimport CustomLoader from \"./Loader\";\n\nconst useStyles = makeStyles((theme) => ({\n  card: {\n    width: \"100%\",\n  },\n  content: {\n    width: \"100%\",\n  },\n  cardAns: {\n    width: \"98%\",\n    marginLeft: \"2%\",\n    marginTop: \"10px\",\n  },\n  avatar: {\n    backgroundColor: \"#e03268 !important\",\n  },\n}));\n\nfunction ThreadDetailComponent({ answers }) {\n  const classes = useStyles();\n  if (answers.length > 0) {\n    return answers.map((ans) => {\n      return (\n        <Card className={classes.cardAns}>\n          <CardHeader\n            style={{ backgroundColor: \"#f6f3f1\" }}\n            avatar={\n              <Avatar aria-label=\"recipe\" className={classes.avatar}>\n                {ans.author[0].toUpperCase()}\n              </Avatar>\n            }\n            title={ans.author}\n            subheader={ans.date}\n          />\n          <CardContent className={classes.content}>\n            <Typography variant=\"body2\" color=\"textPrimary\" component=\"p\">\n              {ans.description}\n            </Typography>\n            {/* <img src={ans.assets[0].image} width={50} height={50} /> */}\n          </CardContent>\n        </Card>\n      );\n    });\n  } else {\n    return <div>No answers yet</div>;\n  }\n}\n\nfunction Answer({ open, handleClose, postQuestion, setfiles, files }) {\n  // const [file, setFile] = useState([]);\n\n  const handleSubmit = (values, files) => {\n    console.log(values, files);\n    handleClose();\n    postQuestion(values, files);\n  };\n\n  const getFile = (e) => {\n    setfiles(e.target.files, false);\n  };\n\n  const Close = () => {\n    setfiles([], true);\n    handleClose();\n  };\n\n  return (\n    <Dialog\n      className=\"editModal\"\n      fullWidth\n      open={open}\n      onClose={Close}\n      scroll=\"body\"\n      aria-labelledby=\"scroll-dialog-title\"\n      aria-describedby=\"scroll-dialog-description\"\n    >\n      <div className=\"d-flex flex-row\">\n        <DialogTitle id=\"scroll-dialog-title\">Answer</DialogTitle>\n        <div className=\"ml-auto\">\n          <DialogActions>\n            <Button style={{ backgroundColor: \"white\", outline: \"none\" }}>\n              <CloseIcon\n                onClick={Close}\n                style={{ backgroundColor: \"white\", margin: 10 }}\n              />\n            </Button>\n          </DialogActions>\n        </div>\n      </div>\n      <DialogContent dividers={true}>\n        <LocalForm onSubmit={(values) => handleSubmit(values, files)}>\n          <Grid row style={{ marginBottom: 15 }}>\n            <label htmlFor=\"Answer\">Your Answer</label>\n            <Control\n              component=\"textarea\"\n              model=\".Answer\"\n              id=\"Answer\"\n              name=\"Answer\"\n              placeholder=\"Answer\"\n              style={{ width: \"100%\" }}\n            />\n          </Grid>\n          <Grid row style={{ marginBottom: 15 }}>\n            <Button\n              variant=\"contained\"\n              component=\"label\"\n              color=\"secondary\"\n              fullWidth\n            >\n              Attachments &nbsp;\n              <input\n                type=\"file\"\n                id=\"files\"\n                name=\"files\"\n                // multiple\n                onChange={getFile}\n                accept=\"image/*\"\n                style={{ outline: \"none\", display: \"none\" }}\n              />\n            </Button>\n            {Object.values(files).map((file) => {\n              return <div>{file.name}</div>;\n            })}\n          </Grid>\n          <Grid row style={{ marginBottom: 15 }}>\n            <Button\n              variant=\"contained\"\n              type=\"submit\"\n              fullWidth={true}\n              style={{\n                backgroundColor: \"#09bfad\",\n                color: \"white\",\n                outline: \"none\",\n              }}\n            >\n              Post\n            </Button>\n          </Grid>\n        </LocalForm>\n      </DialogContent>\n    </Dialog>\n  );\n}\n\nfunction ThreadDetail({ thread, followUp }) {\n  const [open, setOpen] = useState(false);\n  const [files, setFiles] = useState([]);\n\n  const toggleModal = () => {\n    setOpen(!open);\n  };\n\n  const postQuestion = (values, files) => {\n    console.log(thread.id, values.description, files);\n    followUp(thread.id, values.Answer, files);\n  };\n\n  const setfiles = (Files, close) => {\n    console.log(\"calllleeeeeeeeddddddddddd\");\n    if (close) {\n      setFiles([]);\n    } else {\n      console.log(Files);\n      let prevFiles = files;\n      let arr = [];\n      let arr1 = [];\n      let arr2 = [];\n      for (let i = 0; i < Files.length; ++i) {\n        for (let j = 0; j < prevFiles.length; ++j) {\n          if (Files[i].name === prevFiles[j].name) {\n            console.log(\"files[i].name\", Files[i].name);\n            console.log(\"prevFiles[j].name\", prevFiles[j].name);\n            arr.push(i);\n          }\n        }\n      }\n      console.log(\"arr\", arr);\n      arr1 = Object.values(Files);\n      console.log(\"arr1 before\", arr1);\n      for (let i = 0; i < arr.length; ++i) {\n        console.log(i);\n        arr1.splice(arr[i], 1, null);\n        console.log(arr1);\n      }\n      arr1 = arr1.filter((a) => a !== null);\n      console.log(\"arr1\", arr1);\n      arr2 = Object.values(prevFiles);\n      arr2.pop();\n      console.log(\"arr2\", arr2);\n      arr1 = arr2.concat(arr1);\n      let finalObj = { ...arr1 };\n      finalObj.length = Object.keys(finalObj).length;\n      console.log(\"final\", finalObj);\n      setFiles(finalObj);\n      console.log(files);\n    }\n  };\n\n  const classes = useStyles();\n  return (\n    <>\n      <Container className=\"forum\" maxWidth=\"lg\" style={{ marginBottom: 40 }}>\n        <div style={{ display: \"flex\", flex: \"row\" }}>\n          <div>\n            <h2>{thread.title}</h2>\n            <small>{thread.date}</small>\n            <small>\n              &nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;{thread.followups.length}{\" \"}\n              answers\n            </small>\n          </div>\n          <div style={{ marginLeft: \"auto\" }}>\n            <Button\n              variant=\"contained\"\n              style={{\n                backgroundColor: \"#09bfad\",\n                color: \"white\",\n                outline: \"none\",\n                marginLeft: \"auto\",\n              }}\n              onClick={toggleModal}\n            >\n              Answer\n            </Button>\n          </div>\n        </div>\n        <hr />\n        <Card className={classes.card}>\n          <CardHeader\n            style={{ backgroundColor: \"#f6f3f1\" }}\n            avatar={\n              <Avatar aria-label=\"recipe\" className={classes.avatar}>\n                {thread.author[0].toUpperCase()}\n              </Avatar>\n            }\n            title={thread.author}\n            subheader={thread.date}\n          />\n          <CardContent>\n            <Typography variant=\"body2\" color=\"textPrimary\" component=\"p\">\n              {thread.description}\n            </Typography>\n          </CardContent>\n        </Card>\n        <hr />\n        <ThreadDetailComponent answers={thread.followups} />\n        <hr />\n        <div style={{ width: \"100%\" }}>\n          <Button\n            variant=\"contained\"\n            style={{\n              backgroundColor: \"#09bfad\",\n              color: \"white\",\n              outline: \"none\",\n              marginLeft: \"auto\",\n            }}\n            onClick={toggleModal}\n          >\n            Your Answer\n          </Button>\n        </div>\n        <Answer\n          open={open}\n          handleClose={toggleModal}\n          postQuestion={postQuestion}\n          setfiles={setfiles}\n          files={files}\n        />\n      </Container>\n      <Footer />\n    </>\n  );\n}\n\nfunction Thread(props) {\n  let { thread_id } = useParams();\n\n  const success = () => {\n    console.log(\"success\");\n  };\n\n  const failed = () => {\n    props.history.push(\"/home\");\n  };\n\n  useEffect(() => {\n    props.fetchThreadDetail(Number(thread_id), success, failed);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  console.log(\n    Object.keys(props.forum.threadDetail).length === 0 &&\n      props.forum.threadDetail.constructor === Object\n  );\n\n  if (\n    Object.keys(props.forum.threadDetail).length > 0 &&\n    props.forum.threadDetail.constructor === Object\n  ) {\n    console.log(props.forum.threadDetail);\n    return (\n      <ThreadDetail\n        thread={props.forum.threadDetail}\n        followUp={props.followUp}\n      />\n    );\n  } else {\n    return (\n      <div className=\"loader\">\n        <CustomLoader />\n      </div>\n    );\n  }\n}\n\nexport default Thread;\n"],"sourceRoot":""}